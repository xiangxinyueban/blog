{"ast":null,"code":"import _defineProperty from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _radioEmits;\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport { ref, inject, computed } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps } from '../../../utils/vue/props.mjs';\nimport { useSizeProp, useSize, useDisabled } from '../../../hooks/use-common-props/index.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber, isBoolean } from '@vueuse/core';\nimport { radioGroupKey } from '../../../tokens/radio.mjs';\nvar radioPropsBase = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  label: {\n    type: [String, Number, Boolean],\n    \"default\": \"\"\n  }\n});\nvar radioProps = buildProps(_objectSpread(_objectSpread({}, radioPropsBase), {}, {\n  modelValue: {\n    type: [String, Number, Boolean],\n    \"default\": \"\"\n  },\n  name: {\n    type: String,\n    \"default\": \"\"\n  },\n  border: Boolean\n}));\nvar radioEmits = (_radioEmits = {}, _defineProperty(_radioEmits, UPDATE_MODEL_EVENT, function (val) {\n  return isString(val) || isNumber(val) || isBoolean(val);\n}), _defineProperty(_radioEmits, \"change\", function change(val) {\n  return isString(val) || isNumber(val) || isBoolean(val);\n}), _radioEmits);\n\nvar useRadio = function useRadio(props, emit) {\n  var radioRef = ref();\n  var radioGroup = inject(radioGroupKey, void 0);\n  var isGroup = computed(function () {\n    return !!radioGroup;\n  });\n  var modelValue = computed({\n    get: function get() {\n      return isGroup.value ? radioGroup.modelValue : props.modelValue;\n    },\n    set: function set(val) {\n      if (isGroup.value) {\n        radioGroup.changeEvent(val);\n      } else {\n        emit(UPDATE_MODEL_EVENT, val);\n      }\n\n      radioRef.value.checked = props.modelValue === props.label;\n    }\n  });\n  var size = useSize(computed(function () {\n    return radioGroup == null ? void 0 : radioGroup.size;\n  }));\n  var disabled = useDisabled(computed(function () {\n    return radioGroup == null ? void 0 : radioGroup.disabled;\n  }));\n  var focus = ref(false);\n  var tabIndex = computed(function () {\n    return disabled.value || isGroup.value && modelValue.value !== props.label ? -1 : 0;\n  });\n  return {\n    radioRef: radioRef,\n    isGroup: isGroup,\n    radioGroup: radioGroup,\n    focus: focus,\n    size: size,\n    disabled: disabled,\n    tabIndex: tabIndex,\n    modelValue: modelValue\n  };\n};\n\nexport { radioEmits, radioProps, radioPropsBase, useRadio };","map":{"version":3,"mappings":"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","names":["radioPropsBase","buildProps","size","useSizeProp","disabled","Boolean","label","type","String","Number","radioProps","modelValue","name","border","radioEmits","UPDATE_MODEL_EVENT","val","isString","isNumber","isBoolean","useRadio","props","emit","radioRef","ref","radioGroup","inject","radioGroupKey","isGroup","computed","get","value","set","changeEvent","checked","useSize","useDisabled","focus","tabIndex"],"sources":["../../../../../../packages/components/radio/src/radio.ts"],"sourcesContent":["import { computed, inject, ref } from 'vue'\nimport { buildProps, isBoolean, isNumber, isString } from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { radioGroupKey } from '@element-plus/tokens'\nimport { useDisabled, useSize, useSizeProp } from '@element-plus/hooks'\nimport type { ExtractPropTypes, SetupContext } from 'vue'\n\nexport const radioPropsBase = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  label: {\n    type: [String, Number, Boolean],\n    default: '',\n  },\n})\nexport const radioProps = buildProps({\n  ...radioPropsBase,\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: '',\n  },\n  name: {\n    type: String,\n    default: '',\n  },\n  border: Boolean,\n} as const)\nexport type RadioProps = ExtractPropTypes<typeof radioProps>\n\nexport const radioEmits = {\n  [UPDATE_MODEL_EVENT]: (val: string | number | boolean) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n  change: (val: string | number | boolean) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n}\nexport type RadioEmits = typeof radioEmits\n\nexport const useRadio = (\n  props: { label: RadioProps['label']; modelValue?: RadioProps['modelValue'] },\n  emit: SetupContext<RadioEmits>['emit']\n) => {\n  const radioRef = ref<HTMLInputElement>()\n  const radioGroup = inject(radioGroupKey, undefined)\n  const isGroup = computed(() => !!radioGroup)\n  const modelValue = computed<RadioProps['modelValue']>({\n    get() {\n      return isGroup.value ? radioGroup!.modelValue : props.modelValue!\n    },\n    set(val) {\n      if (isGroup.value) {\n        radioGroup!.changeEvent(val)\n      } else {\n        emit(UPDATE_MODEL_EVENT, val)\n      }\n      radioRef.value!.checked = props.modelValue === props.label\n    },\n  })\n\n  const size = useSize(computed(() => radioGroup?.size))\n  const disabled = useDisabled(computed(() => radioGroup?.disabled))\n  const focus = ref(false)\n  const tabIndex = computed(() => {\n    return disabled.value || (isGroup.value && modelValue.value !== props.label)\n      ? -1\n      : 0\n  })\n\n  return {\n    radioRef,\n    isGroup,\n    radioGroup,\n    focus,\n    size,\n    disabled,\n    tabIndex,\n    modelValue,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}