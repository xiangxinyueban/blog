{"ast":null,"code":"import _createClass from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport { getCurrentInstance, unref, nextTick } from 'vue';\nimport '../../../../hooks/index.mjs';\nimport useWatcher from './watcher.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\n\nfunction replaceColumn(array, column) {\n  return array.map(function (item) {\n    var _a;\n\n    if (item.id === column.id) {\n      return column;\n    } else if ((_a = item.children) == null ? void 0 : _a.length) {\n      item.children = replaceColumn(item.children, column);\n    }\n\n    return item;\n  });\n}\n\nfunction sortColumn(array) {\n  array.forEach(function (item) {\n    var _a, _b;\n\n    item.no = (_a = item.getColumnIndex) == null ? void 0 : _a.call(item);\n\n    if ((_b = item.children) == null ? void 0 : _b.length) {\n      sortColumn(item.children);\n    }\n  });\n  array.sort(function (cur, pre) {\n    return cur.no - pre.no;\n  });\n}\n\nfunction useStore() {\n  var instance = getCurrentInstance();\n  var watcher = useWatcher();\n  var ns = useNamespace(\"table\");\n  var mutations = {\n    setData: function setData(states, data) {\n      var dataInstanceChanged = unref(states._data) !== data;\n      states.data.value = data;\n      states._data.value = data;\n      instance.store.execQuery();\n      instance.store.updateCurrentRowData();\n      instance.store.updateExpandRows();\n      instance.store.updateTreeData(instance.store.states.defaultExpandAll.value);\n\n      if (unref(states.reserveSelection)) {\n        instance.store.assertRowKey();\n        instance.store.updateSelectionByRowKey();\n      } else {\n        if (dataInstanceChanged) {\n          instance.store.clearSelection();\n        } else {\n          instance.store.cleanSelection();\n        }\n      }\n\n      instance.store.updateAllSelected();\n\n      if (instance.$ready) {\n        instance.store.scheduleLayout();\n      }\n    },\n    insertColumn: function insertColumn(states, column, parent) {\n      var array = unref(states._columns);\n      var newColumns = [];\n\n      if (!parent) {\n        array.push(column);\n        newColumns = array;\n      } else {\n        if (parent && !parent.children) {\n          parent.children = [];\n        }\n\n        parent.children.push(column);\n        newColumns = replaceColumn(array, parent);\n      }\n\n      sortColumn(newColumns);\n      states._columns.value = newColumns;\n\n      if (column.type === \"selection\") {\n        states.selectable.value = column.selectable;\n        states.reserveSelection.value = column.reserveSelection;\n      }\n\n      if (instance.$ready) {\n        instance.store.updateColumns();\n        instance.store.scheduleLayout();\n      }\n    },\n    removeColumn: function removeColumn(states, column, parent) {\n      var array = unref(states._columns) || [];\n\n      if (parent) {\n        parent.children.splice(parent.children.findIndex(function (item) {\n          return item.id === column.id;\n        }), 1);\n\n        if (parent.children.length === 0) {\n          delete parent.children;\n        }\n\n        states._columns.value = replaceColumn(array, parent);\n      } else {\n        var index = array.indexOf(column);\n\n        if (index > -1) {\n          array.splice(index, 1);\n          states._columns.value = array;\n        }\n      }\n\n      if (instance.$ready) {\n        instance.store.updateColumns();\n        instance.store.scheduleLayout();\n      }\n    },\n    sort: function sort(states, options) {\n      var prop = options.prop,\n          order = options.order,\n          init = options.init;\n\n      if (prop) {\n        var column = unref(states.columns).find(function (column2) {\n          return column2.property === prop;\n        });\n\n        if (column) {\n          column.order = order;\n          instance.store.updateSort(column, prop, order);\n          instance.store.commit(\"changeSortCondition\", {\n            init: init\n          });\n        }\n      }\n    },\n    changeSortCondition: function changeSortCondition(states, options) {\n      var column = states.sortingColumn,\n          prop = states.sortProp,\n          order = states.sortOrder;\n\n      if (unref(order) === null) {\n        states.sortingColumn.value = null;\n        states.sortProp.value = null;\n      }\n\n      var ingore = {\n        filter: true\n      };\n      instance.store.execQuery(ingore);\n\n      if (!options || !(options.silent || options.init)) {\n        instance.emit(\"sort-change\", {\n          column: unref(column),\n          prop: unref(prop),\n          order: unref(order)\n        });\n      }\n\n      instance.store.updateTableScrollY();\n    },\n    filterChange: function filterChange(_states, options) {\n      var column = options.column,\n          values = options.values,\n          silent = options.silent;\n      var newFilters = instance.store.updateFilters(column, values);\n      instance.store.execQuery();\n\n      if (!silent) {\n        instance.emit(\"filter-change\", newFilters);\n      }\n\n      instance.store.updateTableScrollY();\n    },\n    toggleAllSelection: function toggleAllSelection() {\n      instance.store.toggleAllSelection();\n    },\n    rowSelectedChanged: function rowSelectedChanged(_states, row) {\n      instance.store.toggleRowSelection(row);\n      instance.store.updateAllSelected();\n    },\n    setHoverRow: function setHoverRow(states, row) {\n      states.hoverRow.value = row;\n    },\n    setCurrentRow: function setCurrentRow(_states, row) {\n      instance.store.updateCurrentRow(row);\n    }\n  };\n\n  var commit = function commit(name) {\n    var mutations2 = instance.store.mutations;\n\n    if (mutations2[name]) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      mutations2[name].apply(instance, [instance.store.states].concat(args));\n    } else {\n      throw new Error(\"Action not found: \".concat(name));\n    }\n  };\n\n  var updateTableScrollY = function updateTableScrollY() {\n    nextTick(function () {\n      return instance.layout.updateScrollY.apply(instance.layout);\n    });\n  };\n\n  return _objectSpread(_objectSpread({\n    ns: ns\n  }, watcher), {}, {\n    mutations: mutations,\n    commit: commit,\n    updateTableScrollY: updateTableScrollY\n  });\n}\n\nvar HelperStore = /*#__PURE__*/_createClass(function HelperStore() {\n  _classCallCheck(this, HelperStore);\n\n  this.Return = useStore();\n});\n\nexport { useStore as default };","map":{"version":3,"mappings":"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","names":["replaceColumn","array","column","map","item","_a","id","children","length","sortColumn","forEach","_b","no","getColumnIndex","call","sort","cur","pre","useStore","instance","getCurrentInstance","watcher","useWatcher","ns","useNamespace","mutations","setData","states","data","dataInstanceChanged","unref","_data","value","store","execQuery","updateCurrentRowData","updateExpandRows","updateTreeData","defaultExpandAll","reserveSelection","assertRowKey","updateSelectionByRowKey","clearSelection","cleanSelection","updateAllSelected","$ready","scheduleLayout","insertColumn","parent","_columns","newColumns","push","type","selectable","updateColumns","removeColumn","splice","findIndex","index","indexOf","options","prop","order","init","columns","find","column2","property","updateSort","commit","changeSortCondition","sortingColumn","sortProp","sortOrder","ingore","filter","silent","emit","updateTableScrollY","filterChange","_states","values","newFilters","updateFilters","toggleAllSelection","rowSelectedChanged","row","toggleRowSelection","setHoverRow","hoverRow","setCurrentRow","updateCurrentRow","name","mutations2","args","apply","concat","Error","nextTick","layout","updateScrollY","HelperStore","Return"],"sources":["../../../../../../../packages/components/table/src/store/index.ts"],"sourcesContent":["import { getCurrentInstance, nextTick, unref } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport useWatcher from './watcher'\n\nimport type { Ref } from 'vue'\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type { Filter, Sort, Table } from '../table/defaults'\n\ninterface WatcherPropsData<T> {\n  data: Ref<T[]>\n  rowKey: Ref<string>\n}\n\nfunction replaceColumn<T>(\n  array: TableColumnCtx<T>[],\n  column: TableColumnCtx<T>\n) {\n  return array.map((item) => {\n    if (item.id === column.id) {\n      return column\n    } else if (item.children?.length) {\n      item.children = replaceColumn(item.children, column)\n    }\n    return item\n  })\n}\n\nfunction sortColumn<T>(array: TableColumnCtx<T>[]) {\n  array.forEach((item) => {\n    item.no = item.getColumnIndex?.()\n    if (item.children?.length) {\n      sortColumn(item.children)\n    }\n  })\n  array.sort((cur, pre) => cur.no - pre.no)\n}\n\nfunction useStore<T>() {\n  const instance = getCurrentInstance() as Table<T>\n  const watcher = useWatcher<T>()\n  const ns = useNamespace('table')\n  type StoreStates = typeof watcher.states\n  const mutations = {\n    setData(states: StoreStates, data: T[]) {\n      const dataInstanceChanged = unref(states._data) !== data\n      states.data.value = data\n      states._data.value = data\n      instance.store.execQuery()\n      // 数据变化，更新部分数据。\n      // 没有使用 computed，而是手动更新部分数据 https://github.com/vuejs/vue/issues/6660#issuecomment-331417140\n      instance.store.updateCurrentRowData()\n      instance.store.updateExpandRows()\n      instance.store.updateTreeData(\n        instance.store.states.defaultExpandAll.value\n      )\n      if (unref(states.reserveSelection)) {\n        instance.store.assertRowKey()\n        instance.store.updateSelectionByRowKey()\n      } else {\n        if (dataInstanceChanged) {\n          instance.store.clearSelection()\n        } else {\n          instance.store.cleanSelection()\n        }\n      }\n      instance.store.updateAllSelected()\n      if (instance.$ready) {\n        instance.store.scheduleLayout()\n      }\n    },\n\n    insertColumn(\n      states: StoreStates,\n      column: TableColumnCtx<T>,\n      parent: TableColumnCtx<T>\n    ) {\n      const array = unref(states._columns)\n      let newColumns = []\n      if (!parent) {\n        array.push(column)\n        newColumns = array\n      } else {\n        if (parent && !parent.children) {\n          parent.children = []\n        }\n        parent.children.push(column)\n        newColumns = replaceColumn(array, parent)\n      }\n      sortColumn(newColumns)\n      states._columns.value = newColumns\n      if (column.type === 'selection') {\n        states.selectable.value = column.selectable\n        states.reserveSelection.value = column.reserveSelection\n      }\n      if (instance.$ready) {\n        instance.store.updateColumns() // hack for dynamics insert column\n        instance.store.scheduleLayout()\n      }\n    },\n\n    removeColumn(\n      states: StoreStates,\n      column: TableColumnCtx<T>,\n      parent: TableColumnCtx<T>\n    ) {\n      const array = unref(states._columns) || []\n      if (parent) {\n        parent.children.splice(\n          parent.children.findIndex((item) => item.id === column.id),\n          1\n        )\n        if (parent.children.length === 0) {\n          delete parent.children\n        }\n        states._columns.value = replaceColumn(array, parent)\n      } else {\n        const index = array.indexOf(column)\n        if (index > -1) {\n          array.splice(index, 1)\n          states._columns.value = array\n        }\n      }\n\n      if (instance.$ready) {\n        instance.store.updateColumns() // hack for dynamics remove column\n        instance.store.scheduleLayout()\n      }\n    },\n\n    sort(states: StoreStates, options: Sort) {\n      const { prop, order, init } = options\n      if (prop) {\n        const column = unref(states.columns).find(\n          (column) => column.property === prop\n        )\n        if (column) {\n          column.order = order\n          instance.store.updateSort(column, prop, order)\n          instance.store.commit('changeSortCondition', { init })\n        }\n      }\n    },\n\n    changeSortCondition(states: StoreStates, options: Sort) {\n      // 修复 pr https://github.com/ElemeFE/element/pull/15012 导致的 bug\n      const { sortingColumn: column, sortProp: prop, sortOrder: order } = states\n      if (unref(order) === null) {\n        states.sortingColumn.value = null\n        states.sortProp.value = null\n      }\n      const ingore = { filter: true }\n      instance.store.execQuery(ingore)\n\n      if (!options || !(options.silent || options.init)) {\n        instance.emit('sort-change', {\n          column: unref(column),\n          prop: unref(prop),\n          order: unref(order),\n        })\n      }\n\n      instance.store.updateTableScrollY()\n    },\n\n    filterChange(_states: StoreStates, options: Filter<T>) {\n      const { column, values, silent } = options\n      const newFilters = instance.store.updateFilters(column, values)\n      instance.store.execQuery()\n\n      if (!silent) {\n        instance.emit('filter-change', newFilters)\n      }\n      instance.store.updateTableScrollY()\n    },\n\n    toggleAllSelection() {\n      instance.store.toggleAllSelection()\n    },\n\n    rowSelectedChanged(_states, row: T) {\n      instance.store.toggleRowSelection(row)\n      instance.store.updateAllSelected()\n    },\n\n    setHoverRow(states: StoreStates, row: T) {\n      states.hoverRow.value = row\n    },\n\n    setCurrentRow(_states, row: T) {\n      instance.store.updateCurrentRow(row)\n    },\n  }\n  const commit = function (name: keyof typeof mutations, ...args) {\n    const mutations = instance.store.mutations\n    if (mutations[name]) {\n      mutations[name].apply(instance, [instance.store.states].concat(args))\n    } else {\n      throw new Error(`Action not found: ${name}`)\n    }\n  }\n  const updateTableScrollY = function () {\n    nextTick(() => instance.layout.updateScrollY.apply(instance.layout))\n  }\n  return {\n    ns,\n    ...watcher,\n    mutations,\n    commit,\n    updateTableScrollY,\n  }\n}\nexport default useStore\n\nclass HelperStore<T> {\n  Return = useStore<T>()\n}\ntype StoreFilter = Record<string, string[]>\ntype Store<T> = HelperStore<T>['Return']\nexport type { WatcherPropsData, Store, StoreFilter }\n"]},"metadata":{},"sourceType":"module"}