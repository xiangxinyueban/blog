{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { isNumber } from '@vueuse/core';\nvar imageProps = buildProps({\n  appendToBody: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  hideOnClickModal: {\n    type: Boolean,\n    \"default\": false\n  },\n  src: {\n    type: String,\n    \"default\": \"\"\n  },\n  fit: {\n    type: String,\n    values: [\"\", \"contain\", \"cover\", \"fill\", \"none\", \"scale-down\"],\n    \"default\": \"\"\n  },\n  lazy: {\n    type: Boolean,\n    \"default\": false\n  },\n  scrollContainer: {\n    type: definePropType([String, Object])\n  },\n  previewSrcList: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return mutable([]);\n    }\n  },\n  previewTeleported: {\n    type: Boolean,\n    \"default\": false\n  },\n  zIndex: {\n    type: Number\n  },\n  initialIndex: {\n    type: Number,\n    \"default\": 0\n  },\n  infinite: {\n    type: Boolean,\n    \"default\": true\n  }\n});\nvar imageEmits = {\n  error: function error(evt) {\n    return evt instanceof Event;\n  },\n  \"switch\": function _switch(val) {\n    return isNumber(val);\n  },\n  close: function close() {\n    return true;\n  }\n};\nexport { imageEmits, imageProps };","map":{"version":3,"mappings":";;;;;AAMY,IAACA,UAAU,GAAGC,UAAU,CAAC;AACnCC,cAAY,EAAE;AACZC,QAAI,EAAEC,OADM;AAEZ,eAAS,KAAK;AAFF,GADqB;AAKnCC,kBAAgB,EAAE;AAChBF,QAAI,EAAEC,OADU;AAEhB,eAAS;AAFO,GALiB;AASnCE,KAAG,EAAE;AACHH,QAAI,EAAEI,MADH;AAEH,eAAS;AAFN,GAT8B;AAanCC,KAAG,EAAE;AACHL,QAAI,EAAEI,MADH;AAEHE,UAAM,EAAE,CAAC,EAAD,EAAK,SAAL,EAAgB,OAAhB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,YAAzC,CAFL;AAGH,eAAS;AAHN,GAb8B;AAkBnCC,MAAI,EAAE;AACJP,QAAI,EAAEC,OADF;AAEJ,eAAS;AAFL,GAlB6B;AAsBnCO,iBAAe,EAAE;AACfR,QAAI,EAAES,cAAc,CAAC,CAACL,MAAD,EAASM,MAAT,CAAD;AADL,GAtBkB;AAyBnCC,gBAAc,EAAE;AACdX,QAAI,EAAES,cAAc,CAACG,KAAD,CADN;AAEd,eAAS;AAAA,aAAMC,OAAO,CAAC,EAAD,CAAb;AAAA;AAFK,GAzBmB;AA6BnCC,mBAAiB,EAAE;AACjBd,QAAI,EAAEC,OADW;AAEjB,eAAS;AAFQ,GA7BgB;AAiCnCc,QAAM,EAAE;AACNf,QAAI,EAAEgB;AADA,GAjC2B;AAoCnCC,cAAY,EAAE;AACZjB,QAAI,EAAEgB,MADM;AAEZ,eAAS;AAFG,GApCqB;AAwCnCE,UAAQ,EAAE;AACRlB,QAAI,EAAEC,OADE;AAER,eAAS;AAFD;AAxCyB,CAAD,CAAxB;AA6CA,IAACkB,UAAU,GAAG;AACxBC,OAAK,EAAE,eAACC,GAAD;AAAA,WAASA,GAAG,YAAYC,KAAxB;AAAA,GADiB;AAExB,YAAQ,iBAACC,GAAD;AAAA,WAASC,QAAQ,CAACD,GAAD,CAAjB;AAAA,GAFgB;AAGxBE,OAAK,EAAE;AAAA,WAAM,IAAN;AAAA;AAHiB,CAAd","names":["imageProps","buildProps","appendToBody","type","Boolean","hideOnClickModal","src","String","fit","values","lazy","scrollContainer","definePropType","Object","previewSrcList","Array","mutable","previewTeleported","zIndex","Number","initialIndex","infinite","imageEmits","error","evt","Event","val","isNumber","close"],"sources":["../../../../../../packages/components/image/src/image.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  isNumber,\n  mutable,\n} from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const imageProps = buildProps({\n  appendToBody: {\n    type: Boolean,\n    default: undefined,\n  },\n  hideOnClickModal: {\n    type: Boolean,\n    default: false,\n  },\n  src: {\n    type: String,\n    default: '',\n  },\n  fit: {\n    type: String,\n    values: ['', 'contain', 'cover', 'fill', 'none', 'scale-down'],\n    default: '',\n  },\n  lazy: {\n    type: Boolean,\n    default: false,\n  },\n  scrollContainer: {\n    type: definePropType<string | HTMLElement | undefined>([String, Object]),\n  },\n  previewSrcList: {\n    type: definePropType<string[]>(Array),\n    default: () => mutable([] as const),\n  },\n  previewTeleported: {\n    type: Boolean,\n    default: false,\n  },\n  zIndex: {\n    type: Number,\n  },\n  initialIndex: {\n    type: Number,\n    default: 0,\n  },\n  infinite: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\nexport type ImageProps = ExtractPropTypes<typeof imageProps>\n\nexport const imageEmits = {\n  error: (evt: Event) => evt instanceof Event,\n  switch: (val: number) => isNumber(val),\n  close: () => true,\n}\nexport type ImageEmits = typeof imageEmits\n"]},"metadata":{},"sourceType":"module"}