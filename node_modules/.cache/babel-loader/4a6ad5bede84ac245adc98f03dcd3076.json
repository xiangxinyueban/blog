{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { defineComponent, ref, nextTick, onMounted, provide, reactive, toRefs, watch, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nimport '../../../constants/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { radioGroupProps, radioGroupEmits } from './radio-group.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormItem } from '../../../hooks/use-form-item/index.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { radioGroupKey } from '../../../tokens/radio.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElRadioGroup\",\n  props: radioGroupProps,\n  emits: radioGroupEmits,\n  setup: function setup(props, ctx) {\n    var ns = useNamespace(\"radio\");\n    var radioGroupRef = ref();\n\n    var _useFormItem = useFormItem(),\n        formItem = _useFormItem.formItem;\n\n    var changeEvent = function changeEvent(value) {\n      ctx.emit(UPDATE_MODEL_EVENT, value);\n      nextTick(function () {\n        return ctx.emit(\"change\", value);\n      });\n    };\n\n    var handleKeydown = function handleKeydown(e) {\n      if (!radioGroupRef.value) return;\n      var target = e.target;\n      var className = target.nodeName === \"INPUT\" ? \"[type=radio]\" : \"[role=radio]\";\n      var radios = radioGroupRef.value.querySelectorAll(className);\n      var length = radios.length;\n      var index = Array.from(radios).indexOf(target);\n      var roleRadios = radioGroupRef.value.querySelectorAll(\"[role=radio]\");\n      var nextIndex = null;\n\n      switch (e.code) {\n        case EVENT_CODE.left:\n        case EVENT_CODE.up:\n          e.stopPropagation();\n          e.preventDefault();\n          nextIndex = index === 0 ? length - 1 : index - 1;\n          break;\n\n        case EVENT_CODE.right:\n        case EVENT_CODE.down:\n          e.stopPropagation();\n          e.preventDefault();\n          nextIndex = index === length - 1 ? 0 : index + 1;\n          break;\n\n        default:\n          break;\n      }\n\n      if (nextIndex === null) return;\n      roleRadios[nextIndex].click();\n      roleRadios[nextIndex].focus();\n    };\n\n    onMounted(function () {\n      var radios = radioGroupRef.value.querySelectorAll(\"[type=radio]\");\n      var firstLabel = radios[0];\n\n      if (!Array.from(radios).some(function (radio) {\n        return radio.checked;\n      }) && firstLabel) {\n        firstLabel.tabIndex = 0;\n      }\n    });\n    provide(radioGroupKey, reactive(_objectSpread(_objectSpread({}, toRefs(props)), {}, {\n      changeEvent: changeEvent\n    })));\n    watch(function () {\n      return props.modelValue;\n    }, function () {\n      return formItem == null ? void 0 : formItem.validate(\"change\")[\"catch\"](function (err) {\n        return debugWarn(err);\n      });\n    });\n    return {\n      ns: ns,\n      radioGroupRef: radioGroupRef,\n      handleKeydown: handleKeydown\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"radioGroupRef\",\n    \"class\": normalizeClass(_ctx.ns.b(\"group\")),\n    role: \"radiogroup\",\n    onKeydown: _cache[0] || (_cache[0] = function () {\n      return _ctx.handleKeydown && _ctx.handleKeydown.apply(_ctx, arguments);\n    })\n  }, [renderSlot(_ctx.$slots, \"default\")], 34);\n}\n\nvar RadioGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/radio/src/radio-group.vue\"]]);\n\nexport { RadioGroup as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AA6BA,IAAKA,YAAaC,eAAa;AAC7BC,MAAM,gBADuB;AAE7BC,OAAO,iBAFsB;AAG7BC,OAAO,iBAHsB;AAK7BC,OAL6B,iBAKvBF,KALuB,EAKhBG,GALgB,EAKX;AACV,aAAKC,aAAa,OAAb,CAAL;AACN,QAAMC,gBAAgBC,GAAoB,EAA1C;;AACM,uBAAeC,WAAY,EAA3B;AAAA,QAAEC,QAAF,gBAAEA,QAAF;;AAEA,sBAAc,SAAdC,WAAc,CAACC,KAAD,EAA0C;AACxDP,eAAKQ,kBAAL,EAAyBD,KAAzB;AACJE,eAAS;AAAA,eAAMT,IAAIU,IAAJ,CAAS,QAAT,EAAmBH,KAAnB,CAAN;AAAA,OAAT;AACF,KAHM;;AAKA,wBAAgB,SAAhBI,aAAgB,CAACC,CAAD,EAAsB;AAC1C,UAAI,CAACV,aAAc,MAAnB,EAA0B;AAG1B,UAAMW,SAASD,CAAE,OAAjB;AACA,UAAME,SACJ,UAAOC,QAAP,KAAoB,OAApB,GAA8B,cAA9B,GAA+C,cADjD;AAEA,UAAMC,MACJ,iBAAcT,KAAd,CAAoBU,gBAApB,CAAuDH,SAAvD,CADF;AAEA,UAAMI,SAASF,MAAO,OAAtB;AACA,UAAMG,QAAQC,KAAM,KAAN,CAAWJ,MAAX,EAAmBK,OAAnB,CAA2BR,MAA3B,CAAd;AACA,UAAMS,UACJ,iBAAcf,KAAd,CAAoBU,gBAApB,CAAuD,cAAvD,CADF;AAGA,UAAIM,SAA2B,OAA/B;;AACA,cAAQX,CAAE,KAAV;AAAU,aACHY,UAAW,KADR;AACQ,aACXA,UAAW,GADA;AAEdZ,YAAEa,eAAF;AACAb,YAAEc,cAAF;AACAH,sBAAYJ,KAAU,MAAV,GAAcD,MAAS,IAAvB,GAA2BC,KAAQ,IAA/C;AACA;;AAAA,aACGK,UAAW,MADd;AACc,aACXA,UAAW,KADA;AAEdZ,YAAEa,eAAF;AACAb,YAAEc,cAAF;AACAH,sBAAYJ,KAAU,cAAS,CAAnB,GAAuB,CAAvB,GAA2BA,KAAQ,IAA/C;AACA;;AAAA;AAEA;AAdJ;;AAgBA,UAAII,SAAc,SAAlB,EAAwB;AACxBD,iBAAWC,SAAX,EAAsBI,KAAtB;AACAL,iBAAWC,SAAX,EAAsBK,KAAtB;AACF,KAlCM;;AAoCNC,cAAU,YAAM;AACd,UAAMb,MACJ,iBAAcT,KAAd,CAAqBU,gBAArB,CAAwD,cAAxD,CADF;AAEA,UAAMa,aAAad,MAAO,GAA1B;;AACI,WAACI,KAAM,KAAN,CAAWJ,MAAX,EAAmBe,IAAnB,CAAwB,UAACC,KAAD;AAAA,eAAWA,MAAMC,OAAjB;AAAA,OAAxB,CAAD,IAAsDH,UAAtD,EAAkE;AACpEA,mBAAWI,QAAX,GAAsB,CAAtB;AACF;AACD,KAPD;AASAC,YACEC,aADF,EAEEC,QAAS,iCACJC,OAAOzC,KAAP,CADI;AAEPS;AAFO,OAFX;AAQAiC,UACE;AAAA,aAAM1C,MAAM2C,UAAZ;AAAA,KADF,EAEE;AAAA,aAAMnC,YAAmB,IAAnB,GAAmB,MAAnB,GAA6BA,QAAO,SAAP,CAAyB,QAAzB,WACrC;AAAA;AAAA,OADqC,CAAnC;AAAA,KAFF;AAKO;AACLoC,YADK;AAELvC,kCAFK;AAGLS;AAHK;AAKT;AA9E6B,EAA/B;;;sBA5BE+B,kBAOM;AANJvC,OAAI,iBAMA;AALH,aAAKwC,cAAE,SAAGC,CAAH,CAAI,OAAJ,EAKJ;AAJJC,QAAK,cAID;AAHHC,eAAOC,MAAE,GAAF,KAAEA;AAAA;AAAA,KAAF;AAGJ,KAHM,CAEVC,UAAQ,wBAFE,CAGN,EADI,EACJ","names":["_sfc_main","defineComponent","name","props","emits","setup","ctx","useNamespace","radioGroupRef","ref","useFormItem","formItem","changeEvent","value","UPDATE_MODEL_EVENT","nextTick","emit","handleKeydown","e","target","className","nodeName","radios","querySelectorAll","length","index","Array","indexOf","roleRadios","nextIndex","EVENT_CODE","stopPropagation","preventDefault","click","focus","onMounted","firstLabel","some","radio","checked","tabIndex","provide","radioGroupKey","reactive","toRefs","watch","modelValue","ns","_createElementBlock","_normalizeClass","b","role","onKeydown","_cache","_renderSlot"],"sources":["../../../../../../packages/components/radio/src/radio-group.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"radioGroupRef\"\n    :class=\"ns.b('group')\"\n    role=\"radiogroup\"\n    @keydown=\"handleKeydown\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  nextTick,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport { EVENT_CODE, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { radioGroupKey } from '@element-plus/tokens'\nimport { useFormItem, useNamespace } from '@element-plus/hooks'\nimport { debugWarn } from '@element-plus/utils'\nimport { radioGroupEmits, radioGroupProps } from './radio-group'\nimport type { RadioGroupProps } from '..'\n\nexport default defineComponent({\n  name: 'ElRadioGroup',\n  props: radioGroupProps,\n  emits: radioGroupEmits,\n\n  setup(props, ctx) {\n    const ns = useNamespace('radio')\n    const radioGroupRef = ref<HTMLDivElement>()\n    const { formItem } = useFormItem()\n\n    const changeEvent = (value: RadioGroupProps['modelValue']) => {\n      ctx.emit(UPDATE_MODEL_EVENT, value)\n      nextTick(() => ctx.emit('change', value))\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (!radioGroupRef.value) return\n\n      // 左右上下按键 可以在 radio 组内切换不同选项\n      const target = e.target as HTMLInputElement\n      const className =\n        target.nodeName === 'INPUT' ? '[type=radio]' : '[role=radio]'\n      const radios =\n        radioGroupRef.value.querySelectorAll<HTMLInputElement>(className)\n      const length = radios.length\n      const index = Array.from(radios).indexOf(target)\n      const roleRadios =\n        radioGroupRef.value.querySelectorAll<HTMLInputElement>('[role=radio]')\n\n      let nextIndex: number | null = null\n      switch (e.code) {\n        case EVENT_CODE.left:\n        case EVENT_CODE.up:\n          e.stopPropagation()\n          e.preventDefault()\n          nextIndex = index === 0 ? length - 1 : index - 1\n          break\n        case EVENT_CODE.right:\n        case EVENT_CODE.down:\n          e.stopPropagation()\n          e.preventDefault()\n          nextIndex = index === length - 1 ? 0 : index + 1\n          break\n        default:\n          break\n      }\n      if (nextIndex === null) return\n      roleRadios[nextIndex].click()\n      roleRadios[nextIndex].focus()\n    }\n\n    onMounted(() => {\n      const radios =\n        radioGroupRef.value!.querySelectorAll<HTMLInputElement>('[type=radio]')\n      const firstLabel = radios[0]\n      if (!Array.from(radios).some((radio) => radio.checked) && firstLabel) {\n        firstLabel.tabIndex = 0\n      }\n    })\n\n    provide(\n      radioGroupKey,\n      reactive({\n        ...toRefs(props),\n        changeEvent,\n      })\n    )\n\n    watch(\n      () => props.modelValue,\n      () => formItem?.validate('change').catch((err) => debugWarn(err))\n    )\n\n    return {\n      ns,\n      radioGroupRef,\n      handleKeydown,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}