{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport { defineComponent, shallowRef, ref, computed, onMounted, openBlock, createBlock, Transition, unref, withCtx, createElementBlock, normalizeStyle, normalizeClass, withModifiers, renderSlot, createVNode, createCommentVNode } from 'vue';\nimport { useThrottleFn, useEventListener } from '@vueuse/core';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../utils/index.mjs';\nimport { CaretTop } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { backtopProps, backtopEmits } from './backtop.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { easeInOutCubic } from '../../../utils/animation.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nvar _hoisted_1 = [\"onClick\"];\nvar __default__ = {\n  name: \"ElBacktop\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: backtopProps,\n  emits: backtopEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var COMPONENT_NAME = \"ElBacktop\";\n    var ns = useNamespace(\"backtop\");\n    var el = shallowRef();\n    var container = shallowRef();\n    var visible = ref(false);\n    var backTopStyle = computed(function () {\n      return {\n        right: \"\".concat(props.right, \"px\"),\n        bottom: \"\".concat(props.bottom, \"px\")\n      };\n    });\n\n    var scrollToTop = function scrollToTop() {\n      if (!el.value) return;\n      var beginTime = Date.now();\n      var beginValue = el.value.scrollTop;\n\n      var frameFunc = function frameFunc() {\n        if (!el.value) return;\n        var progress = (Date.now() - beginTime) / 500;\n\n        if (progress < 1) {\n          el.value.scrollTop = beginValue * (1 - easeInOutCubic(progress));\n          requestAnimationFrame(frameFunc);\n        } else {\n          el.value.scrollTop = 0;\n        }\n      };\n\n      requestAnimationFrame(frameFunc);\n    };\n\n    var handleScroll = function handleScroll() {\n      if (el.value) visible.value = el.value.scrollTop >= props.visibilityHeight;\n    };\n\n    var handleClick = function handleClick(event) {\n      scrollToTop();\n      emit(\"click\", event);\n    };\n\n    var handleScrollThrottled = useThrottleFn(handleScroll, 300);\n    onMounted(function () {\n      var _a;\n\n      container.value = document;\n      el.value = document.documentElement;\n\n      if (props.target) {\n        el.value = (_a = document.querySelector(props.target)) != null ? _a : void 0;\n\n        if (!el.value) {\n          throwError(COMPONENT_NAME, \"target is not existed: \".concat(props.target));\n        }\n\n        container.value = el.value;\n      }\n\n      useEventListener(container, \"scroll\", handleScrollThrottled);\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(Transition, {\n        name: \"\".concat(unref(ns).namespace.value, \"-fade-in\")\n      }, {\n        \"default\": withCtx(function () {\n          return [visible.value ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            style: normalizeStyle(unref(backTopStyle)),\n            \"class\": normalizeClass(unref(ns).b()),\n            onClick: withModifiers(handleClick, [\"stop\"])\n          }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n            return [createVNode(unref(ElIcon), {\n              \"class\": normalizeClass(unref(ns).e(\"icon\"))\n            }, {\n              \"default\": withCtx(function () {\n                return [createVNode(unref(CaretTop))];\n              }),\n              _: 1\n            }, 8, [\"class\"])];\n          })], 14, _hoisted_1)) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 8, [\"name\"]);\n    };\n  }\n}));\n\nvar Backtop = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/backtop/src/backtop.vue\"]]);\n\nexport { Backtop as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AASA;AACA;AACA;AACA;AAEA;AAAA;AACAA,2CADA;AAEAC;AAFA;AAAA;;AAKA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACAC;AACAC;AACA,SAHA,MAGA;AACAD;AACA;AACA,OATA;;AAUAC;AACA,KAfA;;AAgBA;AACA;AACA,KAFA;;AAGA;AACAC;AACAC;AACA,KAHA;;AAKA;AAEAC;AACA;;AACAC;AAEAL;;AACA;AACAA;;AACA;AACAM;AACA;;AACAD;AAEA;;AACAE;KAbA","names":["right","bottom","el","requestAnimationFrame","scrollToTop","emit","onMounted","container","throwError","useEventListener"],"sources":["../../../../../../packages/components/backtop/src/backtop.vue"],"sourcesContent":["<template>\n  <transition :name=\"`${ns.namespace.value}-fade-in`\">\n    <div\n      v-if=\"visible\"\n      :style=\"backTopStyle\"\n      :class=\"ns.b()\"\n      @click.stop=\"handleClick\"\n    >\n      <slot>\n        <el-icon :class=\"ns.e('icon')\"><caret-top /></el-icon>\n      </slot>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted, ref, shallowRef } from 'vue'\nimport { useEventListener, useThrottleFn } from '@vueuse/core'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { easeInOutCubic, throwError } from '@element-plus/utils'\nimport { CaretTop } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport { backtopEmits, backtopProps } from './backtop'\n\nconst COMPONENT_NAME = 'ElBacktop'\n\ndefineOptions({\n  name: 'ElBacktop',\n})\n\nconst props = defineProps(backtopProps)\nconst emit = defineEmits(backtopEmits)\n\nconst ns = useNamespace('backtop')\nconst el = shallowRef<HTMLElement>()\nconst container = shallowRef<Document | HTMLElement>()\nconst visible = ref(false)\n\nconst backTopStyle = computed(() => ({\n  right: `${props.right}px`,\n  bottom: `${props.bottom}px`,\n}))\n\nconst scrollToTop = () => {\n  if (!el.value) return\n  const beginTime = Date.now()\n  const beginValue = el.value.scrollTop\n  const frameFunc = () => {\n    if (!el.value) return\n    const progress = (Date.now() - beginTime) / 500\n    if (progress < 1) {\n      el.value.scrollTop = beginValue * (1 - easeInOutCubic(progress))\n      requestAnimationFrame(frameFunc)\n    } else {\n      el.value.scrollTop = 0\n    }\n  }\n  requestAnimationFrame(frameFunc)\n}\nconst handleScroll = () => {\n  if (el.value) visible.value = el.value.scrollTop >= props.visibilityHeight\n}\nconst handleClick = (event: MouseEvent) => {\n  scrollToTop()\n  emit('click', event)\n}\n\nconst handleScrollThrottled = useThrottleFn(handleScroll, 300)\n\nonMounted(() => {\n  container.value = document\n  el.value = document.documentElement\n\n  if (props.target) {\n    el.value = document.querySelector<HTMLElement>(props.target) ?? undefined\n    if (!el.value) {\n      throwError(COMPONENT_NAME, `target is not existed: ${props.target}`)\n    }\n    container.value = el.value\n  }\n\n  useEventListener(container, 'scroll', handleScrollThrottled)\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}