{"ast":null,"code":"import _asyncToGenerator from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { defineComponent, reactive, computed, toRefs, provide, watch, ref, onMounted, nextTick, onBeforeUnmount, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, createVNode, createBlock, createCommentVNode, Fragment, renderList } from 'vue';\nimport { ElInputNumber } from '../../input-number/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport SliderButton from './button.mjs';\nimport SliderMarker from './marker.mjs';\nimport { useMarks } from './useMarks.mjs';\nimport { useSlide } from './useSlide.mjs';\nimport { useStops } from './useStops.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { throwError, debugWarn } from '../../../utils/error.mjs';\nimport { on, off } from '../../../utils/dom/event.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElSlider\",\n  components: {\n    ElInputNumber: ElInputNumber,\n    SliderButton: SliderButton,\n    SliderMarker: SliderMarker\n  },\n  props: {\n    modelValue: {\n      type: [Number, Array],\n      \"default\": 0\n    },\n    min: {\n      type: Number,\n      \"default\": 0\n    },\n    max: {\n      type: Number,\n      \"default\": 100\n    },\n    step: {\n      type: Number,\n      \"default\": 1\n    },\n    showInput: {\n      type: Boolean,\n      \"default\": false\n    },\n    showInputControls: {\n      type: Boolean,\n      \"default\": true\n    },\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    inputSize: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    showStops: {\n      type: Boolean,\n      \"default\": false\n    },\n    showTooltip: {\n      type: Boolean,\n      \"default\": true\n    },\n    formatTooltip: {\n      type: Function,\n      \"default\": void 0\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    range: {\n      type: Boolean,\n      \"default\": false\n    },\n    vertical: {\n      type: Boolean,\n      \"default\": false\n    },\n    height: {\n      type: String,\n      \"default\": \"\"\n    },\n    debounce: {\n      type: Number,\n      \"default\": 300\n    },\n    label: {\n      type: String,\n      \"default\": void 0\n    },\n    tooltipClass: {\n      type: String,\n      \"default\": void 0\n    },\n    marks: Object\n  },\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var ns = useNamespace(\"slider\");\n    var initData = reactive({\n      firstValue: 0,\n      secondValue: 0,\n      oldValue: 0,\n      dragging: false,\n      sliderSize: 1\n    });\n\n    var _useSlide = useSlide(props, initData, emit),\n        elFormItem = _useSlide.elFormItem,\n        slider = _useSlide.slider,\n        firstButton = _useSlide.firstButton,\n        secondButton = _useSlide.secondButton,\n        sliderDisabled = _useSlide.sliderDisabled,\n        minValue = _useSlide.minValue,\n        maxValue = _useSlide.maxValue,\n        runwayStyle = _useSlide.runwayStyle,\n        barStyle = _useSlide.barStyle,\n        resetSize = _useSlide.resetSize,\n        emitChange = _useSlide.emitChange,\n        onSliderClick = _useSlide.onSliderClick,\n        setFirstValue = _useSlide.setFirstValue,\n        setSecondValue = _useSlide.setSecondValue;\n\n    var _useStops = useStops(props, initData, minValue, maxValue),\n        stops = _useStops.stops,\n        getStopStyle = _useStops.getStopStyle;\n\n    var sliderWrapperSize = useSize();\n    var sliderInputSize = computed(function () {\n      return props.inputSize || sliderWrapperSize.value;\n    });\n    var sliderKls = computed(function () {\n      return [ns.b(), ns.m(sliderWrapperSize.value), ns.is(\"vertical\", props.vertical), _defineProperty({}, ns.m(\"with-input\"), props.showInput)];\n    });\n    var markList = useMarks(props);\n    useWatch(props, initData, minValue, maxValue, emit, elFormItem);\n    var precision = computed(function () {\n      var precisions = [props.min, props.max, props.step].map(function (item) {\n        var decimal = \"\".concat(item).split(\".\")[1];\n        return decimal ? decimal.length : 0;\n      });\n      return Math.max.apply(null, precisions);\n    });\n\n    var _useLifecycle = useLifecycle(props, initData, resetSize),\n        sliderWrapper = _useLifecycle.sliderWrapper;\n\n    var _toRefs = toRefs(initData),\n        firstValue = _toRefs.firstValue,\n        secondValue = _toRefs.secondValue,\n        oldValue = _toRefs.oldValue,\n        dragging = _toRefs.dragging,\n        sliderSize = _toRefs.sliderSize;\n\n    var updateDragging = function updateDragging(val) {\n      initData.dragging = val;\n    };\n\n    provide(\"SliderProvider\", _objectSpread(_objectSpread({}, toRefs(props)), {}, {\n      sliderSize: sliderSize,\n      disabled: sliderDisabled,\n      precision: precision,\n      emitChange: emitChange,\n      resetSize: resetSize,\n      updateDragging: updateDragging\n    }));\n    return {\n      ns: ns,\n      firstValue: firstValue,\n      secondValue: secondValue,\n      oldValue: oldValue,\n      dragging: dragging,\n      sliderSize: sliderSize,\n      slider: slider,\n      firstButton: firstButton,\n      secondButton: secondButton,\n      sliderDisabled: sliderDisabled,\n      runwayStyle: runwayStyle,\n      barStyle: barStyle,\n      emitChange: emitChange,\n      onSliderClick: onSliderClick,\n      getStopStyle: getStopStyle,\n      setFirstValue: setFirstValue,\n      setSecondValue: setSecondValue,\n      stops: stops,\n      markList: markList,\n      sliderWrapper: sliderWrapper,\n      sliderWrapperSize: sliderWrapperSize,\n      sliderInputSize: sliderInputSize,\n      sliderKls: sliderKls\n    };\n  }\n});\n\nvar useWatch = function useWatch(props, initData, minValue, maxValue, emit, elFormItem) {\n  var _emit = function _emit(val) {\n    emit(UPDATE_MODEL_EVENT, val);\n    emit(INPUT_EVENT, val);\n  };\n\n  var valueChanged = function valueChanged() {\n    if (props.range) {\n      return ![minValue.value, maxValue.value].every(function (item, index) {\n        return item === initData.oldValue[index];\n      });\n    } else {\n      return props.modelValue !== initData.oldValue;\n    }\n  };\n\n  var setValues = function setValues() {\n    var _a, _b;\n\n    if (props.min > props.max) {\n      throwError(\"Slider\", \"min should not be greater than max.\");\n      return;\n    }\n\n    var val = props.modelValue;\n\n    if (props.range && Array.isArray(val)) {\n      if (val[1] < props.min) {\n        _emit([props.min, props.min]);\n      } else if (val[0] > props.max) {\n        _emit([props.max, props.max]);\n      } else if (val[0] < props.min) {\n        _emit([props.min, val[1]]);\n      } else if (val[1] > props.max) {\n        _emit([val[0], props.max]);\n      } else {\n        initData.firstValue = val[0];\n        initData.secondValue = val[1];\n\n        if (valueChanged()) {\n          (_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n            return debugWarn(err);\n          });\n          initData.oldValue = val.slice();\n        }\n      }\n    } else if (!props.range && typeof val === \"number\" && !Number.isNaN(val)) {\n      if (val < props.min) {\n        _emit(props.min);\n      } else if (val > props.max) {\n        _emit(props.max);\n      } else {\n        initData.firstValue = val;\n\n        if (valueChanged()) {\n          (_b = elFormItem.validate) == null ? void 0 : _b.call(elFormItem, \"change\")[\"catch\"](function (err) {\n            return debugWarn(err);\n          });\n          initData.oldValue = val;\n        }\n      }\n    }\n  };\n\n  setValues();\n  watch(function () {\n    return initData.dragging;\n  }, function (val) {\n    if (!val) {\n      setValues();\n    }\n  });\n  watch(function () {\n    return props.modelValue;\n  }, function (val, oldVal) {\n    if (initData.dragging || Array.isArray(val) && Array.isArray(oldVal) && val.every(function (item, index) {\n      return item === oldVal[index];\n    }) && initData.firstValue === val[0] && initData.secondValue === val[1]) {\n      return;\n    }\n\n    setValues();\n  }, {\n    deep: true\n  });\n  watch(function () {\n    return [props.min, props.max];\n  }, function () {\n    setValues();\n  });\n};\n\nvar useLifecycle = function useLifecycle(props, initData, resetSize) {\n  var sliderWrapper = ref(null);\n  onMounted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var valuetext;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (props.range) {\n              if (Array.isArray(props.modelValue)) {\n                initData.firstValue = Math.max(props.min, props.modelValue[0]);\n                initData.secondValue = Math.min(props.max, props.modelValue[1]);\n              } else {\n                initData.firstValue = props.min;\n                initData.secondValue = props.max;\n              }\n\n              initData.oldValue = [initData.firstValue, initData.secondValue];\n              valuetext = \"\".concat(initData.firstValue, \"-\").concat(initData.secondValue);\n            } else {\n              if (typeof props.modelValue !== \"number\" || Number.isNaN(props.modelValue)) {\n                initData.firstValue = props.min;\n              } else {\n                initData.firstValue = Math.min(props.max, Math.max(props.min, props.modelValue));\n              }\n\n              initData.oldValue = initData.firstValue;\n              valuetext = initData.firstValue;\n            }\n\n            sliderWrapper.value.setAttribute(\"aria-valuetext\", valuetext);\n            sliderWrapper.value.setAttribute(\"aria-label\", props.label ? props.label : \"slider between \".concat(props.min, \" and \").concat(props.max));\n            on(window, \"resize\", resetSize);\n            _context.next = 6;\n            return nextTick();\n\n          case 6:\n            resetSize();\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  onBeforeUnmount(function () {\n    off(window, \"resize\", resetSize);\n  });\n  return {\n    sliderWrapper: sliderWrapper\n  };\n};\n\nvar _hoisted_1 = [\"aria-valuemin\", \"aria-valuemax\", \"aria-orientation\", \"aria-disabled\"];\nvar _hoisted_2 = {\n  key: 1\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_slider_button = resolveComponent(\"slider-button\");\n\n  var _component_slider_marker = resolveComponent(\"slider-marker\");\n\n  var _component_el_input_number = resolveComponent(\"el-input-number\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"sliderWrapper\",\n    \"class\": normalizeClass(_ctx.sliderKls),\n    role: \"slider\",\n    \"aria-valuemin\": _ctx.min,\n    \"aria-valuemax\": _ctx.max,\n    \"aria-orientation\": _ctx.vertical ? \"vertical\" : \"horizontal\",\n    \"aria-disabled\": _ctx.sliderDisabled\n  }, [createElementVNode(\"div\", {\n    ref: \"slider\",\n    \"class\": normalizeClass([_ctx.ns.e(\"runway\"), {\n      \"show-input\": _ctx.showInput && !_ctx.range\n    }, _ctx.ns.is(\"disabled\", _ctx.sliderDisabled)]),\n    style: normalizeStyle(_ctx.runwayStyle),\n    onClick: _cache[0] || (_cache[0] = function () {\n      return _ctx.onSliderClick && _ctx.onSliderClick.apply(_ctx, arguments);\n    })\n  }, [createElementVNode(\"div\", {\n    \"class\": normalizeClass(_ctx.ns.e(\"bar\")),\n    style: normalizeStyle(_ctx.barStyle)\n  }, null, 6), createVNode(_component_slider_button, {\n    ref: \"firstButton\",\n    \"model-value\": _ctx.firstValue,\n    vertical: _ctx.vertical,\n    \"tooltip-class\": _ctx.tooltipClass,\n    \"onUpdate:modelValue\": _ctx.setFirstValue\n  }, null, 8, [\"model-value\", \"vertical\", \"tooltip-class\", \"onUpdate:modelValue\"]), _ctx.range ? (openBlock(), createBlock(_component_slider_button, {\n    key: 0,\n    ref: \"secondButton\",\n    \"model-value\": _ctx.secondValue,\n    vertical: _ctx.vertical,\n    \"tooltip-class\": _ctx.tooltipClass,\n    \"onUpdate:modelValue\": _ctx.setSecondValue\n  }, null, 8, [\"model-value\", \"vertical\", \"tooltip-class\", \"onUpdate:modelValue\"])) : createCommentVNode(\"v-if\", true), _ctx.showStops ? (openBlock(), createElementBlock(\"div\", _hoisted_2, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.stops, function (item, key) {\n    return openBlock(), createElementBlock(\"div\", {\n      key: key,\n      \"class\": normalizeClass(_ctx.ns.e(\"stop\")),\n      style: normalizeStyle(_ctx.getStopStyle(item))\n    }, null, 6);\n  }), 128))])) : createCommentVNode(\"v-if\", true), _ctx.markList.length > 0 ? (openBlock(), createElementBlock(Fragment, {\n    key: 2\n  }, [createElementVNode(\"div\", null, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.markList, function (item, key) {\n    return openBlock(), createElementBlock(\"div\", {\n      key: key,\n      style: normalizeStyle(_ctx.getStopStyle(item.position)),\n      \"class\": normalizeClass([_ctx.ns.e(\"stop\"), _ctx.ns.e(\"marks-stop\")])\n    }, null, 6);\n  }), 128))]), createElementVNode(\"div\", {\n    \"class\": normalizeClass(_ctx.ns.e(\"marks\"))\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.markList, function (item, key) {\n    return openBlock(), createBlock(_component_slider_marker, {\n      key: key,\n      mark: item.mark,\n      style: normalizeStyle(_ctx.getStopStyle(item.position))\n    }, null, 8, [\"mark\", \"style\"]);\n  }), 128))], 2)], 64)) : createCommentVNode(\"v-if\", true)], 6), _ctx.showInput && !_ctx.range ? (openBlock(), createBlock(_component_el_input_number, {\n    key: 0,\n    ref: \"input\",\n    \"model-value\": _ctx.firstValue,\n    \"class\": normalizeClass(_ctx.ns.e(\"input\")),\n    step: _ctx.step,\n    disabled: _ctx.sliderDisabled,\n    controls: _ctx.showInputControls,\n    min: _ctx.min,\n    max: _ctx.max,\n    debounce: _ctx.debounce,\n    size: _ctx.sliderInputSize,\n    \"onUpdate:modelValue\": _ctx.setFirstValue,\n    onChange: _ctx.emitChange\n  }, null, 8, [\"model-value\", \"class\", \"step\", \"disabled\", \"controls\", \"min\", \"max\", \"debounce\", \"size\", \"onUpdate:modelValue\", \"onChange\"])) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n}\n\nvar Slider = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/slider/src/index.vue\"]]);\n\nexport { Slider as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElInputNumber","SliderButton","SliderMarker","props","modelValue","type","Number","Array","min","max","step","showInput","showInputControls","size","validator","inputSize","showStops","showTooltip","formatTooltip","disabled","range","vertical","height","debounce","label","tooltipClass","marks","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","INPUT_EVENT","setup","emit","useNamespace","initData","reactive","firstValue","secondValue","oldValue","dragging","sliderSize","useSlide","elFormItem","slider","firstButton","secondButton","sliderDisabled","minValue","maxValue","runwayStyle","barStyle","resetSize","emitChange","onSliderClick","setFirstValue","setSecondValue","useStops","stops","getStopStyle","sliderWrapperSize","useSize","sliderInputSize","computed","value","ns","b","m","useMarks","useWatch","map","item","decimal","split","length","Math","apply","precisions","useLifecycle","sliderWrapper","toRefs","updateDragging","val","provide","precision","markList","sliderKls","_emit","valueChanged","every","index","setValues","throwError","_a","_b","watch","oldVal","deep","onMounted","valuetext","setAttribute","on","nextTick","onBeforeUnmount","off","_openBlock","ref","_normalizeClass","role","_ctx","style","onClick","_createElementVNode","e","_createVNode","key","_createCommentVNode","_normalizeStyle","mark","controls","onChange"],"sources":["../../../../../../packages/components/slider/src/index.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"sliderWrapper\"\n    :class=\"sliderKls\"\n    role=\"slider\"\n    :aria-valuemin=\"min\"\n    :aria-valuemax=\"max\"\n    :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\"\n    :aria-disabled=\"sliderDisabled\"\n  >\n    <div\n      ref=\"slider\"\n      :class=\"[\n        ns.e('runway'),\n        { 'show-input': showInput && !range },\n        ns.is('disabled', sliderDisabled),\n      ]\"\n      :style=\"runwayStyle\"\n      @click=\"onSliderClick\"\n    >\n      <div :class=\"ns.e('bar')\" :style=\"barStyle\" />\n      <slider-button\n        ref=\"firstButton\"\n        :model-value=\"firstValue\"\n        :vertical=\"vertical\"\n        :tooltip-class=\"tooltipClass\"\n        @update:model-value=\"setFirstValue\"\n      />\n      <slider-button\n        v-if=\"range\"\n        ref=\"secondButton\"\n        :model-value=\"secondValue\"\n        :vertical=\"vertical\"\n        :tooltip-class=\"tooltipClass\"\n        @update:model-value=\"setSecondValue\"\n      />\n      <div v-if=\"showStops\">\n        <div\n          v-for=\"(item, key) in stops\"\n          :key=\"key\"\n          :class=\"ns.e('stop')\"\n          :style=\"getStopStyle(item)\"\n        />\n      </div>\n      <template v-if=\"markList.length > 0\">\n        <div>\n          <div\n            v-for=\"(item, key) in markList\"\n            :key=\"key\"\n            :style=\"getStopStyle(item.position)\"\n            :class=\"[ns.e('stop'), ns.e('marks-stop')]\"\n          />\n        </div>\n        <div :class=\"ns.e('marks')\">\n          <slider-marker\n            v-for=\"(item, key) in markList\"\n            :key=\"key\"\n            :mark=\"item.mark\"\n            :style=\"getStopStyle(item.position)\"\n          />\n        </div>\n      </template>\n    </div>\n    <el-input-number\n      v-if=\"showInput && !range\"\n      ref=\"input\"\n      :model-value=\"firstValue\"\n      :class=\"ns.e('input')\"\n      :step=\"step\"\n      :disabled=\"sliderDisabled\"\n      :controls=\"showInputControls\"\n      :min=\"min\"\n      :max=\"max\"\n      :debounce=\"debounce\"\n      :size=\"sliderInputSize\"\n      @update:model-value=\"setFirstValue\"\n      @change=\"emitChange\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport ElInputNumber from '@element-plus/components/input-number'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport {\n  debugWarn,\n  isValidComponentSize,\n  off,\n  on,\n  throwError,\n} from '@element-plus/utils'\nimport { useNamespace, useSize } from '@element-plus/hooks'\nimport SliderButton from './button.vue'\nimport SliderMarker from './marker.vue'\nimport { useMarks } from './useMarks'\nimport { useSlide } from './useSlide'\nimport { useStops } from './useStops'\n\nimport type { PropType, Ref } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { Nullable } from '@element-plus/utils'\n\nexport default defineComponent({\n  name: 'ElSlider',\n\n  components: {\n    ElInputNumber,\n    SliderButton,\n    SliderMarker,\n  },\n\n  props: {\n    modelValue: {\n      type: [Number, Array] as PropType<number | number[]>,\n      default: 0,\n    },\n    min: {\n      type: Number,\n      default: 0,\n    },\n    max: {\n      type: Number,\n      default: 100,\n    },\n    step: {\n      type: Number,\n      default: 1,\n    },\n    showInput: {\n      type: Boolean,\n      default: false,\n    },\n    showInputControls: {\n      type: Boolean,\n      default: true,\n    },\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    inputSize: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    showStops: {\n      type: Boolean,\n      default: false,\n    },\n    showTooltip: {\n      type: Boolean,\n      default: true,\n    },\n    formatTooltip: {\n      type: Function as PropType<(val: number) => number | string>,\n      default: undefined,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    range: {\n      type: Boolean,\n      default: false,\n    },\n    vertical: {\n      type: Boolean,\n      default: false,\n    },\n    height: {\n      type: String,\n      default: '',\n    },\n    debounce: {\n      type: Number,\n      default: 300,\n    },\n    label: {\n      type: String,\n      default: undefined,\n    },\n    tooltipClass: {\n      type: String,\n      default: undefined,\n    },\n    marks: Object,\n  },\n\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT],\n\n  setup(props, { emit }) {\n    const ns = useNamespace('slider')\n    const initData = reactive({\n      firstValue: 0,\n      secondValue: 0,\n      oldValue: 0,\n      dragging: false,\n      sliderSize: 1,\n    })\n\n    const {\n      elFormItem,\n      slider,\n      firstButton,\n      secondButton,\n      sliderDisabled,\n      minValue,\n      maxValue,\n      runwayStyle,\n      barStyle,\n      resetSize,\n      emitChange,\n      onSliderClick,\n      setFirstValue,\n      setSecondValue,\n    } = useSlide(props, initData, emit)\n\n    const { stops, getStopStyle } = useStops(\n      props,\n      initData,\n      minValue,\n      maxValue\n    )\n\n    const sliderWrapperSize = useSize()\n    const sliderInputSize = computed(\n      () => props.inputSize || sliderWrapperSize.value\n    )\n\n    const sliderKls = computed(() => [\n      ns.b(),\n      ns.m(sliderWrapperSize.value),\n      ns.is('vertical', props.vertical),\n      { [ns.m('with-input')]: props.showInput },\n    ])\n\n    const markList = useMarks(props)\n\n    useWatch(props, initData, minValue, maxValue, emit, elFormItem)\n\n    const precision = computed(() => {\n      const precisions = [props.min, props.max, props.step].map((item) => {\n        const decimal = `${item}`.split('.')[1]\n        return decimal ? decimal.length : 0\n      })\n      return Math.max.apply(null, precisions)\n    })\n\n    const { sliderWrapper } = useLifecycle(props, initData, resetSize)\n\n    const { firstValue, secondValue, oldValue, dragging, sliderSize } =\n      toRefs(initData)\n\n    const updateDragging = (val: boolean) => {\n      initData.dragging = val\n    }\n\n    provide('SliderProvider', {\n      ...toRefs(props),\n      sliderSize,\n      disabled: sliderDisabled,\n      precision,\n      emitChange,\n      resetSize,\n      updateDragging,\n    })\n\n    return {\n      ns,\n      firstValue,\n      secondValue,\n      oldValue,\n      dragging,\n      sliderSize,\n\n      slider,\n      firstButton,\n      secondButton,\n      sliderDisabled,\n      runwayStyle,\n      barStyle,\n      emitChange,\n      onSliderClick,\n      getStopStyle,\n      setFirstValue,\n      setSecondValue,\n\n      stops,\n      markList,\n\n      sliderWrapper,\n      sliderWrapperSize,\n      sliderInputSize,\n      sliderKls,\n    }\n  },\n})\n\nconst useWatch = (props, initData, minValue, maxValue, emit, elFormItem) => {\n  const _emit = (val: number | number[]) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emit(INPUT_EVENT, val)\n  }\n\n  const valueChanged = () => {\n    if (props.range) {\n      return ![minValue.value, maxValue.value].every(\n        (item, index) => item === initData.oldValue[index]\n      )\n    } else {\n      return props.modelValue !== initData.oldValue\n    }\n  }\n\n  const setValues = () => {\n    if (props.min > props.max) {\n      throwError('Slider', 'min should not be greater than max.')\n      return\n    }\n    const val = props.modelValue\n    if (props.range && Array.isArray(val)) {\n      if (val[1] < props.min) {\n        _emit([props.min, props.min])\n      } else if (val[0] > props.max) {\n        _emit([props.max, props.max])\n      } else if (val[0] < props.min) {\n        _emit([props.min, val[1]])\n      } else if (val[1] > props.max) {\n        _emit([val[0], props.max])\n      } else {\n        initData.firstValue = val[0]\n        initData.secondValue = val[1]\n        if (valueChanged()) {\n          elFormItem.validate?.('change').catch((err) => debugWarn(err))\n          initData.oldValue = val.slice()\n        }\n      }\n    } else if (!props.range && typeof val === 'number' && !Number.isNaN(val)) {\n      if (val < props.min) {\n        _emit(props.min)\n      } else if (val > props.max) {\n        _emit(props.max)\n      } else {\n        initData.firstValue = val\n        if (valueChanged()) {\n          elFormItem.validate?.('change').catch((err) => debugWarn(err))\n          initData.oldValue = val\n        }\n      }\n    }\n  }\n\n  setValues()\n\n  watch(\n    () => initData.dragging,\n    (val) => {\n      if (!val) {\n        setValues()\n      }\n    }\n  )\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (\n        initData.dragging ||\n        (Array.isArray(val) &&\n          Array.isArray(oldVal) &&\n          val.every((item, index) => item === oldVal[index]) &&\n          initData.firstValue === val[0] &&\n          initData.secondValue === val[1])\n      ) {\n        return\n      }\n      setValues()\n    },\n    {\n      deep: true,\n    }\n  )\n\n  watch(\n    () => [props.min, props.max],\n    () => {\n      setValues()\n    }\n  )\n}\n\nconst useLifecycle = (props, initData, resetSize) => {\n  const sliderWrapper: Ref<Nullable<HTMLElement>> = ref(null)\n\n  onMounted(async () => {\n    let valuetext\n    if (props.range) {\n      if (Array.isArray(props.modelValue)) {\n        initData.firstValue = Math.max(props.min, props.modelValue[0])\n        initData.secondValue = Math.min(props.max, props.modelValue[1])\n      } else {\n        initData.firstValue = props.min\n        initData.secondValue = props.max\n      }\n      initData.oldValue = [initData.firstValue, initData.secondValue]\n      valuetext = `${initData.firstValue}-${initData.secondValue}`\n    } else {\n      if (\n        typeof props.modelValue !== 'number' ||\n        Number.isNaN(props.modelValue)\n      ) {\n        initData.firstValue = props.min\n      } else {\n        initData.firstValue = Math.min(\n          props.max,\n          Math.max(props.min, props.modelValue)\n        )\n      }\n      initData.oldValue = initData.firstValue\n      valuetext = initData.firstValue\n    }\n\n    sliderWrapper.value.setAttribute('aria-valuetext', valuetext)\n\n    // label screen reader\n    sliderWrapper.value.setAttribute(\n      'aria-label',\n      props.label ? props.label : `slider between ${props.min} and ${props.max}`\n    )\n\n    on(window, 'resize', resetSize)\n\n    await nextTick()\n    resetSize()\n  })\n\n  onBeforeUnmount(() => {\n    off(window, 'resize', resetSize)\n  })\n\n  return {\n    sliderWrapper,\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}