{"ast":null,"code":"import _objectWithoutProperties from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _typeof from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _defineProperty from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"alignment\", \"allowedPlacements\", \"autoAlignment\"],\n    _excluded2 = [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"flipAlignment\"],\n    _excluded3 = [\"strategy\"],\n    _excluded4 = [\"mainAxis\", \"crossAxis\", \"limiter\"],\n    _excluded5 = [\"apply\"];\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.map.js\";\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n      floating = _ref.floating;\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var commonAlign = reference[length] / 2 - floating[length] / 2;\n  var side = getSide(placement);\n  var isVertical = mainAxis === 'x';\n  var coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\n\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, _debug_loop_count_, i, _middleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n            _context.next = 3;\n            return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n\n          case 3:\n            rtl = _context.sent;\n\n            if (platform == null) {\n              console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n            }\n\n            if (!(middleware.filter(function (_ref) {\n              var name = _ref.name;\n              return name === 'autoPlacement' || name === 'flip';\n            }).length > 1)) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement`', 'middleware detected. This will lead to an infinite loop. Ensure only', 'one of either has been passed to the `middleware` array.'].join(' '));\n\n          case 7:\n            _context.next = 9;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n\n          case 9:\n            rects = _context.sent;\n            _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n            statefulPlacement = placement;\n            middlewareData = {};\n            _debug_loop_count_ = 0;\n            i = 0;\n\n          case 15:\n            if (!(i < middleware.length)) {\n              _context.next = 50;\n              break;\n            }\n\n            _debug_loop_count_++;\n\n            if (!(_debug_loop_count_ > 100)) {\n              _context.next = 19;\n              break;\n            }\n\n            throw new Error(['Floating UI: The middleware lifecycle appears to be', 'running in an infinite loop. This is usually caused by a `reset`', 'continually being returned without a break condition.'].join(' '));\n\n          case 19:\n            _middleware$i = middleware[i], name = _middleware$i.name, fn = _middleware$i.fn;\n            _context.next = 22;\n            return fn({\n              x: x,\n              y: y,\n              initialPlacement: placement,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData,\n              rects: rects,\n              platform: platform,\n              elements: {\n                reference: reference,\n                floating: floating\n              }\n            });\n\n          case 22:\n            _yield$fn = _context.sent;\n            nextX = _yield$fn.x;\n            nextY = _yield$fn.y;\n            data = _yield$fn.data;\n            reset = _yield$fn.reset;\n            x = nextX != null ? nextX : x;\n            y = nextY != null ? nextY : y;\n            middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));\n\n            if (!reset) {\n              _context.next = 47;\n              break;\n            }\n\n            if (!(_typeof(reset) === 'object')) {\n              _context.next = 45;\n              break;\n            }\n\n            if (reset.placement) {\n              statefulPlacement = reset.placement;\n            }\n\n            if (!reset.rects) {\n              _context.next = 42;\n              break;\n            }\n\n            if (!(reset.rects === true)) {\n              _context.next = 40;\n              break;\n            }\n\n            _context.next = 37;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n\n          case 37:\n            _context.t0 = _context.sent;\n            _context.next = 41;\n            break;\n\n          case 40:\n            _context.t0 = reset.rects;\n\n          case 41:\n            rects = _context.t0;\n\n          case 42:\n            _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n            x = _computeCoordsFromPla2.x;\n            y = _computeCoordsFromPla2.y;\n\n          case 45:\n            i = -1;\n            return _context.abrupt(\"continue\", 47);\n\n          case 47:\n            i++;\n            _context.next = 15;\n            break;\n\n          case 50:\n            return _context.abrupt(\"return\", {\n              x: x,\n              y: y,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData\n            });\n\n          case 51:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction expandPaddingObject(padding) {\n  return _objectSpread({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, padding);\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return _objectSpread(_objectSpread({}, rect), {}, {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\n\n\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\n\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(middlewareArguments, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _options7, _options7$boundary, boundary, _options7$rootBoundar, rootBoundary, _options7$elementCont, elementContext, _options7$altBoundary, altBoundary, _options7$padding, padding, paddingObject, altContext, element, clippingClientRect, elementClientRect;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (options === void 0) {\n              options = {};\n            }\n\n            x = middlewareArguments.x, y = middlewareArguments.y, platform = middlewareArguments.platform, rects = middlewareArguments.rects, elements = middlewareArguments.elements, strategy = middlewareArguments.strategy;\n            _options7 = options, _options7$boundary = _options7.boundary, boundary = _options7$boundary === void 0 ? 'clippingAncestors' : _options7$boundary, _options7$rootBoundar = _options7.rootBoundary, rootBoundary = _options7$rootBoundar === void 0 ? 'viewport' : _options7$rootBoundar, _options7$elementCont = _options7.elementContext, elementContext = _options7$elementCont === void 0 ? 'floating' : _options7$elementCont, _options7$altBoundary = _options7.altBoundary, altBoundary = _options7$altBoundary === void 0 ? false : _options7$altBoundary, _options7$padding = _options7.padding, padding = _options7$padding === void 0 ? 0 : _options7$padding;\n            paddingObject = getSideObjectFromPadding(padding);\n            altContext = elementContext === 'floating' ? 'reference' : 'floating';\n            element = elements[altBoundary ? altContext : elementContext];\n            _context10.t0 = rectToClientRect;\n            _context10.t1 = platform;\n            _context10.next = 10;\n            return platform.isElement == null ? void 0 : platform.isElement(element);\n\n          case 10:\n            _context10.t2 = _await$platform$isEle = _context10.sent;\n\n            if (!(_context10.t2 != null)) {\n              _context10.next = 15;\n              break;\n            }\n\n            _context10.t3 = _await$platform$isEle;\n            _context10.next = 16;\n            break;\n\n          case 15:\n            _context10.t3 = true;\n\n          case 16:\n            if (!_context10.t3) {\n              _context10.next = 20;\n              break;\n            }\n\n            _context10.t4 = element;\n            _context10.next = 26;\n            break;\n\n          case 20:\n            _context10.t5 = element.contextElement;\n\n            if (_context10.t5) {\n              _context10.next = 25;\n              break;\n            }\n\n            _context10.next = 24;\n            return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n\n          case 24:\n            _context10.t5 = _context10.sent;\n\n          case 25:\n            _context10.t4 = _context10.t5;\n\n          case 26:\n            _context10.t6 = _context10.t4;\n            _context10.t7 = boundary;\n            _context10.t8 = rootBoundary;\n            _context10.t9 = strategy;\n            _context10.t10 = {\n              element: _context10.t6,\n              boundary: _context10.t7,\n              rootBoundary: _context10.t8,\n              strategy: _context10.t9\n            };\n            _context10.next = 33;\n            return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n\n          case 33:\n            _context10.t11 = _context10.sent;\n            clippingClientRect = (0, _context10.t0)(_context10.t11);\n            _context10.t12 = rectToClientRect;\n\n            if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n              _context10.next = 49;\n              break;\n            }\n\n            _context10.t14 = platform;\n            _context10.t15 = elementContext === 'floating' ? _objectSpread(_objectSpread({}, rects.floating), {}, {\n              x: x,\n              y: y\n            }) : rects.reference;\n            _context10.next = 41;\n            return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n\n          case 41:\n            _context10.t16 = _context10.sent;\n            _context10.t17 = strategy;\n            _context10.t18 = {\n              rect: _context10.t15,\n              offsetParent: _context10.t16,\n              strategy: _context10.t17\n            };\n            _context10.next = 46;\n            return _context10.t14.convertOffsetParentRelativeRectToViewportRelativeRect.call(_context10.t14, _context10.t18);\n\n          case 46:\n            _context10.t13 = _context10.sent;\n            _context10.next = 50;\n            break;\n\n          case 49:\n            _context10.t13 = rects[elementContext];\n\n          case 50:\n            _context10.t19 = _context10.t13;\n            elementClientRect = (0, _context10.t12)(_context10.t19);\n            return _context10.abrupt(\"return\", {\n              top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n              bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n              left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n              right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n            });\n\n          case 53:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\n\nvar min = Math.min;\nvar max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\n\n\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _data;\n\n        var _ref3, element, _ref3$padding, padding, x, y, placement, rects, platform, paddingObject, coords, axis, length, arrowDimensions, minProp, maxProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, min, max, center, offset;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Since `element` is required, we don't Partial<> the type\n                _ref3 = options != null ? options : {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n                x = middlewareArguments.x, y = middlewareArguments.y, placement = middlewareArguments.placement, rects = middlewareArguments.rects, platform = middlewareArguments.platform;\n\n                if (!(element == null)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n                return _context2.abrupt(\"return\", {});\n\n              case 5:\n                paddingObject = getSideObjectFromPadding(padding);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                axis = getMainAxisFromPlacement(placement);\n                length = getLengthFromAxis(axis);\n                _context2.next = 11;\n                return platform.getDimensions(element);\n\n              case 11:\n                arrowDimensions = _context2.sent;\n                minProp = axis === 'y' ? 'top' : 'left';\n                maxProp = axis === 'y' ? 'bottom' : 'right';\n                endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n                startDiff = coords[axis] - rects.reference[axis];\n                _context2.next = 18;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n\n              case 18:\n                arrowOffsetParent = _context2.sent;\n                clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n                centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n                // point is outside of the floating element's bounds\n\n                min = paddingObject[minProp];\n                max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n                center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n                offset = within(min, center, max);\n                return _context2.abrupt(\"return\", {\n                  data: (_data = {}, _defineProperty(_data, axis, offset), _defineProperty(_data, \"centerOffset\", center - offset), _data)\n                });\n\n              case 26:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\n\nvar hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\n\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash$1[matched];\n  });\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  var alignment = getAlignment(placement);\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nvar hash = {\n  start: 'end',\n  end: 'start'\n};\n\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}\n\nvar sides = ['top', 'right', 'bottom', 'left'];\nvar allPlacements = /*#__PURE__*/sides.reduce(function (acc, side) {\n  return acc.concat(side, side + \"-start\", side + \"-end\");\n}, []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\n\n\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe, x, y, rects, middlewareData, placement, platform, elements, _options, _options$alignment, alignment, _options$allowedPlace, allowedPlacements, _options$autoAlignmen, autoAlignment, detectOverflowOptions, placements, overflow, currentIndex, currentPlacement, _getAlignmentSides, main, cross, currentOverflows, allOverflows, nextPlacement, placementsSortedByLeastOverflow, placementThatFitsOnAllSides, resetPlacement;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                x = middlewareArguments.x, y = middlewareArguments.y, rects = middlewareArguments.rects, middlewareData = middlewareArguments.middlewareData, placement = middlewareArguments.placement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options = options, _options$alignment = _options.alignment, alignment = _options$alignment === void 0 ? null : _options$alignment, _options$allowedPlace = _options.allowedPlacements, allowedPlacements = _options$allowedPlace === void 0 ? allPlacements : _options$allowedPlace, _options$autoAlignmen = _options.autoAlignment, autoAlignment = _options$autoAlignmen === void 0 ? true : _options$autoAlignmen, detectOverflowOptions = _objectWithoutProperties(_options, _excluded);\n                placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n                _context3.next = 5;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 5:\n                overflow = _context3.sent;\n                currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n                currentPlacement = placements[currentIndex];\n\n                if (!(currentPlacement == null)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {});\n\n              case 10:\n                _context3.t0 = getAlignmentSides;\n                _context3.t1 = currentPlacement;\n                _context3.t2 = rects;\n                _context3.next = 15;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 15:\n                _context3.t3 = _context3.sent;\n                _getAlignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n                main = _getAlignmentSides.main;\n                cross = _getAlignmentSides.cross;\n\n                if (!(placement !== currentPlacement)) {\n                  _context3.next = 21;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  x: x,\n                  y: y,\n                  reset: {\n                    placement: placements[0]\n                  }\n                });\n\n              case 21:\n                currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n                allOverflows = [].concat(_toConsumableArray((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), [{\n                  placement: currentPlacement,\n                  overflows: currentOverflows\n                }]);\n                nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n                if (!nextPlacement) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n\n              case 26:\n                placementsSortedByLeastOverflow = allOverflows.slice().sort(function (a, b) {\n                  return a.overflows[0] - b.overflows[0];\n                });\n                placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(function (_ref) {\n                  var overflows = _ref.overflows;\n                  return overflows.every(function (overflow) {\n                    return overflow <= 0;\n                  });\n                })) == null ? void 0 : _placementsSortedByLe.placement;\n                resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n\n                if (!(resetPlacement !== placement)) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n\n              case 31:\n                return _context3.abrupt(\"return\", {});\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\n\n\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _options2, _options2$mainAxis, checkMainAxis, _options2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _options2$fallbackStr, fallbackStrategy, _options2$flipAlignme, flipAlignment, detectOverflowOptions, side, isBasePlacement, fallbackPlacements, placements, overflow, overflows, overflowsData, _getAlignmentSides2, main, cross, _middlewareData$flip$, _middlewareData$flip2, nextIndex, nextPlacement, resetPlacement, _overflowsData$slice$, _placement;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                placement = middlewareArguments.placement, middlewareData = middlewareArguments.middlewareData, rects = middlewareArguments.rects, initialPlacement = middlewareArguments.initialPlacement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options2 = options, _options2$mainAxis = _options2.mainAxis, checkMainAxis = _options2$mainAxis === void 0 ? true : _options2$mainAxis, _options2$crossAxis = _options2.crossAxis, checkCrossAxis = _options2$crossAxis === void 0 ? true : _options2$crossAxis, specifiedFallbackPlacements = _options2.fallbackPlacements, _options2$fallbackStr = _options2.fallbackStrategy, fallbackStrategy = _options2$fallbackStr === void 0 ? 'bestFit' : _options2$fallbackStr, _options2$flipAlignme = _options2.flipAlignment, flipAlignment = _options2$flipAlignme === void 0 ? true : _options2$flipAlignme, detectOverflowOptions = _objectWithoutProperties(_options2, _excluded2);\n                side = getSide(placement);\n                isBasePlacement = side === initialPlacement;\n                fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n                placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n                _context4.next = 8;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 8:\n                overflow = _context4.sent;\n                overflows = [];\n                overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n                if (checkMainAxis) {\n                  overflows.push(overflow[side]);\n                }\n\n                if (!checkCrossAxis) {\n                  _context4.next = 23;\n                  break;\n                }\n\n                _context4.t0 = getAlignmentSides;\n                _context4.t1 = placement;\n                _context4.t2 = rects;\n                _context4.next = 18;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 18:\n                _context4.t3 = _context4.sent;\n                _getAlignmentSides2 = (0, _context4.t0)(_context4.t1, _context4.t2, _context4.t3);\n                main = _getAlignmentSides2.main;\n                cross = _getAlignmentSides2.cross;\n                overflows.push(overflow[main], overflow[cross]);\n\n              case 23:\n                overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                  placement: placement,\n                  overflows: overflows\n                }]); // One or more sides is overflowing\n\n                if (overflows.every(function (side) {\n                  return side <= 0;\n                })) {\n                  _context4.next = 40;\n                  break;\n                }\n\n                nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n                nextPlacement = placements[nextIndex];\n\n                if (!nextPlacement) {\n                  _context4.next = 29;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  data: {\n                    index: nextIndex,\n                    overflows: overflowsData\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n\n              case 29:\n                resetPlacement = 'bottom';\n                _context4.t4 = fallbackStrategy;\n                _context4.next = _context4.t4 === 'bestFit' ? 33 : _context4.t4 === 'initialPlacement' ? 36 : 38;\n                break;\n\n              case 33:\n                _placement = (_overflowsData$slice$ = overflowsData.slice().sort(function (a, b) {\n                  return a.overflows.filter(function (overflow) {\n                    return overflow > 0;\n                  }).reduce(function (acc, overflow) {\n                    return acc + overflow;\n                  }, 0) - b.overflows.filter(function (overflow) {\n                    return overflow > 0;\n                  }).reduce(function (acc, overflow) {\n                    return acc + overflow;\n                  }, 0);\n                })[0]) == null ? void 0 : _overflowsData$slice$.placement;\n\n                if (_placement) {\n                  resetPlacement = _placement;\n                }\n\n                return _context4.abrupt(\"break\", 38);\n\n              case 36:\n                resetPlacement = initialPlacement;\n                return _context4.abrupt(\"break\", 38);\n\n              case 38:\n                if (!(placement !== resetPlacement)) {\n                  _context4.next = 40;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n\n              case 40:\n                return _context4.abrupt(\"return\", {});\n\n              case 41:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\n\n\nvar hide = function hide(_temp) {\n  var _ref4 = _temp === void 0 ? {} : _temp,\n      _ref4$strategy = _ref4.strategy,\n      strategy = _ref4$strategy === void 0 ? 'referenceHidden' : _ref4$strategy,\n      detectOverflowOptions = _objectWithoutProperties(_ref4, _excluded3);\n\n  return {\n    name: 'hide',\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var rects, overflow, offsets, _overflow, _offsets;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                rects = middlewareArguments.rects;\n                _context5.t0 = strategy;\n                _context5.next = _context5.t0 === 'referenceHidden' ? 4 : _context5.t0 === 'escaped' ? 9 : 14;\n                break;\n\n              case 4:\n                _context5.next = 6;\n                return detectOverflow(middlewareArguments, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  elementContext: 'reference'\n                }));\n\n              case 6:\n                overflow = _context5.sent;\n                offsets = getSideOffsets(overflow, rects.reference);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    referenceHiddenOffsets: offsets,\n                    referenceHidden: isAnySideFullyClipped(offsets)\n                  }\n                });\n\n              case 9:\n                _context5.next = 11;\n                return detectOverflow(middlewareArguments, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  altBoundary: true\n                }));\n\n              case 11:\n                _overflow = _context5.sent;\n                _offsets = getSideOffsets(_overflow, rects.floating);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    escapedOffsets: _offsets,\n                    escaped: isAnySideFullyClipped(_offsets)\n                  }\n                });\n\n              case 14:\n                return _context5.abrupt(\"return\", {});\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\n\nfunction convertValueToCoords(placement, rects, value, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  var side = getSide(placement);\n  var alignment = getAlignment(placement);\n  var isVertical = getMainAxisFromPlacement(placement) === 'x';\n  var mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  var crossAxisMulti = rtl && isVertical ? -1 : 1;\n  var rawValue = typeof value === 'function' ? value(_objectSpread(_objectSpread({}, rects), {}, {\n    placement: placement\n  })) : value;\n  var isNumber = typeof rawValue === 'number'; // eslint-disable-next-line prefer-const\n\n  var _ref5 = isNumber ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : _objectSpread({\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null\n  }, rawValue),\n      mainAxis = _ref5.mainAxis,\n      crossAxis = _ref5.crossAxis,\n      alignmentAxis = _ref5.alignmentAxis;\n\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\n\nvar offset = function offset(value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var x, y, placement, rects, platform, elements, diffCoords;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                x = middlewareArguments.x, y = middlewareArguments.y, placement = middlewareArguments.placement, rects = middlewareArguments.rects, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _context6.t0 = convertValueToCoords;\n                _context6.t1 = placement;\n                _context6.t2 = rects;\n                _context6.t3 = value;\n                _context6.next = 7;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 7:\n                _context6.t4 = _context6.sent;\n                diffCoords = (0, _context6.t0)(_context6.t1, _context6.t2, _context6.t3, _context6.t4);\n                return _context6.abrupt(\"return\", {\n                  x: x + diffCoords.x,\n                  y: y + diffCoords.y,\n                  data: diffCoords\n                });\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\n\n\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var _objectSpread3;\n\n        var x, y, placement, _options3, _options3$mainAxis, checkMainAxis, _options3$crossAxis, checkCrossAxis, _options3$limiter, limiter, detectOverflowOptions, coords, overflow, mainAxis, crossAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                x = middlewareArguments.x, y = middlewareArguments.y, placement = middlewareArguments.placement;\n                _options3 = options, _options3$mainAxis = _options3.mainAxis, checkMainAxis = _options3$mainAxis === void 0 ? true : _options3$mainAxis, _options3$crossAxis = _options3.crossAxis, checkCrossAxis = _options3$crossAxis === void 0 ? false : _options3$crossAxis, _options3$limiter = _options3.limiter, limiter = _options3$limiter === void 0 ? {\n                  fn: function fn(_ref) {\n                    var x = _ref.x,\n                        y = _ref.y;\n                    return {\n                      x: x,\n                      y: y\n                    };\n                  }\n                } : _options3$limiter, detectOverflowOptions = _objectWithoutProperties(_options3, _excluded4);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                _context7.next = 5;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 5:\n                overflow = _context7.sent;\n                mainAxis = getMainAxisFromPlacement(getSide(placement));\n                crossAxis = getCrossAxis(mainAxis);\n                mainAxisCoord = coords[mainAxis];\n                crossAxisCoord = coords[crossAxis];\n\n                if (checkMainAxis) {\n                  minSide = mainAxis === 'y' ? 'top' : 'left';\n                  maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                  _min = mainAxisCoord + overflow[minSide];\n                  _max = mainAxisCoord - overflow[maxSide];\n                  mainAxisCoord = within(_min, mainAxisCoord, _max);\n                }\n\n                if (checkCrossAxis) {\n                  _minSide = crossAxis === 'y' ? 'top' : 'left';\n                  _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                  _min2 = crossAxisCoord + overflow[_minSide];\n                  _max2 = crossAxisCoord - overflow[_maxSide];\n                  crossAxisCoord = within(_min2, crossAxisCoord, _max2);\n                }\n\n                limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, middlewareArguments), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, mainAxis, mainAxisCoord), _defineProperty(_objectSpread3, crossAxis, crossAxisCoord), _objectSpread3)));\n                return _context7.abrupt(\"return\", _objectSpread(_objectSpread({}, limitedCoords), {}, {\n                  data: {\n                    x: limitedCoords.x - x,\n                    y: limitedCoords.y - y\n                  }\n                }));\n\n              case 14:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\n\n\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options: options,\n    fn: function fn(middlewareArguments) {\n      var _ref6;\n\n      var x = middlewareArguments.x,\n          y = middlewareArguments.y,\n          placement = middlewareArguments.placement,\n          rects = middlewareArguments.rects,\n          middlewareData = middlewareArguments.middlewareData;\n      var _options4 = options,\n          _options4$offset = _options4.offset,\n          offset = _options4$offset === void 0 ? 0 : _options4$offset,\n          _options4$mainAxis = _options4.mainAxis,\n          checkMainAxis = _options4$mainAxis === void 0 ? true : _options4$mainAxis,\n          _options4$crossAxis = _options4.crossAxis,\n          checkCrossAxis = _options4$crossAxis === void 0 ? true : _options4$crossAxis;\n      var coords = {\n        x: x,\n        y: y\n      };\n      var mainAxis = getMainAxisFromPlacement(placement);\n      var crossAxis = getCrossAxis(mainAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = typeof offset === 'function' ? offset(_objectSpread(_objectSpread({}, rects), {}, {\n        placement: placement\n      })) : offset;\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n\n      return _ref6 = {}, _defineProperty(_ref6, mainAxis, mainAxisCoord), _defineProperty(_ref6, crossAxis, crossAxisCoord), _ref6;\n    }\n  };\n};\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\n\n\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        var placement, rects, platform, elements, _options5, apply, detectOverflowOptions, overflow, side, alignment, heightSide, widthSide, xMin, xMax, yMin, yMax, dimensions, prevDimensions, nextDimensions;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                placement = middlewareArguments.placement, rects = middlewareArguments.rects, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options5 = options, apply = _options5.apply, detectOverflowOptions = _objectWithoutProperties(_options5, _excluded5);\n                _context8.next = 4;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 4:\n                overflow = _context8.sent;\n                side = getSide(placement);\n                alignment = getAlignment(placement);\n\n                if (!(side === 'top' || side === 'bottom')) {\n                  _context8.next = 26;\n                  break;\n                }\n\n                heightSide = side;\n                _context8.t0 = alignment;\n                _context8.next = 12;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 12:\n                if (!_context8.sent) {\n                  _context8.next = 16;\n                  break;\n                }\n\n                _context8.t1 = 'start';\n                _context8.next = 17;\n                break;\n\n              case 16:\n                _context8.t1 = 'end';\n\n              case 17:\n                _context8.t2 = _context8.t1;\n\n                if (!(_context8.t0 === _context8.t2)) {\n                  _context8.next = 22;\n                  break;\n                }\n\n                _context8.t3 = 'left';\n                _context8.next = 23;\n                break;\n\n              case 22:\n                _context8.t3 = 'right';\n\n              case 23:\n                widthSide = _context8.t3;\n                _context8.next = 28;\n                break;\n\n              case 26:\n                widthSide = side;\n                heightSide = alignment === 'end' ? 'top' : 'bottom';\n\n              case 28:\n                xMin = max(overflow.left, 0);\n                xMax = max(overflow.right, 0);\n                yMin = max(overflow.top, 0);\n                yMax = max(overflow.bottom, 0);\n                dimensions = {\n                  height: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n                  width: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n                };\n                _context8.next = 35;\n                return platform.getDimensions(elements.floating);\n\n              case 35:\n                prevDimensions = _context8.sent;\n                apply == null ? void 0 : apply(_objectSpread(_objectSpread({}, dimensions), rects));\n                _context8.next = 39;\n                return platform.getDimensions(elements.floating);\n\n              case 39:\n                nextDimensions = _context8.sent;\n\n                if (!(prevDimensions.width !== nextDimensions.width || prevDimensions.height !== nextDimensions.height)) {\n                  _context8.next = 42;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", {\n                  reset: {\n                    rects: true\n                  }\n                });\n\n              case 42:\n                return _context8.abrupt(\"return\", {});\n\n              case 43:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\n\n\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var _await$platform$getCl, placement, elements, rects, platform, strategy, _options6, _options6$padding, padding, x, y, fallback, clientRects, paddingObject, getBoundingClientRect, resetRects;\n\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                getBoundingClientRect = function _getBoundingClientRec() {\n                  // There are two rects and they are disjoined\n                  if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                    var _clientRects$find; // Find the first rect in which the point is fully inside\n\n\n                    return (_clientRects$find = clientRects.find(function (rect) {\n                      return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                    })) != null ? _clientRects$find : fallback;\n                  } // There are 2 or more connected rects\n\n\n                  if (clientRects.length >= 2) {\n                    if (getMainAxisFromPlacement(placement) === 'x') {\n                      var firstRect = clientRects[0];\n                      var lastRect = clientRects[clientRects.length - 1];\n                      var isTop = getSide(placement) === 'top';\n                      var _top = firstRect.top;\n                      var _bottom = lastRect.bottom;\n\n                      var _left = isTop ? firstRect.left : lastRect.left;\n\n                      var _right = isTop ? firstRect.right : lastRect.right;\n\n                      var _width = _right - _left;\n\n                      var _height = _bottom - _top;\n\n                      return {\n                        top: _top,\n                        bottom: _bottom,\n                        left: _left,\n                        right: _right,\n                        width: _width,\n                        height: _height,\n                        x: _left,\n                        y: _top\n                      };\n                    }\n\n                    var isLeftSide = getSide(placement) === 'left';\n                    var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.right;\n                    })));\n                    var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.left;\n                    })));\n                    var measureRects = clientRects.filter(function (rect) {\n                      return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                    });\n                    var top = measureRects[0].top;\n                    var bottom = measureRects[measureRects.length - 1].bottom;\n                    var left = minLeft;\n                    var right = maxRight;\n                    var width = right - left;\n                    var height = bottom - top;\n                    return {\n                      top: top,\n                      bottom: bottom,\n                      left: left,\n                      right: right,\n                      width: width,\n                      height: height,\n                      x: left,\n                      y: top\n                    };\n                  }\n\n                  return fallback;\n                };\n\n                placement = middlewareArguments.placement, elements = middlewareArguments.elements, rects = middlewareArguments.rects, platform = middlewareArguments.platform, strategy = middlewareArguments.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n                // ClientRect's bounds, despite the event listener being triggered. A\n                // padding of 2 seems to handle this issue.\n\n                _options6 = options, _options6$padding = _options6.padding, padding = _options6$padding === void 0 ? 2 : _options6$padding, x = _options6.x, y = _options6.y;\n                _context9.t0 = rectToClientRect;\n\n                if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n                  _context9.next = 17;\n                  break;\n                }\n\n                _context9.t2 = platform;\n                _context9.t3 = rects.reference;\n                _context9.next = 9;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n\n              case 9:\n                _context9.t4 = _context9.sent;\n                _context9.t5 = strategy;\n                _context9.t6 = {\n                  rect: _context9.t3,\n                  offsetParent: _context9.t4,\n                  strategy: _context9.t5\n                };\n                _context9.next = 14;\n                return _context9.t2.convertOffsetParentRelativeRectToViewportRelativeRect.call(_context9.t2, _context9.t6);\n\n              case 14:\n                _context9.t1 = _context9.sent;\n                _context9.next = 18;\n                break;\n\n              case 17:\n                _context9.t1 = rects.reference;\n\n              case 18:\n                _context9.t7 = _context9.t1;\n                fallback = (0, _context9.t0)(_context9.t7);\n                _context9.next = 22;\n                return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n\n              case 22:\n                _context9.t8 = _await$platform$getCl = _context9.sent;\n\n                if (!(_context9.t8 != null)) {\n                  _context9.next = 27;\n                  break;\n                }\n\n                _context9.t9 = _await$platform$getCl;\n                _context9.next = 28;\n                break;\n\n              case 27:\n                _context9.t9 = [];\n\n              case 28:\n                clientRects = _context9.t9;\n                paddingObject = getSideObjectFromPadding(padding);\n                _context9.next = 32;\n                return platform.getElementRects({\n                  reference: {\n                    getBoundingClientRect: getBoundingClientRect\n                  },\n                  floating: elements.floating,\n                  strategy: strategy\n                });\n\n              case 32:\n                resetRects = _context9.sent;\n\n                if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                  _context9.next = 35;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", {\n                  reset: {\n                    rects: resetRects\n                  }\n                });\n\n              case 35:\n                return _context9.abrupt(\"return\", {});\n\n              case 36:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };","map":{"version":3,"sources":["C:/PartTimeJob/blog/node_modules/@floating-ui/core/dist/floating-ui.core.esm.development.js"],"names":["getSide","placement","split","getAlignment","getMainAxisFromPlacement","includes","getLengthFromAxis","axis","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","config","strategy","middleware","platform","isRTL","console","error","join","filter","name","Error","getElementRects","rects","statefulPlacement","middlewareData","_debug_loop_count_","i","fn","initialPlacement","elements","nextX","nextY","data","reset","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","middlewareArguments","options","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","isElement","_await$platform$isEle","contextElement","getDocumentElement","getClippingRect","clippingClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getOffsetParent","offsetParent","elementClientRect","min","Math","max","within","min$1","value","max$1","arrow","warn","getDimensions","arrowDimensions","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","offset","hash$1","getOppositePlacement","replace","matched","getAlignmentSides","alignment","mainAlignmentSide","main","cross","hash","start","end","getOppositeAlignmentPlacement","sides","allPlacements","reduce","acc","concat","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","detectOverflowOptions","placements","overflow","currentIndex","_middlewareData$autoP","_middlewareData$autoP2","index","currentPlacement","currentOverflows","allOverflows","_middlewareData$autoP3","_middlewareData$autoP4","overflows","nextPlacement","placementsSortedByLeastOverflow","slice","sort","a","b","placementThatFitsOnAllSides","_placementsSortedByLe","find","every","resetPlacement","getExpandedPlacements","oppositePlacement","flip","checkMainAxis","crossAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackPlacements","fallbackStrategy","flipAlignment","isBasePlacement","overflowsData","_middlewareData$flip","push","nextIndex","_middlewareData$flip$","_middlewareData$flip2","_overflowsData$slice$","getSideOffsets","isAnySideFullyClipped","some","hide","_temp","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","isNumber","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","_middlewareData$offse3","_middlewareData$offse4","isOriginSide","size","apply","heightSide","widthSide","xMin","xMax","yMin","yMax","dimensions","prevDimensions","nextDimensions","inline","getBoundingClientRect","clientRects","_clientRects$find","fallback","firstRect","lastRect","isTop","isLeftSide","maxRight","map","minLeft","measureRects","getClientRects","_await$platform$getCl","resetRects"],"mappings":"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","sourcesContent":["function getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n\n  {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n\n    if (middleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement`', 'middleware detected. This will lead to an infinite loop. Ensure only', 'one of either has been passed to the `middleware` array.'].join(' '));\n    }\n  }\n\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let _debug_loop_count_ = 0;\n\n  for (let i = 0; i < middleware.length; i++) {\n    {\n      _debug_loop_count_++;\n\n      if (_debug_loop_count_ > 100) {\n        throw new Error(['Floating UI: The middleware lifecycle appears to be', 'running in an infinite loop. This is usually caused by a `reset`', 'continually being returned without a break condition.'].join(' '));\n      }\n    }\n\n    const {\n      name,\n      fn\n    } = middleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = { ...middlewareData,\n      [name]: { ...middlewareData[name],\n        ...data\n      }\n    };\n\n    if (reset) {\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n\n      i = -1;\n      continue;\n    }\n  }\n\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return { ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(middlewareArguments, options) {\n  var _await$platform$isEle;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect: elementContext === 'floating' ? { ...rects.floating,\n      x,\n      y\n    } : rects.reference,\n    offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n    strategy\n  }) : rects[elementContext]); // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  return {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type\n    const {\n      element,\n      padding = 0\n    } = options != null ? options : {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n\n    if (element == null) {\n      {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n\n      return {};\n    }\n\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    const clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside of the floating element's bounds\n\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max);\n    return {\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n\n});\n\nconst hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, matched => hash[matched]);\n}\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe;\n\n      const {\n        x,\n        y,\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        alignment = null,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n      const currentPlacement = placements[currentIndex];\n\n      if (currentPlacement == null) {\n        return {};\n      }\n\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))); // Make `computeCoords` start from the right place\n\n      if (placement !== currentPlacement) {\n        return {\n          x,\n          y,\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      const resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$flip;\n\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = side === initialPlacement;\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n        overflows.push(overflow[main], overflow[cross]);\n      }\n\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }]; // One or more sides is overflowing\n\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip$, _middlewareData$flip2;\n\n        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n        const nextPlacement = placements[nextIndex];\n\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        let resetPlacement = 'bottom';\n\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$slice$;\n\n              const placement = (_overflowsData$slice$ = overflowsData.slice().sort((a, b) => a.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0) - b.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0))[0]) == null ? void 0 : _overflowsData$slice$.placement;\n\n              if (placement) {\n                resetPlacement = placement;\n              }\n\n              break;\n            }\n\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (_temp) {\n  let {\n    strategy = 'referenceHidden',\n    ...detectOverflowOptions\n  } = _temp === void 0 ? {} : _temp;\n  return {\n    name: 'hide',\n\n    async fn(middlewareArguments) {\n      const {\n        rects\n      } = middlewareArguments;\n\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        default:\n          {\n            return {};\n          }\n      }\n    }\n\n  };\n};\n\nfunction convertValueToCoords(placement, rects, value, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value({ ...rects,\n    placement\n  }) : value;\n  const isNumber = typeof rawValue === 'number'; // eslint-disable-next-line prefer-const\n\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = isNumber ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const diffCoords = convertValueToCoords(placement, rects, value, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n\n      const limitedCoords = limiter.fn({ ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return { ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n\n  };\n};\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset({ ...rects,\n        placement\n      }) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        apply,\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      let heightSide;\n      let widthSide;\n\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        height: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        width: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      const prevDimensions = await platform.getDimensions(elements.floating);\n      apply == null ? void 0 : apply({ ...dimensions,\n        ...rects\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n\n      if (prevDimensions.width !== nextDimensions.width || prevDimensions.height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options,\n\n    async fn(middlewareArguments) {\n      var _await$platform$getCl;\n\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n        strategy\n      }) : rects.reference);\n      const clientRects = (_await$platform$getCl = await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) != null ? _await$platform$getCl : [];\n      const paddingObject = getSideObjectFromPadding(padding);\n\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          var _clientRects$find;\n\n          // Find the first rect in which the point is fully inside\n          return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;\n        } // There are 2 or more connected rects\n\n\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n\n        return fallback;\n      }\n\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"]},"metadata":{},"sourceType":"module"}