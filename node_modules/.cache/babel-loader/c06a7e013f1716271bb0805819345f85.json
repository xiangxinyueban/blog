{"ast":null,"code":"import _toConsumableArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createClass from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { isNil } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nvar SCOPE = \"ElUpload\";\n\nvar UploadAjaxError = /*#__PURE__*/function (_Error) {\n  _inherits(UploadAjaxError, _Error);\n\n  var _super = _createSuper(UploadAjaxError);\n\n  function UploadAjaxError(message, status, method, url) {\n    var _this;\n\n    _classCallCheck(this, UploadAjaxError);\n\n    _this = _super.call(this, message);\n    _this.name = \"UploadAjaxError\";\n    _this.status = status;\n    _this.method = method;\n    _this.url = url;\n    return _this;\n  }\n\n  return _createClass(UploadAjaxError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction getError(action, option, xhr) {\n  var msg;\n\n  if (xhr.response) {\n    msg = \"\".concat(xhr.response.error || xhr.response);\n  } else if (xhr.responseText) {\n    msg = \"\".concat(xhr.responseText);\n  } else {\n    msg = \"fail to \".concat(option.method, \" \").concat(action, \" \").concat(xhr.status);\n  }\n\n  return new UploadAjaxError(msg, xhr.status, option.method, action);\n}\n\nfunction getBody(xhr) {\n  var text = xhr.responseText || xhr.response;\n\n  if (!text) {\n    return text;\n  }\n\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n}\n\nvar ajaxUpload = function ajaxUpload(option) {\n  if (typeof XMLHttpRequest === \"undefined\") throwError(SCOPE, \"XMLHttpRequest is undefined\");\n  var xhr = new XMLHttpRequest();\n  var action = option.action;\n\n  if (xhr.upload) {\n    xhr.upload.addEventListener(\"progress\", function (evt) {\n      var progressEvt = evt;\n      progressEvt.percent = evt.total > 0 ? evt.loaded / evt.total * 100 : 0;\n      option.onProgress(progressEvt);\n    });\n  }\n\n  var formData = new FormData();\n\n  if (option.data) {\n    for (var _i = 0, _Object$entries = Object.entries(option.data); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n\n      if (Array.isArray(value)) formData.append.apply(formData, [key].concat(_toConsumableArray(value)));else formData.append(key, value);\n    }\n  }\n\n  formData.append(option.filename, option.file, option.file.name);\n  xhr.addEventListener(\"error\", function () {\n    option.onError(getError(action, option, xhr));\n  });\n  xhr.addEventListener(\"load\", function () {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(action, option, xhr));\n    }\n\n    option.onSuccess(getBody(xhr));\n  });\n  xhr.open(option.method, action, true);\n\n  if (option.withCredentials && \"withCredentials\" in xhr) {\n    xhr.withCredentials = true;\n  }\n\n  var headers = option.headers || {};\n\n  if (headers instanceof Headers) {\n    headers.forEach(function (value, key) {\n      return xhr.setRequestHeader(key, value);\n    });\n  } else {\n    for (var _i2 = 0, _Object$entries2 = Object.entries(headers); _i2 < _Object$entries2.length; _i2++) {\n      var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n          _key = _Object$entries2$_i[0],\n          _value = _Object$entries2$_i[1];\n\n      if (isNil(_value)) continue;\n      xhr.setRequestHeader(_key, String(_value));\n    }\n  }\n\n  xhr.send(formData);\n  return xhr;\n};\n\nexport { UploadAjaxError, ajaxUpload };","map":{"version":3,"mappings":"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","names":["SCOPE","UploadAjaxError","message","status","method","url","name","Error","getError","action","option","xhr","msg","response","error","responseText","getBody","text","JSON","parse","e","ajaxUpload","XMLHttpRequest","throwError","upload","addEventListener","evt","progressEvt","percent","total","loaded","onProgress","formData","FormData","data","Object","entries","key","value","Array","isArray","append","filename","file","onError","onSuccess","open","withCredentials","headers","Headers","forEach","setRequestHeader","isNil","String","send"],"sources":["../../../../../../packages/components/upload/src/ajax.ts"],"sourcesContent":["import { isNil } from 'lodash-unified'\nimport { throwError } from '@element-plus/utils'\nimport type {\n  UploadProgressEvent,\n  UploadRequestHandler,\n  UploadRequestOptions,\n} from './upload'\n\nconst SCOPE = 'ElUpload'\n\nexport class UploadAjaxError extends Error {\n  name = 'UploadAjaxError'\n  status: number\n  method: string\n  url: string\n\n  constructor(message: string, status: number, method: string, url: string) {\n    super(message)\n    this.status = status\n    this.method = method\n    this.url = url\n  }\n}\n\nfunction getError(\n  action: string,\n  option: UploadRequestOptions,\n  xhr: XMLHttpRequest\n) {\n  let msg: string\n  if (xhr.response) {\n    msg = `${xhr.response.error || xhr.response}`\n  } else if (xhr.responseText) {\n    msg = `${xhr.responseText}`\n  } else {\n    msg = `fail to ${option.method} ${action} ${xhr.status}`\n  }\n\n  return new UploadAjaxError(msg, xhr.status, option.method, action)\n}\n\nfunction getBody(xhr: XMLHttpRequest): XMLHttpRequestResponseType {\n  const text = xhr.responseText || xhr.response\n  if (!text) {\n    return text\n  }\n\n  try {\n    return JSON.parse(text)\n  } catch {\n    return text\n  }\n}\n\nexport const ajaxUpload: UploadRequestHandler = (option) => {\n  if (typeof XMLHttpRequest === 'undefined')\n    throwError(SCOPE, 'XMLHttpRequest is undefined')\n\n  const xhr = new XMLHttpRequest()\n  const action = option.action\n\n  if (xhr.upload) {\n    xhr.upload.addEventListener('progress', (evt) => {\n      const progressEvt = evt as UploadProgressEvent\n      progressEvt.percent = evt.total > 0 ? (evt.loaded / evt.total) * 100 : 0\n      option.onProgress(progressEvt)\n    })\n  }\n\n  const formData = new FormData()\n  if (option.data) {\n    for (const [key, value] of Object.entries(option.data)) {\n      if (Array.isArray(value)) formData.append(key, ...value)\n      else formData.append(key, value)\n    }\n  }\n  formData.append(option.filename, option.file, option.file.name)\n\n  xhr.addEventListener('error', () => {\n    option.onError(getError(action, option, xhr))\n  })\n\n  xhr.addEventListener('load', () => {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(action, option, xhr))\n    }\n    option.onSuccess(getBody(xhr))\n  })\n\n  xhr.open(option.method, action, true)\n\n  if (option.withCredentials && 'withCredentials' in xhr) {\n    xhr.withCredentials = true\n  }\n\n  const headers = option.headers || {}\n  if (headers instanceof Headers) {\n    headers.forEach((value, key) => xhr.setRequestHeader(key, value))\n  } else {\n    for (const [key, value] of Object.entries(headers)) {\n      if (isNil(value)) continue\n      xhr.setRequestHeader(key, String(value))\n    }\n  }\n\n  xhr.send(formData)\n  return xhr\n}\n"]},"metadata":{},"sourceType":"module"}