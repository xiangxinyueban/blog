{"ast":null,"code":"import _defineProperty from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, shallowRef, ref, computed, watch, onMounted, watchEffect, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, createElementVNode, renderSlot } from 'vue';\nimport { useWindowSize, useElementBounding, useEventListener } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { affixProps, affixEmits } from './affix.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { getScrollContainer } from '../../../utils/dom/scroll.mjs';\nvar __default__ = {\n  name: \"ElAffix\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: affixProps,\n  emits: affixEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n        emit = _ref.emit;\n    var props = __props;\n    var COMPONENT_NAME = \"ElAffix\";\n    var ns = useNamespace(\"affix\");\n    var target = shallowRef();\n    var root = shallowRef();\n    var scrollContainer = shallowRef();\n\n    var _useWindowSize = useWindowSize(),\n        windowHeight = _useWindowSize.height;\n\n    var _useElementBounding = useElementBounding(root),\n        rootHeight = _useElementBounding.height,\n        rootWidth = _useElementBounding.width,\n        rootTop = _useElementBounding.top,\n        rootBottom = _useElementBounding.bottom,\n        updateRoot = _useElementBounding.update;\n\n    var targetRect = useElementBounding(target);\n    var fixed = ref(false);\n    var scrollTop = ref(0);\n    var transform = ref(0);\n    var rootStyle = computed(function () {\n      return {\n        height: fixed.value ? \"\".concat(rootHeight.value, \"px\") : \"\",\n        width: fixed.value ? \"\".concat(rootWidth.value, \"px\") : \"\"\n      };\n    });\n    var affixStyle = computed(function () {\n      if (!fixed.value) return {};\n      var offset = props.offset ? \"\".concat(props.offset, \"px\") : 0;\n      return {\n        height: \"\".concat(rootHeight.value, \"px\"),\n        width: \"\".concat(rootWidth.value, \"px\"),\n        top: props.position === \"top\" ? offset : \"\",\n        bottom: props.position === \"bottom\" ? offset : \"\",\n        transform: transform.value ? \"translateY(\".concat(transform.value, \"px)\") : \"\",\n        zIndex: props.zIndex\n      };\n    });\n\n    var update = function update() {\n      if (!scrollContainer.value) return;\n      scrollTop.value = scrollContainer.value instanceof Window ? document.documentElement.scrollTop : scrollContainer.value.scrollTop || 0;\n\n      if (props.position === \"top\") {\n        if (props.target) {\n          var difference = targetRect.bottom.value - props.offset - rootHeight.value;\n          fixed.value = props.offset > rootTop.value && targetRect.bottom.value > 0;\n          transform.value = difference < 0 ? difference : 0;\n        } else {\n          fixed.value = props.offset > rootTop.value;\n        }\n      } else if (props.target) {\n        var _difference = windowHeight.value - targetRect.top.value - props.offset - rootHeight.value;\n\n        fixed.value = windowHeight.value - props.offset < rootBottom.value && windowHeight.value > targetRect.top.value;\n        transform.value = _difference < 0 ? -_difference : 0;\n      } else {\n        fixed.value = windowHeight.value - props.offset < rootBottom.value;\n      }\n    };\n\n    var handleScroll = function handleScroll() {\n      emit(\"scroll\", {\n        scrollTop: scrollTop.value,\n        fixed: fixed.value\n      });\n    };\n\n    watch(fixed, function (val) {\n      return emit(\"change\", val);\n    });\n    onMounted(function () {\n      var _a;\n\n      if (props.target) {\n        target.value = (_a = document.querySelector(props.target)) != null ? _a : void 0;\n        if (!target.value) throwError(COMPONENT_NAME, \"Target is not existed: \".concat(props.target));\n      } else {\n        target.value = document.documentElement;\n      }\n\n      scrollContainer.value = getScrollContainer(root.value, true);\n      updateRoot();\n    });\n    useEventListener(scrollContainer, \"scroll\", handleScroll);\n    watchEffect(update);\n    expose({\n      update: update\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"root\",\n        ref: root,\n        \"class\": normalizeClass(unref(ns).b()),\n        style: normalizeStyle(unref(rootStyle))\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(_defineProperty({}, unref(ns).m(\"fixed\"), fixed.value)),\n        style: normalizeStyle(unref(affixStyle))\n      }, [renderSlot(_ctx.$slots, \"default\")], 6)], 6);\n    };\n  }\n}));\n\nvar Affix = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/affix/src/affix.vue\"]]);\n\nexport { Affix as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAoBA;AAQA;AAEA;AACA;AACA;;AACA;AAAA;;AACA,8BAMAA,wBANA;AAAA,QACAC,UADA,uBACAC,MADA;AAAA,QAEAC,SAFA,uBAEAC,KAFA;AAAA,QAGAC,OAHA,uBAGAC,GAHA;AAAA,QAIAC,UAJA,uBAIAC,MAJA;AAAA,QAKAC,UALA,uBAKAC,MALA;;AAOA;AAEA;AACA;AACA;AAEA;AACA;AACAR,oEADA;AAEAE;AAFA;AAIA,KALA;AAOA;AACA;AAEA;AACA;AACAF,iDADA;AAEAE,+CAFA;AAGAE,mDAHA;AAIAE,yDAJA;AAKAG,sFALA;AAMAC;AANA;AAQA,KAZA;;AAcA;AACA;AAEAC,wBACAC,0CACAC,kCADA,GAEAD,oCAHA;;AAKA;AACA;AACA,2BACAE,yDADA;AAEAC;AACAN;AACA,SALA,MAKA;AACAM;AACA;AACA,OATA,MASA;AACA,0BACAC,qBACAF,oBADA,GAEAG,YAFA,GAGAlB,gBAJA;;AAKAgB,sBACAC,wDACAA,yCAFA;AAGAP;AACA,OAVA,MAUA;AACAM;AACA;AACA,KA9BA;;AAgCA;AACAG;AACAP,kCADA;AAEAI;AAFA;AAIA,KALA;;AAOAI;AAAA;AAAA;AAEAC;AACA;;AACA,gBACAC,MADA,EACA;AACAA;AACA,2BACAC;AACA,OALA,MAKA;AACAD;AACA;;AACAT;AACAL;AAEA,KAbA;AAcAgB;AAEAC;AAEAC;AACAjB;AADA","names":["useElementBounding","rootHeight","height","rootWidth","width","rootTop","top","rootBottom","bottom","updateRoot","update","transform","zIndex","scrollTop","scrollContainer","document","targetRect","fixed","windowHeight","props","emit","watch","onMounted","target","throwError","useEventListener","watchEffect","expose"],"sources":["../../../../../../packages/components/affix/src/affix.vue"],"sourcesContent":["<template>\n  <div ref=\"root\" :class=\"ns.b()\" :style=\"rootStyle\">\n    <div :class=\"{ [ns.m('fixed')]: fixed }\" :style=\"affixStyle\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted, ref, shallowRef, watch, watchEffect } from 'vue'\nimport {\n  useElementBounding,\n  useEventListener,\n  useWindowSize,\n} from '@vueuse/core'\nimport { getScrollContainer, throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { affixEmits, affixProps } from './affix'\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElAffix'\ndefineOptions({\n  name: 'ElAffix',\n})\n\nconst props = defineProps(affixProps)\nconst emit = defineEmits(affixEmits)\n\nconst ns = useNamespace('affix')\n\nconst target = shallowRef<HTMLElement>()\nconst root = shallowRef<HTMLDivElement>()\nconst scrollContainer = shallowRef<HTMLElement | Window>()\nconst { height: windowHeight } = useWindowSize()\nconst {\n  height: rootHeight,\n  width: rootWidth,\n  top: rootTop,\n  bottom: rootBottom,\n  update: updateRoot,\n} = useElementBounding(root)\nconst targetRect = useElementBounding(target)\n\nconst fixed = ref(false)\nconst scrollTop = ref(0)\nconst transform = ref(0)\n\nconst rootStyle = computed<CSSProperties>(() => {\n  return {\n    height: fixed.value ? `${rootHeight.value}px` : '',\n    width: fixed.value ? `${rootWidth.value}px` : '',\n  }\n})\n\nconst affixStyle = computed<CSSProperties>(() => {\n  if (!fixed.value) return {}\n\n  const offset = props.offset ? `${props.offset}px` : 0\n  return {\n    height: `${rootHeight.value}px`,\n    width: `${rootWidth.value}px`,\n    top: props.position === 'top' ? offset : '',\n    bottom: props.position === 'bottom' ? offset : '',\n    transform: transform.value ? `translateY(${transform.value}px)` : '',\n    zIndex: props.zIndex,\n  }\n})\n\nconst update = () => {\n  if (!scrollContainer.value) return\n\n  scrollTop.value =\n    scrollContainer.value instanceof Window\n      ? document.documentElement.scrollTop\n      : scrollContainer.value.scrollTop || 0\n\n  if (props.position === 'top') {\n    if (props.target) {\n      const difference =\n        targetRect.bottom.value - props.offset - rootHeight.value\n      fixed.value = props.offset > rootTop.value && targetRect.bottom.value > 0\n      transform.value = difference < 0 ? difference : 0\n    } else {\n      fixed.value = props.offset > rootTop.value\n    }\n  } else if (props.target) {\n    const difference =\n      windowHeight.value -\n      targetRect.top.value -\n      props.offset -\n      rootHeight.value\n    fixed.value =\n      windowHeight.value - props.offset < rootBottom.value &&\n      windowHeight.value > targetRect.top.value\n    transform.value = difference < 0 ? -difference : 0\n  } else {\n    fixed.value = windowHeight.value - props.offset < rootBottom.value\n  }\n}\n\nconst handleScroll = () => {\n  emit('scroll', {\n    scrollTop: scrollTop.value,\n    fixed: fixed.value,\n  })\n}\n\nwatch(fixed, (val) => emit('change', val))\n\nonMounted(() => {\n  if (props.target) {\n    target.value =\n      document.querySelector<HTMLElement>(props.target) ?? undefined\n    if (!target.value)\n      throwError(COMPONENT_NAME, `Target is not existed: ${props.target}`)\n  } else {\n    target.value = document.documentElement\n  }\n  scrollContainer.value = getScrollContainer(root.value!, true)\n  updateRoot()\n})\n\nuseEventListener(scrollContainer, 'scroll', handleScroll)\nwatchEffect(update)\n\ndefineExpose({\n  /** @description update affix status */\n  update,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}