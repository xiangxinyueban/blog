{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { defineComponent, ref, computed, inject, resolveComponent, openBlock, createBlock, Transition, withCtx, createElementBlock, normalizeClass, createElementVNode, createVNode, toDisplayString, createCommentVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../constants/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport '../../../../utils/index.mjs';\nimport TimeSpinner from './basic-time-spinner.mjs';\nimport { useOldValue, getAvailableArrs } from './useTimePicker.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { isUndefined } from '../../../../utils/types.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nvar _sfc_main = defineComponent({\n  components: {\n    TimeSpinner: TimeSpinner\n  },\n  props: {\n    visible: Boolean,\n    actualVisible: {\n      type: Boolean,\n      \"default\": void 0\n    },\n    datetimeRole: {\n      type: String\n    },\n    parsedValue: {\n      type: [Object, String]\n    },\n    format: {\n      type: String,\n      \"default\": \"\"\n    }\n  },\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n  setup: function setup(props, ctx) {\n    var ns = useNamespace(\"time\");\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t,\n        lang = _useLocale.lang;\n\n    var selectionRange = ref([0, 2]);\n    var oldValue = useOldValue(props);\n    var transitionName = computed(function () {\n      return isUndefined(props.actualVisible) ? \"\".concat(ns.namespace.value, \"-zoom-in-top\") : \"\";\n    });\n    var showSeconds = computed(function () {\n      return props.format.includes(\"ss\");\n    });\n    var amPmMode = computed(function () {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n\n    var isValidValue = function isValidValue(_date) {\n      var parsedDate = dayjs(_date).locale(lang.value);\n      var result = getRangeAvailableTime(parsedDate);\n      return parsedDate.isSame(result);\n    };\n\n    var handleCancel = function handleCancel() {\n      ctx.emit(\"pick\", oldValue.value, false);\n    };\n\n    var handleConfirm = function handleConfirm() {\n      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var first = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (first) return;\n      ctx.emit(\"pick\", props.parsedValue, visible);\n    };\n\n    var handleChange = function handleChange(_date) {\n      if (!props.visible) {\n        return;\n      }\n\n      var result = getRangeAvailableTime(_date).millisecond(0);\n      ctx.emit(\"pick\", result, true);\n    };\n\n    var setSelectionRange = function setSelectionRange(start, end) {\n      ctx.emit(\"select-range\", start, end);\n      selectionRange.value = [start, end];\n    };\n\n    var changeSelectionRange = function changeSelectionRange(step) {\n      var list = [0, 3].concat(showSeconds.value ? [6] : []);\n      var mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      var index = list.indexOf(selectionRange.value[0]);\n      var next = (index + step + list.length) % list.length;\n      timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n    };\n\n    var handleKeydown = function handleKeydown(event) {\n      var code = event.code;\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        var step = code === EVENT_CODE.left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        var _step = code === EVENT_CODE.up ? -1 : 1;\n\n        timePickerOptions[\"start_scrollDown\"](_step);\n        event.preventDefault();\n        return;\n      }\n    };\n\n    var getRangeAvailableTime = function getRangeAvailableTime(date) {\n      var availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds\n      };\n      var result = date;\n      [\"hour\", \"minute\", \"second\"].forEach(function (_) {\n        if (availableMap[_]) {\n          var availableArr;\n          var method = availableMap[_];\n\n          if (_ === \"minute\") {\n            availableArr = method(result.hour(), props.datetimeRole);\n          } else if (_ === \"second\") {\n            availableArr = method(result.hour(), result.minute(), props.datetimeRole);\n          } else {\n            availableArr = method(props.datetimeRole);\n          }\n\n          if (availableArr && availableArr.length && !availableArr.includes(result[_]())) {\n            result = result[_](availableArr[0]);\n          }\n        }\n      });\n      return result;\n    };\n\n    var parseUserInput = function parseUserInput(value) {\n      if (!value) return null;\n      return dayjs(value, props.format).locale(lang.value);\n    };\n\n    var formatToString = function formatToString(value) {\n      if (!value) return null;\n      return value.format(props.format);\n    };\n\n    var getDefaultValue = function getDefaultValue() {\n      return dayjs(defaultValue).locale(lang.value);\n    };\n\n    ctx.emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    ctx.emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    ctx.emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    ctx.emit(\"set-picker-option\", [\"handleKeydown\", handleKeydown]);\n    ctx.emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    ctx.emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    var timePickerOptions = {};\n\n    var onSetOption = function onSetOption(e) {\n      timePickerOptions[e[0]] = e[1];\n    };\n\n    var pickerBase = inject(\"EP_PICKER_BASE\");\n    var _pickerBase$props = pickerBase.props,\n        arrowControl = _pickerBase$props.arrowControl,\n        disabledHours = _pickerBase$props.disabledHours,\n        disabledMinutes = _pickerBase$props.disabledMinutes,\n        disabledSeconds = _pickerBase$props.disabledSeconds,\n        defaultValue = _pickerBase$props.defaultValue;\n\n    var _getAvailableArrs = getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds),\n        getAvailableHours = _getAvailableArrs.getAvailableHours,\n        getAvailableMinutes = _getAvailableArrs.getAvailableMinutes,\n        getAvailableSeconds = _getAvailableArrs.getAvailableSeconds;\n\n    return {\n      ns: ns,\n      transitionName: transitionName,\n      arrowControl: arrowControl,\n      onSetOption: onSetOption,\n      t: t,\n      handleConfirm: handleConfirm,\n      handleChange: handleChange,\n      setSelectionRange: setSelectionRange,\n      amPmMode: amPmMode,\n      showSeconds: showSeconds,\n      handleCancel: handleCancel,\n      disabledHours: disabledHours,\n      disabledMinutes: disabledMinutes,\n      disabledSeconds: disabledSeconds\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_time_spinner = resolveComponent(\"time-spinner\");\n\n  return openBlock(), createBlock(Transition, {\n    name: _ctx.transitionName\n  }, {\n    \"default\": withCtx(function () {\n      return [_ctx.actualVisible || _ctx.visible ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(_ctx.ns.b(\"panel\"))\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass([_ctx.ns.be(\"panel\", \"content\"), {\n          \"has-seconds\": _ctx.showSeconds\n        }])\n      }, [createVNode(_component_time_spinner, {\n        ref: \"spinner\",\n        role: _ctx.datetimeRole || \"start\",\n        \"arrow-control\": _ctx.arrowControl,\n        \"show-seconds\": _ctx.showSeconds,\n        \"am-pm-mode\": _ctx.amPmMode,\n        \"spinner-date\": _ctx.parsedValue,\n        \"disabled-hours\": _ctx.disabledHours,\n        \"disabled-minutes\": _ctx.disabledMinutes,\n        \"disabled-seconds\": _ctx.disabledSeconds,\n        onChange: _ctx.handleChange,\n        onSetOption: _ctx.onSetOption,\n        onSelectRange: _ctx.setSelectionRange\n      }, null, 8, [\"role\", \"arrow-control\", \"show-seconds\", \"am-pm-mode\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onChange\", \"onSetOption\", \"onSelectRange\"])], 2), createElementVNode(\"div\", {\n        \"class\": normalizeClass(_ctx.ns.be(\"panel\", \"footer\"))\n      }, [createElementVNode(\"button\", {\n        type: \"button\",\n        \"class\": normalizeClass([_ctx.ns.be(\"panel\", \"btn\"), \"cancel\"]),\n        onClick: _cache[0] || (_cache[0] = function () {\n          return _ctx.handleCancel && _ctx.handleCancel.apply(_ctx, arguments);\n        })\n      }, toDisplayString(_ctx.t(\"el.datepicker.cancel\")), 3), createElementVNode(\"button\", {\n        type: \"button\",\n        \"class\": normalizeClass([_ctx.ns.be(\"panel\", \"btn\"), \"confirm\"]),\n        onClick: _cache[1] || (_cache[1] = function ($event) {\n          return _ctx.handleConfirm();\n        })\n      }, toDisplayString(_ctx.t(\"el.datepicker.confirm\")), 3)], 2)], 2)) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1\n  }, 8, [\"name\"]);\n}\n\nvar TimePickPanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-pick.vue\"]]);\n\nexport { TimePickPanel as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","components","TimeSpinner","props","visible","actualVisible","type","datetimeRole","parsedValue","Object","String","format","emits","setup","ctx","useNamespace","useLocale","t","lang","selectionRange","useOldValue","computed","isUndefined","ns","namespace","value","includes","isValidValue","_date","parsedDate","dayjs","locale","getRangeAvailableTime","isSame","result","handleCancel","emit","oldValue","handleConfirm","first","handleChange","millisecond","setSelectionRange","start","end","changeSelectionRange","step","list","concat","showSeconds","mapping","index","indexOf","next","length","timePickerOptions","handleKeydown","event","code","left","EVENT_CODE","right","preventDefault","up","down","date","availableMap","hour","minute","second","forEach","_","method","availableArr","parseUserInput","formatToString","getDefaultValue","onSetOption","e","inject","pickerBase","arrowControl","disabledHours","disabledMinutes","disabledSeconds","defaultValue","getAvailableArrs","getAvailableHours","getAvailableMinutes","getAvailableSeconds","transitionName","amPmMode","_createBlock","name","_ctx","openBlock","_createElementBlock","key","_normalizeClass","b","_createElementVNode","be","_createVNode","ref","role","onChange","onSelectRange","onClick","_cache","_toDisplayString"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-pick.vue"],"sourcesContent":["<template>\n  <transition :name=\"transitionName\">\n    <div v-if=\"actualVisible || visible\" :class=\"ns.b('panel')\">\n      <div :class=\"[ns.be('panel', 'content'), { 'has-seconds': showSeconds }]\">\n        <time-spinner\n          ref=\"spinner\"\n          :role=\"datetimeRole || 'start'\"\n          :arrow-control=\"arrowControl\"\n          :show-seconds=\"showSeconds\"\n          :am-pm-mode=\"amPmMode\"\n          :spinner-date=\"parsedValue\"\n          :disabled-hours=\"disabledHours\"\n          :disabled-minutes=\"disabledMinutes\"\n          :disabled-seconds=\"disabledSeconds\"\n          @change=\"handleChange\"\n          @set-option=\"onSetOption\"\n          @select-range=\"setSelectionRange\"\n        />\n      </div>\n      <div :class=\"ns.be('panel', 'footer')\">\n        <button\n          type=\"button\"\n          :class=\"[ns.be('panel', 'btn'), 'cancel']\"\n          @click=\"handleCancel\"\n        >\n          {{ t('el.datepicker.cancel') }}\n        </button>\n        <button\n          type=\"button\"\n          :class=\"[ns.be('panel', 'btn'), 'confirm']\"\n          @click=\"handleConfirm()\"\n        >\n          {{ t('el.datepicker.confirm') }}\n        </button>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { isUndefined } from '@element-plus/utils'\nimport TimeSpinner from './basic-time-spinner.vue'\nimport { getAvailableArrs, useOldValue } from './useTimePicker'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nexport default defineComponent({\n  components: {\n    TimeSpinner,\n  },\n\n  props: {\n    visible: Boolean,\n    actualVisible: {\n      type: Boolean,\n      default: undefined,\n    },\n    datetimeRole: {\n      type: String,\n    },\n    parsedValue: {\n      type: [Object, String] as PropType<string | Dayjs>,\n    },\n    format: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: ['pick', 'select-range', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const ns = useNamespace('time')\n    const { t, lang } = useLocale()\n    // data\n    const selectionRange = ref([0, 2])\n    const oldValue = useOldValue(props)\n    // computed\n    const transitionName = computed(() => {\n      return isUndefined(props.actualVisible)\n        ? `${ns.namespace.value}-zoom-in-top`\n        : ''\n    })\n    const showSeconds = computed(() => {\n      return props.format.includes('ss')\n    })\n    const amPmMode = computed(() => {\n      if (props.format.includes('A')) return 'A'\n      if (props.format.includes('a')) return 'a'\n      return ''\n    })\n    // method\n    const isValidValue = (_date: Dayjs) => {\n      const parsedDate = dayjs(_date).locale(lang.value)\n      const result = getRangeAvailableTime(parsedDate)\n      return parsedDate.isSame(result)\n    }\n    const handleCancel = () => {\n      ctx.emit('pick', oldValue.value, false)\n    }\n    const handleConfirm = (visible = false, first = false) => {\n      if (first) return\n      ctx.emit('pick', props.parsedValue, visible)\n    }\n    const handleChange = (_date: Dayjs) => {\n      // visible avoids edge cases, when use scrolls during panel closing animation\n      if (!props.visible) {\n        return\n      }\n      const result = getRangeAvailableTime(_date).millisecond(0)\n      ctx.emit('pick', result, true)\n    }\n\n    const setSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end)\n      selectionRange.value = [start, end]\n    }\n\n    const changeSelectionRange = (step: number) => {\n      const list = [0, 3].concat(showSeconds.value ? [6] : [])\n      const mapping = ['hours', 'minutes'].concat(\n        showSeconds.value ? ['seconds'] : []\n      )\n      const index = list.indexOf(selectionRange.value[0])\n      const next = (index + step + list.length) % list.length\n      timePickerOptions['start_emitSelectRange'](mapping[next])\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1\n        changeSelectionRange(step)\n        event.preventDefault()\n        return\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1\n        timePickerOptions['start_scrollDown'](step)\n        event.preventDefault()\n        return\n      }\n    }\n\n    const getRangeAvailableTime = (date: Dayjs) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds,\n      }\n      let result = date\n      ;['hour', 'minute', 'second'].forEach((_) => {\n        if (availableMap[_]) {\n          let availableArr\n          const method = availableMap[_]\n          if (_ === 'minute') {\n            availableArr = method(result.hour(), props.datetimeRole)\n          } else if (_ === 'second') {\n            availableArr = method(\n              result.hour(),\n              result.minute(),\n              props.datetimeRole\n            )\n          } else {\n            availableArr = method(props.datetimeRole)\n          }\n          if (\n            availableArr &&\n            availableArr.length &&\n            !availableArr.includes(result[_]())\n          ) {\n            result = result[_](availableArr[0])\n          }\n        }\n      })\n      return result\n    }\n\n    const parseUserInput = (value: Dayjs) => {\n      if (!value) return null\n      return dayjs(value, props.format).locale(lang.value)\n    }\n\n    const formatToString = (value: Dayjs) => {\n      if (!value) return null\n      return value.format(props.format)\n    }\n\n    const getDefaultValue = () => {\n      return dayjs(defaultValue).locale(lang.value)\n    }\n\n    ctx.emit('set-picker-option', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    ctx.emit('set-picker-option', ['parseUserInput', parseUserInput])\n    ctx.emit('set-picker-option', ['handleKeydown', handleKeydown])\n    ctx.emit('set-picker-option', [\n      'getRangeAvailableTime',\n      getRangeAvailableTime,\n    ])\n    ctx.emit('set-picker-option', ['getDefaultValue', getDefaultValue])\n    const timePickerOptions = {} as any\n    const onSetOption = (e) => {\n      timePickerOptions[e[0]] = e[1]\n    }\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue,\n    } = pickerBase.props\n    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n      getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds)\n\n    return {\n      ns,\n\n      transitionName,\n      arrowControl,\n      onSetOption,\n      t,\n      handleConfirm,\n      handleChange,\n      setSelectionRange,\n      amPmMode,\n      showSeconds,\n      handleCancel,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}