{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { NOOP } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport { ajaxUpload } from './ajax.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nvar uploadListTypes = [\"text\", \"picture\", \"picture-card\"];\nvar fileId = 1;\n\nvar genFileId = function genFileId() {\n  return Date.now() + fileId++;\n};\n\nvar uploadBaseProps = buildProps({\n  action: {\n    type: String,\n    required: true\n  },\n  headers: {\n    type: definePropType(Object)\n  },\n  method: {\n    type: String,\n    \"default\": \"post\"\n  },\n  data: {\n    type: Object,\n    \"default\": function _default() {\n      return mutable({});\n    }\n  },\n  multiple: {\n    type: Boolean,\n    \"default\": false\n  },\n  name: {\n    type: String,\n    \"default\": \"file\"\n  },\n  drag: {\n    type: Boolean,\n    \"default\": false\n  },\n  withCredentials: Boolean,\n  showFileList: {\n    type: Boolean,\n    \"default\": true\n  },\n  accept: {\n    type: String,\n    \"default\": \"\"\n  },\n  type: {\n    type: String,\n    \"default\": \"select\"\n  },\n  fileList: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return mutable([]);\n    }\n  },\n  autoUpload: {\n    type: Boolean,\n    \"default\": true\n  },\n  listType: {\n    type: String,\n    values: uploadListTypes,\n    \"default\": \"text\"\n  },\n  httpRequest: {\n    type: definePropType(Function),\n    \"default\": ajaxUpload\n  },\n  disabled: Boolean,\n  limit: Number\n});\nvar uploadProps = buildProps(_objectSpread(_objectSpread({}, uploadBaseProps), {}, {\n  beforeUpload: {\n    type: definePropType(Function),\n    \"default\": NOOP\n  },\n  beforeRemove: {\n    type: definePropType(Function)\n  },\n  onRemove: {\n    type: definePropType(Function),\n    \"default\": NOOP\n  },\n  onChange: {\n    type: definePropType(Function),\n    \"default\": NOOP\n  },\n  onPreview: {\n    type: definePropType(Function),\n    \"default\": NOOP\n  },\n  onSuccess: {\n    type: definePropType(Function),\n    \"default\": NOOP\n  },\n  onProgress: {\n    type: definePropType(Function),\n    \"default\": NOOP\n  },\n  onError: {\n    type: definePropType(Function),\n    \"default\": NOOP\n  },\n  onExceed: {\n    type: definePropType(Function),\n    \"default\": NOOP\n  }\n}));\nexport { genFileId, uploadBaseProps, uploadListTypes, uploadProps };","map":{"version":3,"mappings":"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","names":["uploadListTypes","fileId","genFileId","Date","now","uploadBaseProps","buildProps","action","type","String","required","headers","definePropType","Object","method","data","mutable","multiple","Boolean","name","drag","withCredentials","showFileList","accept","fileList","Array","autoUpload","listType","values","httpRequest","Function","ajaxUpload","disabled","limit","Number","uploadProps","beforeUpload","NOOP","beforeRemove","onRemove","onChange","onPreview","onSuccess","onProgress","onError","onExceed"],"sources":["../../../../../../packages/components/upload/src/upload.ts"],"sourcesContent":["import { NOOP } from '@vue/shared'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport { ajaxUpload } from './ajax'\n\nimport type { UploadAjaxError } from './ajax'\nimport type { Awaitable } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type Upload from './upload.vue'\n\nexport const uploadListTypes = ['text', 'picture', 'picture-card'] as const\n\nlet fileId = 1\nexport const genFileId = () => Date.now() + fileId++\n\nexport type UploadStatus = 'ready' | 'uploading' | 'success' | 'fail'\nexport interface UploadProgressEvent extends ProgressEvent {\n  percent: number\n}\n\nexport interface UploadRequestOptions {\n  action: string\n  method: string\n  data: Record<string, string | Blob | [string | Blob, string]>\n  filename: string\n  file: File\n  headers: Headers | Record<string, string | number | null | undefined>\n  onError: (evt: UploadAjaxError) => void\n  onProgress: (evt: UploadProgressEvent) => void\n  onSuccess: (response: any) => void\n  withCredentials: boolean\n}\nexport interface UploadFile {\n  name: string\n  percentage?: number\n  status: UploadStatus\n  size?: number\n  response?: unknown\n  uid: number\n  url?: string\n  raw?: UploadRawFile\n}\nexport type UploadUserFile = Omit<UploadFile, 'status' | 'uid'> &\n  Partial<Pick<UploadFile, 'status' | 'uid'>>\n\nexport type UploadFiles = UploadFile[]\nexport interface UploadRawFile extends File {\n  uid: number\n}\nexport type UploadRequestHandler = (\n  options: UploadRequestOptions\n) => XMLHttpRequest | Promise<unknown>\nexport interface UploadHooks {\n  beforeUpload: (\n    rawFile: UploadRawFile\n  ) => Awaitable<void | undefined | null | boolean | File | Blob>\n  beforeRemove: (\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => Awaitable<boolean>\n  onRemove: (uploadFile: UploadFile, uploadFiles: UploadFiles) => void\n  onChange: (uploadFile: UploadFile, uploadFiles: UploadFiles) => void\n  onPreview: (uploadFile: UploadFile) => void\n  onSuccess: (\n    response: any,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onProgress: (\n    evt: UploadProgressEvent,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onError: (\n    error: Error,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onExceed: (files: File[], uploadFiles: UploadUserFile[]) => void\n}\n\nexport const uploadBaseProps = buildProps({\n  action: {\n    type: String,\n    required: true,\n  },\n  headers: {\n    type: definePropType<Headers | Record<string, any>>(Object),\n  },\n  method: {\n    type: String,\n    default: 'post',\n  },\n  data: {\n    type: Object,\n    default: () => mutable({} as const),\n  },\n  multiple: {\n    type: Boolean,\n    default: false,\n  },\n  name: {\n    type: String,\n    default: 'file',\n  },\n  drag: {\n    type: Boolean,\n    default: false,\n  },\n  withCredentials: Boolean,\n  showFileList: {\n    type: Boolean,\n    default: true,\n  },\n  accept: {\n    type: String,\n    default: '',\n  },\n  type: {\n    type: String,\n    default: 'select',\n  },\n  fileList: {\n    type: definePropType<UploadUserFile[]>(Array),\n    default: () => mutable([] as const),\n  },\n  autoUpload: {\n    type: Boolean,\n    default: true,\n  },\n  listType: {\n    type: String,\n    values: uploadListTypes,\n    default: 'text',\n  },\n  httpRequest: {\n    type: definePropType<UploadRequestHandler>(Function),\n    default: ajaxUpload,\n  },\n  disabled: Boolean,\n  limit: Number,\n} as const)\n\nexport const uploadProps = buildProps({\n  ...uploadBaseProps,\n  beforeUpload: {\n    type: definePropType<UploadHooks['beforeUpload']>(Function),\n    default: NOOP,\n  },\n  beforeRemove: {\n    type: definePropType<UploadHooks['beforeRemove']>(Function),\n  },\n  onRemove: {\n    type: definePropType<UploadHooks['onRemove']>(Function),\n    default: NOOP,\n  },\n  onChange: {\n    type: definePropType<UploadHooks['onChange']>(Function),\n    default: NOOP,\n  },\n  onPreview: {\n    type: definePropType<UploadHooks['onPreview']>(Function),\n    default: NOOP,\n  },\n  onSuccess: {\n    type: definePropType<UploadHooks['onSuccess']>(Function),\n    default: NOOP,\n  },\n  onProgress: {\n    type: definePropType<UploadHooks['onProgress']>(Function),\n    default: NOOP,\n  },\n  onError: {\n    type: definePropType<UploadHooks['onError']>(Function),\n    default: NOOP,\n  },\n  onExceed: {\n    type: definePropType<UploadHooks['onExceed']>(Function),\n    default: NOOP,\n  },\n} as const)\n\nexport type UploadProps = ExtractPropTypes<typeof uploadProps>\n\nexport type UploadInstance = InstanceType<typeof Upload>\n"]},"metadata":{},"sourceType":"module"}