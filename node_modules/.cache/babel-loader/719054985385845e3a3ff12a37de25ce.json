{"ast":null,"code":"import _typeof from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _createForOfIteratorHelper from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { defineComponent, getCurrentInstance, ref, computed, onBeforeMount, onMounted, onBeforeUnmount, Fragment, h } from 'vue';\nimport { ElCheckbox } from '../../../checkbox/index.mjs';\nimport '../../../../utils/index.mjs';\nimport { cellStarts } from '../config.mjs';\nimport { mergeOptions, compose } from '../util.mjs';\nimport useWatcher from './watcher-helper.mjs';\nimport useRender from './render-helper.mjs';\nimport defaultProps from './defaults.mjs';\nimport { isString } from '@vue/shared';\nvar columnIdSeed = 1;\nvar ElTableColumn = defineComponent({\n  name: \"ElTableColumn\",\n  components: {\n    ElCheckbox: ElCheckbox\n  },\n  props: defaultProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var instance = getCurrentInstance();\n    var columnConfig = ref({});\n    var owner = computed(function () {\n      var parent2 = instance.parent;\n\n      while (parent2 && !parent2.tableId) {\n        parent2 = parent2.parent;\n      }\n\n      return parent2;\n    });\n\n    var _useWatcher = useWatcher(owner, props),\n        registerNormalWatchers = _useWatcher.registerNormalWatchers,\n        registerComplexWatchers = _useWatcher.registerComplexWatchers;\n\n    var _useRender = useRender(props, slots, owner),\n        columnId = _useRender.columnId,\n        isSubColumn = _useRender.isSubColumn,\n        realHeaderAlign = _useRender.realHeaderAlign,\n        columnOrTableParent = _useRender.columnOrTableParent,\n        setColumnWidth = _useRender.setColumnWidth,\n        setColumnForcedProps = _useRender.setColumnForcedProps,\n        setColumnRenders = _useRender.setColumnRenders,\n        getPropsData = _useRender.getPropsData,\n        getColumnElIndex = _useRender.getColumnElIndex,\n        realAlign = _useRender.realAlign;\n\n    var parent = columnOrTableParent.value;\n    columnId.value = \"\".concat(parent.tableId || parent.columnId, \"_column_\").concat(columnIdSeed++);\n    onBeforeMount(function () {\n      isSubColumn.value = owner.value !== parent;\n      var type = props.type || \"default\";\n      var sortable = props.sortable === \"\" ? true : props.sortable;\n\n      var defaults = _objectSpread(_objectSpread({}, cellStarts[type]), {}, {\n        id: columnId.value,\n        type: type,\n        property: props.prop || props.property,\n        align: realAlign,\n        headerAlign: realHeaderAlign,\n        showOverflowTooltip: props.showOverflowTooltip || props.showTooltipWhenOverflow,\n        filterable: props.filters || props.filterMethod,\n        filteredValue: [],\n        filterPlacement: \"\",\n        isColumnGroup: false,\n        isSubColumn: false,\n        filterOpened: false,\n        sortable: sortable,\n        index: props.index,\n        rawColumnKey: instance.vnode.key\n      });\n\n      var basicProps = [\"columnKey\", \"label\", \"className\", \"labelClassName\", \"type\", \"renderHeader\", \"formatter\", \"fixed\", \"resizable\"];\n      var sortProps = [\"sortMethod\", \"sortBy\", \"sortOrders\"];\n      var selectProps = [\"selectable\", \"reserveSelection\"];\n      var filterProps = [\"filterMethod\", \"filters\", \"filterMultiple\", \"filterOpened\", \"filteredValue\", \"filterPlacement\"];\n      var column = getPropsData(basicProps, sortProps, selectProps, filterProps);\n      column = mergeOptions(defaults, column);\n      var chains = compose(setColumnRenders, setColumnWidth, setColumnForcedProps);\n      column = chains(column);\n      columnConfig.value = column;\n      registerNormalWatchers();\n      registerComplexWatchers();\n    });\n    onMounted(function () {\n      var _a;\n\n      var parent2 = columnOrTableParent.value;\n      var children = isSubColumn.value ? parent2.vnode.el.children : (_a = parent2.refs.hiddenColumns) == null ? void 0 : _a.children;\n\n      var getColumnIndex = function getColumnIndex() {\n        return getColumnElIndex(children || [], instance.vnode.el);\n      };\n\n      columnConfig.value.getColumnIndex = getColumnIndex;\n      var columnIndex = getColumnIndex();\n      columnIndex > -1 && owner.value.store.commit(\"insertColumn\", columnConfig.value, isSubColumn.value ? parent2.columnConfig.value : null);\n    });\n    onBeforeUnmount(function () {\n      owner.value.store.commit(\"removeColumn\", columnConfig.value, isSubColumn.value ? parent.columnConfig.value : null);\n    });\n    instance.columnId = columnId.value;\n    instance.columnConfig = columnConfig;\n    return;\n  },\n  render: function render() {\n    var _this = this;\n\n    var _a, _b, _c;\n\n    try {\n      var _ret = function () {\n        var renderDefault = (_b = (_a = _this.$slots)[\"default\"]) == null ? void 0 : _b.call(_a, {\n          row: {},\n          column: {},\n          $index: -1\n        });\n        var children = [];\n\n        if (Array.isArray(renderDefault)) {\n          var _iterator = _createForOfIteratorHelper(renderDefault),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var childNode = _step.value;\n\n              if (((_c = childNode.type) == null ? void 0 : _c.name) === \"ElTableColumn\" || childNode.shapeFlag & 2) {\n                children.push(childNode);\n              } else if (childNode.type === Fragment && Array.isArray(childNode.children)) {\n                childNode.children.forEach(function (vnode2) {\n                  if ((vnode2 == null ? void 0 : vnode2.patchFlag) !== 1024 && !isString(vnode2 == null ? void 0 : vnode2.children)) {\n                    children.push(vnode2);\n                  }\n                });\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        var vnode = h(\"div\", children);\n        return {\n          v: vnode\n        };\n      }();\n\n      if (_typeof(_ret) === \"object\") return _ret.v;\n    } catch (e) {\n      return h(\"div\", []);\n    }\n  }\n});\nexport { ElTableColumn as default };","map":{"version":3,"mappings":"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","names":["columnIdSeed","defineComponent","name","components","ElCheckbox","props","defaultProps","setup","slots","instance","getCurrentInstance","columnConfig","ref","owner","computed","parent2","parent","tableId","useWatcher","registerNormalWatchers","registerComplexWatchers","useRender","columnId","isSubColumn","realHeaderAlign","columnOrTableParent","setColumnWidth","setColumnForcedProps","setColumnRenders","getPropsData","getColumnElIndex","realAlign","value","onBeforeMount","type","sortable","defaults","cellStarts","id","property","prop","align","headerAlign","showOverflowTooltip","showTooltipWhenOverflow","filterable","filters","filterMethod","filteredValue","filterPlacement","isColumnGroup","filterOpened","index","rawColumnKey","vnode","key","basicProps","sortProps","selectProps","filterProps","column","mergeOptions","chains","compose","onMounted","_a","children","el","refs","hiddenColumns","getColumnIndex","columnIndex","store","commit","onBeforeUnmount","render","_b","_c","renderDefault","$slots","call","row","$index","Array","isArray","childNode","shapeFlag","push","Fragment","forEach","vnode2","patchFlag","isString","h","e"],"sources":["../../../../../../../packages/components/table/src/table-column/index.ts"],"sourcesContent":["import {\n  Fragment,\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  onBeforeMount,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n} from 'vue'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { isString } from '@element-plus/utils'\nimport { cellStarts } from '../config'\nimport { compose, mergeOptions } from '../util'\nimport useWatcher from './watcher-helper'\nimport useRender from './render-helper'\nimport defaultProps from './defaults'\nimport type { TableColumn, TableColumnCtx } from './defaults'\n\nimport type { DefaultRow } from '../table/defaults'\n\nlet columnIdSeed = 1\n\nexport default defineComponent({\n  name: 'ElTableColumn',\n  components: {\n    ElCheckbox,\n  },\n  props: defaultProps,\n  setup(props, { slots }) {\n    const instance = getCurrentInstance() as TableColumn<DefaultRow>\n    const columnConfig = ref<Partial<TableColumnCtx<DefaultRow>>>({})\n    const owner = computed(() => {\n      let parent = instance.parent as any\n      while (parent && !parent.tableId) {\n        parent = parent.parent\n      }\n      return parent\n    })\n\n    const { registerNormalWatchers, registerComplexWatchers } = useWatcher(\n      owner,\n      props\n    )\n    const {\n      columnId,\n      isSubColumn,\n      realHeaderAlign,\n      columnOrTableParent,\n      setColumnWidth,\n      setColumnForcedProps,\n      setColumnRenders,\n      getPropsData,\n      getColumnElIndex,\n      realAlign,\n    } = useRender(props as unknown as TableColumnCtx<unknown>, slots, owner)\n\n    const parent = columnOrTableParent.value\n    columnId.value = `${\n      parent.tableId || parent.columnId\n    }_column_${columnIdSeed++}`\n    onBeforeMount(() => {\n      isSubColumn.value = owner.value !== parent\n\n      const type = props.type || 'default'\n      const sortable = props.sortable === '' ? true : props.sortable\n      const defaults = {\n        ...cellStarts[type],\n        id: columnId.value,\n        type,\n        property: props.prop || props.property,\n        align: realAlign,\n        headerAlign: realHeaderAlign,\n        showOverflowTooltip:\n          props.showOverflowTooltip || props.showTooltipWhenOverflow,\n        // filter 相关属性\n        filterable: props.filters || props.filterMethod,\n        filteredValue: [],\n        filterPlacement: '',\n        isColumnGroup: false,\n        isSubColumn: false,\n        filterOpened: false,\n        // sort 相关属性\n        sortable,\n        // index 列\n        index: props.index,\n        // <el-table-column key=\"xxx\" />\n        rawColumnKey: instance.vnode.key,\n      }\n\n      const basicProps = [\n        'columnKey',\n        'label',\n        'className',\n        'labelClassName',\n        'type',\n        'renderHeader',\n        'formatter',\n        'fixed',\n        'resizable',\n      ]\n      const sortProps = ['sortMethod', 'sortBy', 'sortOrders']\n      const selectProps = ['selectable', 'reserveSelection']\n      const filterProps = [\n        'filterMethod',\n        'filters',\n        'filterMultiple',\n        'filterOpened',\n        'filteredValue',\n        'filterPlacement',\n      ]\n\n      let column = getPropsData(basicProps, sortProps, selectProps, filterProps)\n\n      column = mergeOptions(defaults, column)\n      // 注意 compose 中函数执行的顺序是从右到左\n      const chains = compose(\n        setColumnRenders,\n        setColumnWidth,\n        setColumnForcedProps\n      )\n      column = chains(column)\n      columnConfig.value = column\n\n      // 注册 watcher\n      registerNormalWatchers()\n      registerComplexWatchers()\n    })\n    onMounted(() => {\n      const parent = columnOrTableParent.value\n      const children = isSubColumn.value\n        ? parent.vnode.el.children\n        : parent.refs.hiddenColumns?.children\n      const getColumnIndex = () =>\n        getColumnElIndex(children || [], instance.vnode.el)\n      columnConfig.value.getColumnIndex = getColumnIndex\n      const columnIndex = getColumnIndex()\n      columnIndex > -1 &&\n        owner.value.store.commit(\n          'insertColumn',\n          columnConfig.value,\n          isSubColumn.value ? parent.columnConfig.value : null\n        )\n    })\n    onBeforeUnmount(() => {\n      owner.value.store.commit(\n        'removeColumn',\n        columnConfig.value,\n        isSubColumn.value ? parent.columnConfig.value : null\n      )\n    })\n    instance.columnId = columnId.value\n\n    instance.columnConfig = columnConfig\n    return\n  },\n  render() {\n    try {\n      const renderDefault = this.$slots.default?.({\n        row: {},\n        column: {},\n        $index: -1,\n      })\n      const children = []\n      if (Array.isArray(renderDefault)) {\n        for (const childNode of renderDefault) {\n          if (\n            childNode.type?.name === 'ElTableColumn' ||\n            childNode.shapeFlag & 2\n          ) {\n            children.push(childNode)\n          } else if (\n            childNode.type === Fragment &&\n            Array.isArray(childNode.children)\n          ) {\n            childNode.children.forEach((vnode) => {\n              // No rendering when vnode is dynamic slot or text\n              if (vnode?.patchFlag !== 1024 && !isString(vnode?.children)) {\n                children.push(vnode)\n              }\n            })\n          }\n        }\n      }\n      const vnode = h('div', children)\n      return vnode\n    } catch {\n      return h('div', [])\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}