{"ast":null,"code":"import _slicedToArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport { getCurrentInstance, computed } from 'vue';\nimport { fromPairs } from 'lodash-unified';\nimport '../../utils/index.mjs';\nimport { debugWarn } from '../../utils/error.mjs';\nvar DEFAULT_EXCLUDE_KEYS = [\"class\", \"style\"];\nvar LISTENER_PREFIX = /^on[A-Z]/;\n\nvar useAttrs = function useAttrs() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _params$excludeListen = params.excludeListeners,\n      excludeListeners = _params$excludeListen === void 0 ? false : _params$excludeListen,\n      _params$excludeKeys = params.excludeKeys,\n      excludeKeys = _params$excludeKeys === void 0 ? [] : _params$excludeKeys;\n  var allExcludeKeys = excludeKeys.concat(DEFAULT_EXCLUDE_KEYS);\n  var instance = getCurrentInstance();\n\n  if (!instance) {\n    debugWarn(\"use-attrs\", \"getCurrentInstance() returned null. useAttrs() must be called at the top of a setup function\");\n    return computed(function () {\n      return {};\n    });\n  }\n\n  return computed(function () {\n    var _a;\n\n    return fromPairs(Object.entries((_a = instance.proxy) == null ? void 0 : _a.$attrs).filter(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          key = _ref2[0];\n\n      return !allExcludeKeys.includes(key) && !(excludeListeners && LISTENER_PREFIX.test(key));\n    }));\n  });\n};\n\nexport { useAttrs };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAGA,IAAMA,oBAAoB,GAAG,CAAC,OAAD,EAAU,OAAV,CAA7B;AACA,IAAMC,eAAe,GAAG,UAAxB;;AACY,IAACC,QAAQ,GAAG,SAAXA,QAAW,GAAiB;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;AACvC,8BAAuDA,MAAvD,CAAQC,gBAAR;AAAA,MAAQA,gBAAR,sCAA2B,KAA3B;AAAA,4BAAuDD,MAAvD,CAAkCE,WAAlC;AAAA,MAAkCA,WAAlC,oCAAgD,EAAhD;AACA,MAAMC,cAAc,GAAGD,WAAW,CAACE,MAAZ,CAAmBP,oBAAnB,CAAvB;AACA,MAAMQ,QAAQ,GAAGC,kBAAkB,EAAnC;;AACA,MAAI,CAACD,QAAL,EAAe;AACbE,aAAS,CAAC,WAAD,EAAc,8FAAd,CAAT;AACA,WAAOC,QAAQ,CAAC;AAAA,aAAO,EAAP;AAAA,KAAD,CAAf;AACD;;AACD,SAAOA,QAAQ,CAAC,YAAM;AACpB,QAAIC,EAAJ;;AACA,WAAOC,SAAS,CAACC,MAAM,CAACC,OAAP,CAAe,CAACH,EAAE,GAAGJ,QAAQ,CAACQ,KAAf,KAAyB,IAAzB,GAAgC,KAAK,CAArC,GAAyCJ,EAAE,CAACK,MAA3D,EAAmEC,MAAnE,CAA0E;AAAA;AAAA,UAAEC,GAAF;;AAAA,aAAW,CAACb,cAAc,CAACc,QAAf,CAAwBD,GAAxB,CAAD,IAAiC,EAAEf,gBAAgB,IAAIH,eAAe,CAACoB,IAAhB,CAAqBF,GAArB,CAAtB,CAA5C;AAAA,KAA1E,CAAD,CAAhB;AACD,GAHc,CAAf;AAIF,CAZY","names":["DEFAULT_EXCLUDE_KEYS","LISTENER_PREFIX","useAttrs","params","excludeListeners","excludeKeys","allExcludeKeys","concat","instance","getCurrentInstance","debugWarn","computed","_a","fromPairs","Object","entries","proxy","$attrs","filter","key","includes","test"],"sources":["../../../../../packages/hooks/use-attrs/index.ts"],"sourcesContent":["import { computed, getCurrentInstance } from 'vue'\nimport { fromPairs } from 'lodash-unified'\nimport { debugWarn } from '@element-plus/utils'\n\nimport type { ComputedRef } from 'vue'\n\ninterface Params {\n  excludeListeners?: boolean\n  excludeKeys?: string[]\n}\n\nconst DEFAULT_EXCLUDE_KEYS = ['class', 'style']\nconst LISTENER_PREFIX = /^on[A-Z]/\n\nexport const useAttrs = (\n  params: Params = {}\n): ComputedRef<Record<string, unknown>> => {\n  const { excludeListeners = false, excludeKeys = [] } = params\n  const allExcludeKeys = excludeKeys.concat(DEFAULT_EXCLUDE_KEYS)\n\n  const instance = getCurrentInstance()\n  if (!instance) {\n    debugWarn(\n      'use-attrs',\n      'getCurrentInstance() returned null. useAttrs() must be called at the top of a setup function'\n    )\n    return computed(() => ({}))\n  }\n\n  return computed(() =>\n    fromPairs(\n      Object.entries(instance.proxy?.$attrs!).filter(\n        ([key]) =>\n          !allExcludeKeys.includes(key) &&\n          !(excludeListeners && LISTENER_PREFIX.test(key))\n      )\n    )\n  )\n}\n"]},"metadata":{},"sourceType":"module"}