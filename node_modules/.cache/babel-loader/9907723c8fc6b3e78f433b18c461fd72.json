{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.parse-int.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { isVNode, createVNode, render } from 'vue';\nimport { isClient, isNumber } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { messageConfig } from '../../config-provider/src/config-provider.mjs';\nimport MessageConstructor from './message2.mjs';\nimport { messageTypes } from './message.mjs';\nimport { isObject, isString, isFunction } from '@vue/shared';\nimport { useZIndex } from '../../../hooks/use-z-index/index.mjs';\nimport { isElement } from '../../../utils/types.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nvar instances = [];\nvar seed = 1;\n\nvar message = function message() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var context = arguments.length > 1 ? arguments[1] : undefined;\n  if (!isClient) return {\n    close: function close() {\n      return void 0;\n    }\n  };\n\n  if (isNumber(messageConfig.max) && instances.length >= messageConfig.max) {\n    return {\n      close: function close() {\n        return void 0;\n      }\n    };\n  }\n\n  if (!isVNode(options) && isObject(options) && options.grouping && !isVNode(options.message) && instances.length) {\n    var tempVm = instances.find(function (item) {\n      var _a, _b, _c;\n\n      return \"\".concat((_b = (_a = item.vm.props) == null ? void 0 : _a.message) != null ? _b : \"\") === \"\".concat((_c = options.message) != null ? _c : \"\");\n    });\n\n    if (tempVm) {\n      tempVm.vm.component.props.repeatNum += 1;\n      tempVm.vm.component.props.type = (options == null ? void 0 : options.type) || \"info\";\n      return {\n        close: function close() {\n          return vm.component.proxy.visible = false;\n        }\n      };\n    }\n  }\n\n  if (isString(options) || isVNode(options)) {\n    options = {\n      message: options\n    };\n  }\n\n  var verticalOffset = options.offset || 20;\n  instances.forEach(function (_ref) {\n    var vm2 = _ref.vm;\n\n    var _a;\n\n    verticalOffset += (((_a = vm2.el) == null ? void 0 : _a.offsetHeight) || 0) + 16;\n  });\n  verticalOffset += 16;\n\n  var _useZIndex = useZIndex(),\n      nextZIndex = _useZIndex.nextZIndex;\n\n  var id = \"message_\".concat(seed++);\n  var userOnClose = options.onClose;\n\n  var props = _objectSpread(_objectSpread({\n    zIndex: nextZIndex()\n  }, options), {}, {\n    offset: verticalOffset,\n    id: id,\n    onClose: function onClose() {\n      close(id, userOnClose);\n    }\n  });\n\n  var appendTo = document.body;\n\n  if (isElement(options.appendTo)) {\n    appendTo = options.appendTo;\n  } else if (isString(options.appendTo)) {\n    appendTo = document.querySelector(options.appendTo);\n  }\n\n  if (!isElement(appendTo)) {\n    debugWarn(\"ElMessage\", \"the appendTo option is not an HTMLElement. Falling back to document.body.\");\n    appendTo = document.body;\n  }\n\n  var container = document.createElement(\"div\");\n  container.className = \"container_\".concat(id);\n  var messageContent = props.message;\n  var vm = createVNode(MessageConstructor, props, isFunction(messageContent) ? {\n    \"default\": messageContent\n  } : isVNode(messageContent) ? {\n    \"default\": function _default() {\n      return messageContent;\n    }\n  } : null);\n  vm.appContext = context || message._context;\n\n  vm.props.onDestroy = function () {\n    render(null, container);\n  };\n\n  render(vm, container);\n  instances.push({\n    vm: vm\n  });\n  appendTo.appendChild(container.firstElementChild);\n  return {\n    close: function close() {\n      return vm.component.proxy.visible = false;\n    }\n  };\n};\n\nmessageTypes.forEach(function (type) {\n  message[type] = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var appContext = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (isString(options) || isVNode(options)) {\n      options = {\n        message: options\n      };\n    }\n\n    return message(_objectSpread(_objectSpread({}, options), {}, {\n      type: type\n    }), appContext);\n  };\n});\n\nfunction close(id, userOnClose) {\n  var idx = instances.findIndex(function (_ref2) {\n    var vm2 = _ref2.vm;\n    return id === vm2.component.props.id;\n  });\n  if (idx === -1) return;\n  var vm = instances[idx].vm;\n  if (!vm) return;\n  userOnClose == null ? void 0 : userOnClose(vm);\n  var removedHeight = vm.el.offsetHeight;\n  instances.splice(idx, 1);\n  var len = instances.length;\n  if (len < 1) return;\n\n  for (var i = idx; i < len; i++) {\n    var pos = Number.parseInt(instances[i].vm.el.style[\"top\"], 10) - removedHeight - 16;\n    instances[i].vm.component.props.offset = pos;\n  }\n}\n\nfunction closeAll() {\n  var _a;\n\n  for (var i = instances.length - 1; i >= 0; i--) {\n    var instance = instances[i].vm.component;\n    (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.close();\n  }\n}\n\nmessage.closeAll = closeAll;\nmessage._context = null;\nexport { close, closeAll, message as default };","map":{"version":3,"mappings":"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","names":["instances","seed","message","options","context","isClient","close","isNumber","messageConfig","max","length","isVNode","isObject","grouping","tempVm","find","item","_a","_b","_c","vm","props","component","repeatNum","type","proxy","visible","isString","verticalOffset","offset","forEach","vm2","el","offsetHeight","useZIndex","nextZIndex","id","userOnClose","onClose","zIndex","appendTo","document","body","isElement","querySelector","debugWarn","container","createElement","className","messageContent","createVNode","MessageConstructor","isFunction","appContext","_context","onDestroy","render","push","appendChild","firstElementChild","messageTypes","idx","findIndex","removedHeight","splice","len","i","pos","Number","parseInt","style","closeAll","instance"],"sources":["../../../../../../packages/components/message/src/message-method.ts"],"sourcesContent":["import { createVNode, render } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport {\n  debugWarn,\n  isElement,\n  isFunction,\n  isNumber,\n  isObject,\n  isString,\n  isVNode,\n} from '@element-plus/utils'\nimport { useZIndex } from '@element-plus/hooks'\nimport { messageConfig } from '@element-plus/components/config-provider/src/config-provider'\nimport MessageConstructor from './message.vue'\nimport { messageTypes } from './message'\n\nimport type { AppContext, ComponentPublicInstance, VNode } from 'vue'\nimport type { Message, MessageFn, MessageProps, MessageQueue } from './message'\n\nconst instances: MessageQueue = []\nlet seed = 1\n\n// TODO: Since Notify.ts is basically the same like this file. So we could do some encapsulation against them to reduce code duplication.\n\nconst message: MessageFn & Partial<Message> & { _context: AppContext | null } =\n  function (options = {}, context?: AppContext | null) {\n    if (!isClient) return { close: () => undefined }\n    if (isNumber(messageConfig.max) && instances.length >= messageConfig.max) {\n      return { close: () => undefined }\n    }\n\n    if (\n      !isVNode(options) &&\n      isObject(options) &&\n      options.grouping &&\n      !isVNode(options.message) &&\n      instances.length\n    ) {\n      const tempVm: any = instances.find(\n        (item) =>\n          `${item.vm.props?.message ?? ''}` ===\n          `${(options as any).message ?? ''}`\n      )\n      if (tempVm) {\n        tempVm.vm.component!.props.repeatNum += 1\n        tempVm.vm.component!.props.type = options?.type || 'info'\n        return {\n          close: () =>\n            ((\n              vm.component!.proxy as ComponentPublicInstance<{\n                visible: boolean\n              }>\n            ).visible = false),\n        }\n      }\n    }\n\n    if (isString(options) || isVNode(options)) {\n      options = { message: options }\n    }\n\n    let verticalOffset = options.offset || 20\n    instances.forEach(({ vm }) => {\n      verticalOffset += (vm.el?.offsetHeight || 0) + 16\n    })\n    verticalOffset += 16\n\n    const { nextZIndex } = useZIndex()\n\n    const id = `message_${seed++}`\n    const userOnClose = options.onClose\n    const props: Partial<MessageProps> = {\n      zIndex: nextZIndex(),\n      ...options,\n      offset: verticalOffset,\n      id,\n      onClose: () => {\n        close(id, userOnClose)\n      },\n    }\n\n    let appendTo: HTMLElement | null = document.body\n    if (isElement(options.appendTo)) {\n      appendTo = options.appendTo\n    } else if (isString(options.appendTo)) {\n      appendTo = document.querySelector(options.appendTo)\n    }\n    // should fallback to default value with a warning\n    if (!isElement(appendTo)) {\n      debugWarn(\n        'ElMessage',\n        'the appendTo option is not an HTMLElement. Falling back to document.body.'\n      )\n      appendTo = document.body\n    }\n\n    const container = document.createElement('div')\n\n    container.className = `container_${id}`\n\n    const messageContent = props.message\n    const vm = createVNode(\n      MessageConstructor,\n      props,\n      isFunction(messageContent)\n        ? { default: messageContent }\n        : isVNode(messageContent)\n        ? { default: () => messageContent }\n        : null\n    )\n\n    vm.appContext = context || message._context\n\n    // clean message element preventing mem leak\n    vm.props!.onDestroy = () => {\n      render(null, container)\n      // since the element is destroy, then the VNode should be collected by GC as well\n      // we do not want cause any mem leak because we have returned vm as a reference to users\n      // so that we manually set it to false.\n    }\n\n    render(vm, container)\n    // instances will remove this item when close function gets called. So we do not need to worry about it.\n    instances.push({ vm })\n    appendTo.appendChild(container.firstElementChild!)\n\n    return {\n      // instead of calling the onClose function directly, setting this value so that we can have the full lifecycle\n      // for out component, so that all closing steps will not be skipped.\n      close: () =>\n        ((\n          vm.component!.proxy as ComponentPublicInstance<{ visible: boolean }>\n        ).visible = false),\n    }\n  }\n\nmessageTypes.forEach((type) => {\n  message[type] = (options = {}, appContext?: AppContext | null) => {\n    if (isString(options) || isVNode(options)) {\n      options = {\n        message: options,\n      }\n    }\n    return message(\n      {\n        ...options,\n        type,\n      },\n      appContext\n    )\n  }\n})\n\nexport function close(id: string, userOnClose?: (vm: VNode) => void): void {\n  const idx = instances.findIndex(({ vm }) => id === vm.component!.props.id)\n  if (idx === -1) return\n\n  const { vm } = instances[idx]\n  if (!vm) return\n  userOnClose?.(vm)\n\n  const removedHeight = vm.el!.offsetHeight\n  instances.splice(idx, 1)\n\n  // adjust other instances vertical offset\n  const len = instances.length\n  if (len < 1) return\n  for (let i = idx; i < len; i++) {\n    const pos =\n      Number.parseInt(instances[i].vm.el!.style['top'], 10) - removedHeight - 16\n\n    instances[i].vm.component!.props.offset = pos\n  }\n}\n\nexport function closeAll(): void {\n  for (let i = instances.length - 1; i >= 0; i--) {\n    const instance = instances[i].vm.component\n    ;(instance?.proxy as any)?.close()\n  }\n}\n\nmessage.closeAll = closeAll\nmessage._context = null\n\nexport default message as Message\n"]},"metadata":{},"sourceType":"module"}