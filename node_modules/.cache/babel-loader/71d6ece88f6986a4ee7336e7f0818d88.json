{"ast":null,"code":"import _defineProperty from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { defineComponent, inject, ref, getCurrentInstance, provide, watch, nextTick, resolveComponent, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, createVNode, Fragment, renderList, vShow } from 'vue';\nimport { isFunction, isString } from '@vue/shared';\nimport _CollapseTransition from '../../collapse-transition/index.mjs';\nimport { ElCheckbox } from '../../checkbox/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Loading, CaretRight } from '@element-plus/icons-vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport NodeContent from './tree-node-content.mjs';\nimport { getNodeKey } from './model/util.mjs';\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast.mjs';\nimport { dragEventsKey } from './model/useDragNode.mjs';\nimport Node from './model/node.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElTreeNode\",\n  components: {\n    ElCollapseTransition: _CollapseTransition,\n    ElCheckbox: ElCheckbox,\n    NodeContent: NodeContent,\n    ElIcon: ElIcon,\n    Loading: Loading\n  },\n  props: {\n    node: {\n      type: Node,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    props: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  emits: [\"node-expand\"],\n  setup: function setup(props, ctx) {\n    var ns = useNamespace(\"tree\");\n\n    var _useNodeExpandEventBr = useNodeExpandEventBroadcast(props),\n        broadcastExpanded = _useNodeExpandEventBr.broadcastExpanded;\n\n    var tree = inject(\"RootTree\");\n    var expanded = ref(false);\n    var childNodeRendered = ref(false);\n    var oldChecked = ref(null);\n    var oldIndeterminate = ref(null);\n    var node$ = ref(null);\n    var dragEvents = inject(dragEventsKey);\n    var instance = getCurrentInstance();\n    provide(\"NodeInstance\", instance);\n\n    if (!tree) {\n      debugWarn(\"Tree\", \"Can not find node's tree.\");\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true;\n      childNodeRendered.value = true;\n    }\n\n    var childrenKey = tree.props[\"children\"] || \"children\";\n    watch(function () {\n      var children = props.node.data[childrenKey];\n      return children && _toConsumableArray(children);\n    }, function () {\n      props.node.updateChildren();\n    });\n    watch(function () {\n      return props.node.indeterminate;\n    }, function (val) {\n      handleSelectChange(props.node.checked, val);\n    });\n    watch(function () {\n      return props.node.checked;\n    }, function (val) {\n      handleSelectChange(val, props.node.indeterminate);\n    });\n    watch(function () {\n      return props.node.expanded;\n    }, function (val) {\n      nextTick(function () {\n        return expanded.value = val;\n      });\n\n      if (val) {\n        childNodeRendered.value = true;\n      }\n    });\n\n    var getNodeKey$1 = function getNodeKey$1(node) {\n      return getNodeKey(tree.props.nodeKey, node.data);\n    };\n\n    var getNodeClass = function getNodeClass(node) {\n      var nodeClassFunc = props.props[\"class\"];\n\n      if (!nodeClassFunc) {\n        return {};\n      }\n\n      var className;\n\n      if (isFunction(nodeClassFunc)) {\n        var data = node.data;\n        className = nodeClassFunc(data, node);\n      } else {\n        className = nodeClassFunc;\n      }\n\n      if (isString(className)) {\n        return _defineProperty({}, className, true);\n      } else {\n        return className;\n      }\n    };\n\n    var handleSelectChange = function handleSelectChange(checked, indeterminate) {\n      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {\n        tree.ctx.emit(\"check-change\", props.node.data, checked, indeterminate);\n      }\n\n      oldChecked.value = checked;\n      oldIndeterminate.value = indeterminate;\n    };\n\n    var handleClick = function handleClick(e) {\n      var store = tree.store.value;\n      store.setCurrentNode(props.node);\n      tree.ctx.emit(\"current-change\", store.currentNode ? store.currentNode.data : null, store.currentNode);\n      tree.currentNode.value = props.node;\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick();\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: {\n            checked: !props.node.checked\n          }\n        });\n      }\n\n      tree.ctx.emit(\"node-click\", props.node.data, props.node, instance, e);\n    };\n\n    var handleContextMenu = function handleContextMenu(event) {\n      if (tree.instance.vnode.props[\"onNodeContextmenu\"]) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      tree.ctx.emit(\"node-contextmenu\", event, props.node.data, props.node, instance);\n    };\n\n    var handleExpandIconClick = function handleExpandIconClick() {\n      if (props.node.isLeaf) return;\n\n      if (expanded.value) {\n        tree.ctx.emit(\"node-collapse\", props.node.data, props.node, instance);\n        props.node.collapse();\n      } else {\n        props.node.expand();\n        ctx.emit(\"node-expand\", props.node.data, props.node, instance);\n      }\n    };\n\n    var handleCheckChange = function handleCheckChange(value, ev) {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly);\n      nextTick(function () {\n        var store = tree.store.value;\n        tree.ctx.emit(\"check\", props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys()\n        });\n      });\n    };\n\n    var handleChildNodeExpand = function handleChildNodeExpand(nodeData, node, instance2) {\n      broadcastExpanded(node);\n      tree.ctx.emit(\"node-expand\", nodeData, node, instance2);\n    };\n\n    var handleDragStart = function handleDragStart(event) {\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragStart({\n        event: event,\n        treeNode: props\n      });\n    };\n\n    var handleDragOver = function handleDragOver(event) {\n      event.preventDefault();\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragOver({\n        event: event,\n        treeNode: {\n          $el: node$.value,\n          node: props.node\n        }\n      });\n    };\n\n    var handleDrop = function handleDrop(event) {\n      event.preventDefault();\n    };\n\n    var handleDragEnd = function handleDragEnd(event) {\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragEnd(event);\n    };\n\n    return {\n      ns: ns,\n      node$: node$,\n      tree: tree,\n      expanded: expanded,\n      childNodeRendered: childNodeRendered,\n      oldChecked: oldChecked,\n      oldIndeterminate: oldIndeterminate,\n      getNodeKey: getNodeKey$1,\n      getNodeClass: getNodeClass,\n      handleSelectChange: handleSelectChange,\n      handleClick: handleClick,\n      handleContextMenu: handleContextMenu,\n      handleExpandIconClick: handleExpandIconClick,\n      handleCheckChange: handleCheckChange,\n      handleChildNodeExpand: handleChildNodeExpand,\n      handleDragStart: handleDragStart,\n      handleDragOver: handleDragOver,\n      handleDrop: handleDrop,\n      handleDragEnd: handleDragEnd,\n      CaretRight: CaretRight\n    };\n  }\n});\n\nvar _hoisted_1 = [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"draggable\", \"data-key\"];\nvar _hoisted_2 = [\"aria-expanded\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_checkbox = resolveComponent(\"el-checkbox\");\n\n  var _component_loading = resolveComponent(\"loading\");\n\n  var _component_node_content = resolveComponent(\"node-content\");\n\n  var _component_el_tree_node = resolveComponent(\"el-tree-node\");\n\n  var _component_el_collapse_transition = resolveComponent(\"el-collapse-transition\");\n\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"node$\",\n    \"class\": normalizeClass([_ctx.ns.b(\"node\"), _ctx.ns.is(\"expanded\", _ctx.expanded), _ctx.ns.is(\"current\", _ctx.node.isCurrent), _ctx.ns.is(\"hidden\", !_ctx.node.visible), _ctx.ns.is(\"focusable\", !_ctx.node.disabled), _ctx.ns.is(\"checked\", !_ctx.node.disabled && _ctx.node.checked), _ctx.getNodeClass(_ctx.node)]),\n    role: \"treeitem\",\n    tabindex: \"-1\",\n    \"aria-expanded\": _ctx.expanded,\n    \"aria-disabled\": _ctx.node.disabled,\n    \"aria-checked\": _ctx.node.checked,\n    draggable: _ctx.tree.props.draggable,\n    \"data-key\": _ctx.getNodeKey(_ctx.node),\n    onClick: _cache[1] || (_cache[1] = withModifiers(function () {\n      return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onContextmenu: _cache[2] || (_cache[2] = function () {\n      return _ctx.handleContextMenu && _ctx.handleContextMenu.apply(_ctx, arguments);\n    }),\n    onDragstart: _cache[3] || (_cache[3] = withModifiers(function () {\n      return _ctx.handleDragStart && _ctx.handleDragStart.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDragover: _cache[4] || (_cache[4] = withModifiers(function () {\n      return _ctx.handleDragOver && _ctx.handleDragOver.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDragend: _cache[5] || (_cache[5] = withModifiers(function () {\n      return _ctx.handleDragEnd && _ctx.handleDragEnd.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDrop: _cache[6] || (_cache[6] = withModifiers(function () {\n      return _ctx.handleDrop && _ctx.handleDrop.apply(_ctx, arguments);\n    }, [\"stop\"]))\n  }, [createElementVNode(\"div\", {\n    \"class\": normalizeClass(_ctx.ns.be(\"node\", \"content\")),\n    style: normalizeStyle({\n      paddingLeft: (_ctx.node.level - 1) * _ctx.tree.props.indent + \"px\"\n    })\n  }, [_ctx.tree.props.icon || _ctx.CaretRight ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    \"class\": normalizeClass([_ctx.ns.be(\"node\", \"expand-icon\"), _ctx.ns.is(\"leaf\", _ctx.node.isLeaf), {\n      expanded: !_ctx.node.isLeaf && _ctx.expanded\n    }]),\n    onClick: withModifiers(_ctx.handleExpandIconClick, [\"stop\"])\n  }, {\n    \"default\": withCtx(function () {\n      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.tree.props.icon || _ctx.CaretRight)))];\n    }),\n    _: 1\n  }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.showCheckbox ? (openBlock(), createBlock(_component_el_checkbox, {\n    key: 1,\n    \"model-value\": _ctx.node.checked,\n    indeterminate: _ctx.node.indeterminate,\n    disabled: !!_ctx.node.disabled,\n    onClick: _cache[0] || (_cache[0] = withModifiers(function () {}, [\"stop\"])),\n    onChange: _ctx.handleCheckChange\n  }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onChange\"])) : createCommentVNode(\"v-if\", true), _ctx.node.loading ? (openBlock(), createBlock(_component_el_icon, {\n    key: 2,\n    \"class\": normalizeClass([_ctx.ns.be(\"node\", \"loading-icon\"), _ctx.ns.is(\"loading\")])\n  }, {\n    \"default\": withCtx(function () {\n      return [createVNode(_component_loading)];\n    }),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), createVNode(_component_node_content, {\n    node: _ctx.node,\n    \"render-content\": _ctx.renderContent\n  }, null, 8, [\"node\", \"render-content\"])], 6), createVNode(_component_el_collapse_transition, null, {\n    \"default\": withCtx(function () {\n      return [!_ctx.renderAfterExpand || _ctx.childNodeRendered ? withDirectives((openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(_ctx.ns.be(\"node\", \"children\")),\n        role: \"group\",\n        \"aria-expanded\": _ctx.expanded\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.node.childNodes, function (child) {\n        return openBlock(), createBlock(_component_el_tree_node, {\n          key: _ctx.getNodeKey(child),\n          \"render-content\": _ctx.renderContent,\n          \"render-after-expand\": _ctx.renderAfterExpand,\n          \"show-checkbox\": _ctx.showCheckbox,\n          node: child,\n          accordion: _ctx.accordion,\n          props: _ctx.props,\n          onNodeExpand: _ctx.handleChildNodeExpand\n        }, null, 8, [\"render-content\", \"render-after-expand\", \"show-checkbox\", \"node\", \"accordion\", \"props\", \"onNodeExpand\"]);\n      }), 128))], 10, _hoisted_2)), [[vShow, _ctx.expanded]]) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1\n  })], 42, _hoisted_1)), [[vShow, _ctx.node.visible]]);\n}\n\nvar ElTreeNode = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node.vue\"]]);\n\nexport { ElTreeNode as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElCollapseTransition","ElCheckbox","NodeContent","ElIcon","Loading","props","node","type","accordion","renderContent","renderAfterExpand","showCheckbox","emits","setup","ctx","useNamespace","useNodeExpandEventBroadcast","broadcastExpanded","inject","ref","dragEventsKey","instance","getCurrentInstance","provide","tree","debugWarn","expanded","value","childNodeRendered","watch","data","childrenKey","children","updateChildren","indeterminate","val","handleSelectChange","checked","nextTick","getNodeKey","getNodeKeyUtil","nodeKey","getNodeClass","nodeClassFunc","className","oldChecked","oldIndeterminate","emit","handleClick","e","store","currentNode","expandOnClickNode","handleExpandIconClick","checkOnClickNode","disabled","handleCheckChange","target","handleContextMenu","event","vnode","stopPropagation","preventDefault","isLeaf","collapse","expand","ev","setChecked","checkStrictly","checkedNodes","getCheckedNodes","checkedKeys","getCheckedKeys","halfCheckedNodes","getHalfCheckedNodes","halfCheckedKeys","getHalfCheckedKeys","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","dragEvents","treeNodeDragStart","treeNode","handleDragOver","treeNodeDragOver","$el","node$","handleDrop","handleDragEnd","treeNodeDragEnd","ns","CaretRight","_createElementBlock","_normalizeClass","_ctx","b","is","isCurrent","visible","role","tabindex","onClick","_cache","onContextmenu","onDragstart","onDragover","onDragend","onDrop","_createElementVNode","be","style","_normalizeStyle","paddingLeft","level","indent","icon","_openBlock","_createBlock","key","_withModifiers","onChange","_createCommentVNode","loading","openBlock","_createVNode","withDirectives","_Fragment","_renderList","childNodes","child","onNodeExpand"],"sources":["../../../../../../packages/components/tree/src/tree-node.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"node.visible\"\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', node.isCurrent),\n      ns.is('hidden', !node.visible),\n      ns.is('focusable', !node.disabled),\n      ns.is('checked', !node.disabled && node.checked),\n      getNodeClass(node),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"node.disabled\"\n    :aria-checked=\"node.checked\"\n    :draggable=\"tree.props.draggable\"\n    :data-key=\"getNodeKey(node)\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @dragend.stop=\"handleDragEnd\"\n    @drop.stop=\"handleDrop\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{ paddingLeft: (node.level - 1) * tree.props.indent + 'px' }\"\n    >\n      <el-icon\n        v-if=\"tree.props.icon || CaretRight\"\n        :class=\"[\n          ns.be('node', 'expand-icon'),\n          ns.is('leaf', node.isLeaf),\n          {\n            expanded: !node.isLeaf && expanded,\n          },\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"tree.props.icon || CaretRight\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"node.checked\"\n        :indeterminate=\"node.indeterminate\"\n        :disabled=\"!!node.disabled\"\n        @click.stop\n        @change=\"handleCheckChange\"\n      />\n      <el-icon\n        v-if=\"node.loading\"\n        :class=\"[ns.be('node', 'loading-icon'), ns.is('loading')]\"\n      >\n        <loading />\n      </el-icon>\n      <node-content :node=\"node\" :render-content=\"renderContent\" />\n    </div>\n    <el-collapse-transition>\n      <div\n        v-if=\"!renderAfterExpand || childNodeRendered\"\n        v-show=\"expanded\"\n        :class=\"ns.be('node', 'children')\"\n        role=\"group\"\n        :aria-expanded=\"expanded\"\n      >\n        <el-tree-node\n          v-for=\"child in node.childNodes\"\n          :key=\"getNodeKey(child)\"\n          :render-content=\"renderContent\"\n          :render-after-expand=\"renderAfterExpand\"\n          :show-checkbox=\"showCheckbox\"\n          :node=\"child\"\n          :accordion=\"accordion\"\n          :props=\"props\"\n          @node-expand=\"handleChildNodeExpand\"\n        />\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { isFunction, isString } from '@vue/shared'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CaretRight, Loading } from '@element-plus/icons-vue'\nimport { debugWarn } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport NodeContent from './tree-node-content.vue'\nimport { getNodeKey as getNodeKeyUtil } from './model/util'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { dragEventsKey } from './model/useDragNode'\nimport Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type { RootTreeType, TreeNodeData, TreeOptionProps } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading,\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<TreeOptionProps>,\n      default: () => ({}),\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['node-expand'],\n  setup(props, ctx) {\n    const ns = useNamespace('tree')\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n    const tree = inject<RootTreeType>('RootTree')\n    const expanded = ref(false)\n    const childNodeRendered = ref(false)\n    const oldChecked = ref<boolean>(null)\n    const oldIndeterminate = ref<boolean>(null)\n    const node$ = ref<Nullable<HTMLElement>>(null)\n    const dragEvents = inject(dragEventsKey)\n    const instance = getCurrentInstance()\n\n    provide('NodeInstance', instance)\n    if (!tree) {\n      debugWarn('Tree', \"Can not find node's tree.\")\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true\n      childNodeRendered.value = true\n    }\n\n    const childrenKey = tree.props['children'] || 'children'\n    watch(\n      () => {\n        const children = props.node.data[childrenKey]\n        return children && [...children]\n      },\n      () => {\n        props.node.updateChildren()\n      }\n    )\n\n    watch(\n      () => props.node.indeterminate,\n      (val) => {\n        handleSelectChange(props.node.checked, val)\n      }\n    )\n\n    watch(\n      () => props.node.checked,\n      (val) => {\n        handleSelectChange(val, props.node.indeterminate)\n      }\n    )\n\n    watch(\n      () => props.node.expanded,\n      (val) => {\n        nextTick(() => (expanded.value = val))\n        if (val) {\n          childNodeRendered.value = true\n        }\n      }\n    )\n\n    const getNodeKey = (node: Node): any => {\n      return getNodeKeyUtil(tree.props.nodeKey, node.data)\n    }\n\n    const getNodeClass = (node: Node) => {\n      const nodeClassFunc = props.props.class\n      if (!nodeClassFunc) {\n        return {}\n      }\n      let className\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node\n        className = nodeClassFunc(data, node)\n      } else {\n        className = nodeClassFunc\n      }\n\n      if (isString(className)) {\n        return { [className]: true }\n      } else {\n        return className\n      }\n    }\n\n    const handleSelectChange = (checked: boolean, indeterminate: boolean) => {\n      if (\n        oldChecked.value !== checked ||\n        oldIndeterminate.value !== indeterminate\n      ) {\n        tree.ctx.emit('check-change', props.node.data, checked, indeterminate)\n      }\n      oldChecked.value = checked\n      oldIndeterminate.value = indeterminate\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      const store = tree.store.value\n      store.setCurrentNode(props.node)\n      tree.ctx.emit(\n        'current-change',\n        store.currentNode ? store.currentNode.data : null,\n        store.currentNode\n      )\n      tree.currentNode.value = props.node\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick()\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked },\n        })\n      }\n      tree.ctx.emit('node-click', props.node.data, props.node, instance, e)\n    }\n\n    const handleContextMenu = (event: Event) => {\n      if (tree.instance.vnode.props['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree.ctx.emit(\n        'node-contextmenu',\n        event,\n        props.node.data,\n        props.node,\n        instance\n      )\n    }\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return\n      if (expanded.value) {\n        tree.ctx.emit('node-collapse', props.node.data, props.node, instance)\n        props.node.collapse()\n      } else {\n        props.node.expand()\n        ctx.emit('node-expand', props.node.data, props.node, instance)\n      }\n    }\n\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly)\n      nextTick(() => {\n        const store = tree.store.value\n        tree.ctx.emit('check', props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys(),\n        })\n      })\n    }\n\n    const handleChildNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      tree.ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const handleDragStart = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragStart({ event, treeNode: props })\n    }\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node },\n      })\n    }\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault()\n    }\n\n    const handleDragEnd = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragEnd(event)\n    }\n\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}