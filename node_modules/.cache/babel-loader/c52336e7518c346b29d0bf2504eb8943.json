{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { inject, computed, ref, getCurrentInstance, watch } from 'vue';\nimport { toTypeString } from '@vue/shared';\nimport '../../../constants/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { formContextKey, formItemContextKey } from '../../../tokens/form.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nvar useCheckboxProps = {\n  modelValue: {\n    type: [Boolean, Number, String],\n    \"default\": function _default() {\n      return void 0;\n    }\n  },\n  label: {\n    type: [String, Boolean, Number, Object]\n  },\n  indeterminate: Boolean,\n  disabled: Boolean,\n  checked: Boolean,\n  name: {\n    type: String,\n    \"default\": void 0\n  },\n  trueLabel: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  falseLabel: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  tabindex: [String, Number],\n  size: String\n};\n\nvar useCheckboxGroup = function useCheckboxGroup() {\n  var elForm = inject(formContextKey, {});\n  var elFormItem = inject(formItemContextKey, {});\n  var checkboxGroup = inject(\"CheckboxGroup\", {});\n  var isGroup = computed(function () {\n    return checkboxGroup && (checkboxGroup == null ? void 0 : checkboxGroup.name) === \"ElCheckboxGroup\";\n  });\n  var elFormItemSize = computed(function () {\n    return elFormItem.size;\n  });\n  return {\n    isGroup: isGroup,\n    checkboxGroup: checkboxGroup,\n    elForm: elForm,\n    elFormItemSize: elFormItemSize,\n    elFormItem: elFormItem\n  };\n};\n\nvar useModel = function useModel(props) {\n  var selfModel = ref(false);\n\n  var _getCurrentInstance = getCurrentInstance(),\n      emit = _getCurrentInstance.emit;\n\n  var _useCheckboxGroup = useCheckboxGroup(),\n      isGroup = _useCheckboxGroup.isGroup,\n      checkboxGroup = _useCheckboxGroup.checkboxGroup;\n\n  var isLimitExceeded = ref(false);\n  var model = computed({\n    get: function get() {\n      var _a, _b;\n\n      return isGroup.value ? (_a = checkboxGroup.modelValue) == null ? void 0 : _a.value : (_b = props.modelValue) != null ? _b : selfModel.value;\n    },\n    set: function set(val) {\n      var _a;\n\n      if (isGroup.value && Array.isArray(val)) {\n        isLimitExceeded.value = checkboxGroup.max !== void 0 && val.length > checkboxGroup.max.value;\n        isLimitExceeded.value === false && ((_a = checkboxGroup == null ? void 0 : checkboxGroup.changeEvent) == null ? void 0 : _a.call(checkboxGroup, val));\n      } else {\n        emit(UPDATE_MODEL_EVENT, val);\n        selfModel.value = val;\n      }\n    }\n  });\n  return {\n    model: model,\n    isLimitExceeded: isLimitExceeded\n  };\n};\n\nvar useCheckboxStatus = function useCheckboxStatus(props, _ref) {\n  var model = _ref.model;\n\n  var _useCheckboxGroup2 = useCheckboxGroup(),\n      isGroup = _useCheckboxGroup2.isGroup,\n      checkboxGroup = _useCheckboxGroup2.checkboxGroup;\n\n  var focus = ref(false);\n  var size = useSize(checkboxGroup == null ? void 0 : checkboxGroup.checkboxGroupSize, {\n    prop: true\n  });\n  var isChecked = computed(function () {\n    var value = model.value;\n\n    if (toTypeString(value) === \"[object Boolean]\") {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.includes(props.label);\n    } else if (value !== null && value !== void 0) {\n      return value === props.trueLabel;\n    } else {\n      return !!value;\n    }\n  });\n  var checkboxSize = useSize(computed(function () {\n    var _a;\n\n    return isGroup.value ? (_a = checkboxGroup == null ? void 0 : checkboxGroup.checkboxGroupSize) == null ? void 0 : _a.value : void 0;\n  }));\n  return {\n    isChecked: isChecked,\n    focus: focus,\n    size: size,\n    checkboxSize: checkboxSize\n  };\n};\n\nvar useDisabled = function useDisabled(props, _ref2) {\n  var model = _ref2.model,\n      isChecked = _ref2.isChecked;\n\n  var _useCheckboxGroup3 = useCheckboxGroup(),\n      elForm = _useCheckboxGroup3.elForm,\n      isGroup = _useCheckboxGroup3.isGroup,\n      checkboxGroup = _useCheckboxGroup3.checkboxGroup;\n\n  var isLimitDisabled = computed(function () {\n    var _a, _b;\n\n    var max = (_a = checkboxGroup.max) == null ? void 0 : _a.value;\n    var min = (_b = checkboxGroup.min) == null ? void 0 : _b.value;\n    return !!(max || min) && model.value.length >= max && !isChecked.value || model.value.length <= min && isChecked.value;\n  });\n  var isDisabled = computed(function () {\n    var _a, _b;\n\n    var disabled = props.disabled || elForm.disabled;\n    return (_b = isGroup.value ? ((_a = checkboxGroup.disabled) == null ? void 0 : _a.value) || disabled || isLimitDisabled.value : props.disabled || elForm.disabled) != null ? _b : false;\n  });\n  return {\n    isDisabled: isDisabled,\n    isLimitDisabled: isLimitDisabled\n  };\n};\n\nvar setStoreValue = function setStoreValue(props, _ref3) {\n  var model = _ref3.model;\n\n  function addToStore() {\n    if (Array.isArray(model.value) && !model.value.includes(props.label)) {\n      model.value.push(props.label);\n    } else {\n      model.value = props.trueLabel || true;\n    }\n  }\n\n  props.checked && addToStore();\n};\n\nvar useEvent = function useEvent(props, _ref4) {\n  var isLimitExceeded = _ref4.isLimitExceeded;\n\n  var _useCheckboxGroup4 = useCheckboxGroup(),\n      elFormItem = _useCheckboxGroup4.elFormItem;\n\n  var _getCurrentInstance2 = getCurrentInstance(),\n      emit = _getCurrentInstance2.emit;\n\n  function handleChange(e) {\n    var _a, _b;\n\n    if (isLimitExceeded.value) return;\n    var target = e.target;\n    var value = target.checked ? (_a = props.trueLabel) != null ? _a : true : (_b = props.falseLabel) != null ? _b : false;\n    emit(\"change\", value, e);\n  }\n\n  watch(function () {\n    return props.modelValue;\n  }, function () {\n    var _a;\n\n    (_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n      return debugWarn(err);\n    });\n  });\n  return {\n    handleChange: handleChange\n  };\n};\n\nvar useCheckbox = function useCheckbox(props) {\n  var _useModel = useModel(props),\n      model = _useModel.model,\n      isLimitExceeded = _useModel.isLimitExceeded;\n\n  var _useCheckboxStatus = useCheckboxStatus(props, {\n    model: model\n  }),\n      focus = _useCheckboxStatus.focus,\n      size = _useCheckboxStatus.size,\n      isChecked = _useCheckboxStatus.isChecked,\n      checkboxSize = _useCheckboxStatus.checkboxSize;\n\n  var _useDisabled = useDisabled(props, {\n    model: model,\n    isChecked: isChecked\n  }),\n      isDisabled = _useDisabled.isDisabled;\n\n  var _useEvent = useEvent(props, {\n    isLimitExceeded: isLimitExceeded\n  }),\n      handleChange = _useEvent.handleChange;\n\n  setStoreValue(props, {\n    model: model\n  });\n  return {\n    isChecked: isChecked,\n    isDisabled: isDisabled,\n    checkboxSize: checkboxSize,\n    model: model,\n    handleChange: handleChange,\n    focus: focus,\n    size: size\n  };\n};\n\nexport { useCheckbox, useCheckboxGroup, useCheckboxProps };","map":{"version":3,"mappings":"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","names":["useCheckboxProps","modelValue","type","Boolean","Number","String","label","Object","indeterminate","disabled","checked","name","trueLabel","falseLabel","tabindex","size","useCheckboxGroup","elForm","inject","formContextKey","elFormItem","formItemContextKey","checkboxGroup","isGroup","computed","elFormItemSize","useModel","props","selfModel","ref","getCurrentInstance","emit","isLimitExceeded","model","get","_a","_b","value","set","val","Array","isArray","max","length","changeEvent","call","UPDATE_MODEL_EVENT","useCheckboxStatus","focus","useSize","checkboxGroupSize","prop","isChecked","toTypeString","includes","checkboxSize","useDisabled","isLimitDisabled","min","isDisabled","setStoreValue","addToStore","push","useEvent","handleChange","e","target","watch","validate","err","debugWarn","useCheckbox"],"sources":["../../../../../../packages/components/checkbox/src/useCheckbox.ts"],"sourcesContent":["import { computed, getCurrentInstance, inject, ref, watch } from 'vue'\nimport { toTypeString } from '@vue/shared'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport { useSize } from '@element-plus/hooks'\nimport { debugWarn } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type { FormContext, FormItemContext } from '@element-plus/tokens'\nimport type { ICheckboxGroupInstance } from './checkbox.type'\n\nexport const useCheckboxProps = {\n  modelValue: {\n    type: [Boolean, Number, String],\n    default: () => undefined,\n  },\n  label: {\n    type: [String, Boolean, Number, Object],\n  },\n  indeterminate: Boolean,\n  disabled: Boolean,\n  checked: Boolean,\n  name: {\n    type: String,\n    default: undefined,\n  },\n  trueLabel: {\n    type: [String, Number],\n    default: undefined,\n  },\n  falseLabel: {\n    type: [String, Number],\n    default: undefined,\n  },\n  tabindex: [String, Number],\n  size: String,\n}\n\nexport type IUseCheckboxProps = ExtractPropTypes<typeof useCheckboxProps>\n\nexport const useCheckboxGroup = () => {\n  const elForm = inject(formContextKey, {} as FormContext)\n  const elFormItem = inject(formItemContextKey, {} as FormItemContext)\n  const checkboxGroup = inject<ICheckboxGroupInstance>('CheckboxGroup', {})\n  const isGroup = computed(\n    () => checkboxGroup && checkboxGroup?.name === 'ElCheckboxGroup'\n  )\n  const elFormItemSize = computed(() => {\n    return elFormItem.size\n  })\n  return {\n    isGroup,\n    checkboxGroup,\n    elForm,\n    elFormItemSize,\n    elFormItem,\n  }\n}\n\nconst useModel = (props: IUseCheckboxProps) => {\n  const selfModel = ref(false)\n  const { emit } = getCurrentInstance()\n  const { isGroup, checkboxGroup } = useCheckboxGroup()\n  const isLimitExceeded = ref(false)\n  const model = computed({\n    get() {\n      return isGroup.value\n        ? checkboxGroup.modelValue?.value\n        : props.modelValue ?? selfModel.value\n    },\n\n    set(val: unknown) {\n      if (isGroup.value && Array.isArray(val)) {\n        isLimitExceeded.value =\n          checkboxGroup.max !== undefined &&\n          val.length > checkboxGroup.max.value\n        isLimitExceeded.value === false && checkboxGroup?.changeEvent?.(val)\n      } else {\n        emit(UPDATE_MODEL_EVENT, val)\n        selfModel.value = val as boolean\n      }\n    },\n  })\n\n  return {\n    model,\n    isLimitExceeded,\n  }\n}\n\nconst useCheckboxStatus = (\n  props: IUseCheckboxProps,\n  { model }: Partial<ReturnType<typeof useModel>>\n) => {\n  const { isGroup, checkboxGroup } = useCheckboxGroup()\n  const focus = ref(false)\n  const size = useSize(checkboxGroup?.checkboxGroupSize, { prop: true })\n  const isChecked = computed<boolean>(() => {\n    const value = model.value\n    if (toTypeString(value) === '[object Boolean]') {\n      return value\n    } else if (Array.isArray(value)) {\n      return value.includes(props.label)\n    } else if (value !== null && value !== undefined) {\n      return value === props.trueLabel\n    } else {\n      return !!value\n    }\n  })\n\n  const checkboxSize = useSize(\n    computed(() =>\n      isGroup.value ? checkboxGroup?.checkboxGroupSize?.value : undefined\n    )\n  )\n\n  return {\n    isChecked,\n    focus,\n    size,\n    checkboxSize,\n  }\n}\n\nconst useDisabled = (\n  props: IUseCheckboxProps,\n  {\n    model,\n    isChecked,\n  }: Partial<ReturnType<typeof useModel>> &\n    Partial<ReturnType<typeof useCheckboxStatus>>\n) => {\n  const { elForm, isGroup, checkboxGroup } = useCheckboxGroup()\n  const isLimitDisabled = computed(() => {\n    const max = checkboxGroup.max?.value\n    const min = checkboxGroup.min?.value\n    return (\n      (!!(max || min) && model.value.length >= max && !isChecked.value) ||\n      (model.value.length <= min && isChecked.value)\n    )\n  })\n  const isDisabled = computed(() => {\n    const disabled = props.disabled || elForm.disabled\n    return (\n      (isGroup.value\n        ? checkboxGroup.disabled?.value || disabled || isLimitDisabled.value\n        : props.disabled || elForm.disabled) ?? false\n    )\n  })\n\n  return {\n    isDisabled,\n    isLimitDisabled,\n  }\n}\n\nconst setStoreValue = (\n  props: IUseCheckboxProps,\n  { model }: Partial<ReturnType<typeof useModel>>\n) => {\n  function addToStore() {\n    if (Array.isArray(model.value) && !model.value.includes(props.label)) {\n      model.value.push(props.label)\n    } else {\n      model.value = props.trueLabel || true\n    }\n  }\n  props.checked && addToStore()\n}\n\nconst useEvent = (\n  props: IUseCheckboxProps,\n  { isLimitExceeded }: Partial<ReturnType<typeof useModel>>\n) => {\n  const { elFormItem } = useCheckboxGroup()\n  const { emit } = getCurrentInstance()\n  function handleChange(e: InputEvent) {\n    if (isLimitExceeded.value) return\n    const target = e.target as HTMLInputElement\n    const value = target.checked\n      ? props.trueLabel ?? true\n      : props.falseLabel ?? false\n\n    emit('change', value, e)\n  }\n\n  watch(\n    () => props.modelValue,\n    () => {\n      elFormItem.validate?.('change').catch((err) => debugWarn(err))\n    }\n  )\n\n  return {\n    handleChange,\n  }\n}\n\nexport const useCheckbox = (props: IUseCheckboxProps) => {\n  const { model, isLimitExceeded } = useModel(props)\n  const { focus, size, isChecked, checkboxSize } = useCheckboxStatus(props, {\n    model,\n  })\n  const { isDisabled } = useDisabled(props, { model, isChecked })\n  const { handleChange } = useEvent(props, { isLimitExceeded })\n\n  setStoreValue(props, { model })\n\n  return {\n    isChecked,\n    isDisabled,\n    checkboxSize,\n    model,\n    handleChange,\n    focus,\n    size,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}