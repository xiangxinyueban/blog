{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, createElementVNode, renderSlot, createBlock, withCtx, createVNode, createCommentVNode, Transition } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Close } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { tagProps, tagEmits } from './tag.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = {\n  name: \"ElTag\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: tagProps,\n  emits: tagEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var tagSize = useSize();\n    var ns = useNamespace(\"tag\");\n    var classes = computed(function () {\n      var type = props.type,\n          hit = props.hit,\n          effect = props.effect,\n          closable = props.closable,\n          round = props.round;\n      return [ns.b(), ns.is(\"closable\", closable), ns.m(type), ns.m(tagSize.value), ns.m(effect), ns.is(\"hit\", hit), ns.is(\"round\", round)];\n    });\n\n    var handleClose = function handleClose(event) {\n      event.stopPropagation();\n      emit(\"close\", event);\n    };\n\n    var handleClick = function handleClick(event) {\n      emit(\"click\", event);\n    };\n\n    return function (_ctx, _cache) {\n      return !_ctx.disableTransitions ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        \"class\": normalizeClass(unref(classes)),\n        style: normalizeStyle({\n          backgroundColor: _ctx.color\n        }),\n        onClick: handleClick\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass(unref(ns).e(\"content\"))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2), _ctx.closable ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"close\")),\n        onClick: handleClose\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(unref(Close))];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 6)) : (openBlock(), createBlock(Transition, {\n        key: 1,\n        name: \"\".concat(unref(ns).namespace.value, \"-zoom-in-center\")\n      }, {\n        \"default\": withCtx(function () {\n          return [createElementVNode(\"span\", {\n            \"class\": normalizeClass(unref(classes)),\n            style: normalizeStyle({\n              backgroundColor: _ctx.color\n            }),\n            onClick: handleClick\n          }, [createElementVNode(\"span\", {\n            \"class\": normalizeClass(unref(ns).e(\"content\"))\n          }, [renderSlot(_ctx.$slots, \"default\")], 2), _ctx.closable ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            \"class\": normalizeClass(unref(ns).e(\"close\")),\n            onClick: handleClose\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(Close))];\n            }),\n            _: 1\n          }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 6)];\n        }),\n        _: 3\n      }, 8, [\"name\"]));\n    };\n  }\n}));\n\nvar Tag = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tag/src/tag.vue\"]]);\n\nexport { Tag as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA,cACAA,MADA,EAEAA,2BAFA,EAGAA,UAHA,EAIAA,mBAJA,EAKAA,YALA,EAMAA,iBANA,EAOAA,qBAPA;AASA,KAXA;;AAcA;AACAC;AACAC;AACA,KAHA;;AAKA;AACAA;AACA,KAFA","names":["ns","event","emit"],"sources":["../../../../../../packages/components/tag/src/tag.vue"],"sourcesContent":["<template>\n  <span\n    v-if=\"!disableTransitions\"\n    :class=\"classes\"\n    :style=\"{ backgroundColor: color }\"\n    @click=\"handleClick\"\n  >\n    <span :class=\"ns.e('content')\">\n      <slot />\n    </span>\n    <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click=\"handleClose\">\n      <Close />\n    </el-icon>\n  </span>\n  <transition v-else :name=\"`${ns.namespace.value}-zoom-in-center`\">\n    <span\n      :class=\"classes\"\n      :style=\"{ backgroundColor: color }\"\n      @click=\"handleClick\"\n    >\n      <span :class=\"ns.e('content')\">\n        <slot />\n      </span>\n      <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click=\"handleClose\">\n        <Close />\n      </el-icon>\n    </span>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { Close } from '@element-plus/icons-vue'\n\nimport { useNamespace, useSize } from '@element-plus/hooks'\nimport { tagEmits, tagProps } from './tag'\n\ndefineOptions({\n  name: 'ElTag',\n})\nconst props = defineProps(tagProps)\nconst emit = defineEmits(tagEmits)\n\nconst tagSize = useSize()\nconst ns = useNamespace('tag')\nconst classes = computed(() => {\n  const { type, hit, effect, closable, round } = props\n  return [\n    ns.b(),\n    ns.is('closable', closable),\n    ns.m(type),\n    ns.m(tagSize.value),\n    ns.m(effect),\n    ns.is('hit', hit),\n    ns.is('round', round),\n  ]\n})\n\n// methods\nconst handleClose = (event: MouseEvent) => {\n  event.stopPropagation()\n  emit('close', event)\n}\n\nconst handleClick = (event: MouseEvent) => {\n  emit('click', event)\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}