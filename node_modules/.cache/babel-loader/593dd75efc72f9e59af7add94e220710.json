{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { defineComponent, inject, ref, reactive, computed, watch, nextTick, onMounted, provide, resolveComponent, resolveDirective, openBlock, createBlock, withCtx, withDirectives, createElementBlock, createElementVNode, normalizeClass, createVNode, createCommentVNode, withKeys, createTextVNode, toDisplayString, normalizeStyle, vShow } from 'vue';\nimport { debounce } from 'lodash-unified';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../directives/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { Close, ArrowDown } from '@element-plus/icons-vue';\nimport AlphaSlider from './components/alpha-slider.mjs';\nimport HueSlider from './components/hue-slider.mjs';\nimport Predefine from './components/predefine.mjs';\nimport SvPanel from './components/sv-panel.mjs';\nimport Color from './color.mjs';\nimport { OPTIONS_KEY } from './useOption.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { formContextKey, formItemContextKey } from '../../../tokens/form.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElColorPicker\",\n  components: {\n    ElButton: ElButton,\n    ElTooltip: ElTooltip,\n    ElInput: ElInput,\n    ElIcon: ElIcon,\n    Close: Close,\n    ArrowDown: ArrowDown,\n    SvPanel: SvPanel,\n    HueSlider: HueSlider,\n    AlphaSlider: AlphaSlider,\n    Predefine: Predefine\n  },\n  directives: {\n    ClickOutside: ClickOutside\n  },\n  props: {\n    modelValue: String,\n    showAlpha: Boolean,\n    colorFormat: String,\n    disabled: Boolean,\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    popperClass: String,\n    predefine: Array\n  },\n  emits: [\"change\", \"active-change\", UPDATE_MODEL_EVENT],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var ns = useNamespace(\"color\");\n    var elForm = inject(formContextKey, {});\n    var elFormItem = inject(formItemContextKey, {});\n    var hue = ref(null);\n    var svPanel = ref(null);\n    var alpha = ref(null);\n    var popper = ref(null);\n    var color = reactive(new Color({\n      enableAlpha: props.showAlpha,\n      format: props.colorFormat,\n      value: props.modelValue\n    }));\n    var showPicker = ref(false);\n    var showPanelColor = ref(false);\n    var customInput = ref(\"\");\n    var displayedColor = computed(function () {\n      if (!props.modelValue && !showPanelColor.value) {\n        return \"transparent\";\n      }\n\n      return displayedRgb(color, props.showAlpha);\n    });\n    var colorSize = useSize();\n    var colorDisabled = computed(function () {\n      return !!(props.disabled || elForm.disabled);\n    });\n    var currentColor = computed(function () {\n      return !props.modelValue && !showPanelColor.value ? \"\" : color.value;\n    });\n    watch(function () {\n      return props.modelValue;\n    }, function (newVal) {\n      if (!newVal) {\n        showPanelColor.value = false;\n      } else if (newVal && newVal !== color.value) {\n        color.fromString(newVal);\n      }\n    });\n    watch(function () {\n      return currentColor.value;\n    }, function (val) {\n      customInput.value = val;\n      emit(\"active-change\", val);\n    });\n    watch(function () {\n      return color.value;\n    }, function () {\n      if (!props.modelValue && !showPanelColor.value) {\n        showPanelColor.value = true;\n      }\n    });\n\n    function displayedRgb(color2, showAlpha) {\n      if (!(color2 instanceof Color)) {\n        throw new TypeError(\"color should be instance of _color Class\");\n      }\n\n      var _color2$toRgb = color2.toRgb(),\n          r = _color2$toRgb.r,\n          g = _color2$toRgb.g,\n          b = _color2$toRgb.b;\n\n      return showAlpha ? \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(color2.get(\"alpha\") / 100, \")\") : \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n    }\n\n    function setShowPicker(value) {\n      showPicker.value = value;\n    }\n\n    var debounceSetShowPicker = debounce(setShowPicker, 100);\n\n    function hide() {\n      debounceSetShowPicker(false);\n      resetColor();\n    }\n\n    function resetColor() {\n      nextTick(function () {\n        if (props.modelValue) {\n          color.fromString(props.modelValue);\n        } else {\n          showPanelColor.value = false;\n        }\n      });\n    }\n\n    function handleTrigger() {\n      if (colorDisabled.value) return;\n      debounceSetShowPicker(!showPicker.value);\n    }\n\n    function handleConfirm() {\n      color.fromString(customInput.value);\n    }\n\n    function confirmValue() {\n      var _a;\n\n      var value = color.value;\n      emit(UPDATE_MODEL_EVENT, value);\n      emit(\"change\", value);\n      (_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n        return debugWarn(err);\n      });\n      debounceSetShowPicker(false);\n      nextTick(function () {\n        var newColor = new Color({\n          enableAlpha: props.showAlpha,\n          format: props.colorFormat,\n          value: props.modelValue\n        });\n\n        if (!color.compare(newColor)) {\n          resetColor();\n        }\n      });\n    }\n\n    function clear() {\n      var _a;\n\n      debounceSetShowPicker(false);\n      emit(UPDATE_MODEL_EVENT, null);\n      emit(\"change\", null);\n\n      if (props.modelValue !== null) {\n        (_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        });\n      }\n\n      resetColor();\n    }\n\n    onMounted(function () {\n      if (props.modelValue) {\n        customInput.value = currentColor.value;\n      }\n    });\n    watch(function () {\n      return showPicker.value;\n    }, function () {\n      nextTick(function () {\n        var _a, _b, _c;\n\n        (_a = hue.value) == null ? void 0 : _a.update();\n        (_b = svPanel.value) == null ? void 0 : _b.update();\n        (_c = alpha.value) == null ? void 0 : _c.update();\n      });\n    });\n    provide(OPTIONS_KEY, {\n      currentColor: currentColor\n    });\n    return {\n      color: color,\n      colorDisabled: colorDisabled,\n      colorSize: colorSize,\n      displayedColor: displayedColor,\n      showPanelColor: showPanelColor,\n      showPicker: showPicker,\n      customInput: customInput,\n      handleConfirm: handleConfirm,\n      hide: hide,\n      handleTrigger: handleTrigger,\n      clear: clear,\n      confirmValue: confirmValue,\n      t: t,\n      ns: ns,\n      hue: hue,\n      svPanel: svPanel,\n      alpha: alpha,\n      popper: popper\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_hue_slider = resolveComponent(\"hue-slider\");\n\n  var _component_sv_panel = resolveComponent(\"sv-panel\");\n\n  var _component_alpha_slider = resolveComponent(\"alpha-slider\");\n\n  var _component_predefine = resolveComponent(\"predefine\");\n\n  var _component_el_input = resolveComponent(\"el-input\");\n\n  var _component_el_button = resolveComponent(\"el-button\");\n\n  var _component_arrow_down = resolveComponent(\"arrow-down\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_close = resolveComponent(\"close\");\n\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  var _directive_click_outside = resolveDirective(\"click-outside\");\n\n  return openBlock(), createBlock(_component_el_tooltip, {\n    ref: \"popper\",\n    visible: _ctx.showPicker,\n    \"onUpdate:visible\": _cache[2] || (_cache[2] = function ($event) {\n      return _ctx.showPicker = $event;\n    }),\n    \"show-arrow\": false,\n    \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n    offset: 0,\n    \"gpu-acceleration\": false,\n    \"popper-class\": [_ctx.ns.be(\"picker\", \"panel\"), _ctx.ns.b(\"dropdown\"), _ctx.popperClass],\n    \"stop-popper-mouse-event\": false,\n    effect: \"light\",\n    trigger: \"click\",\n    transition: \"el-zoom-in-top\",\n    persistent: \"\"\n  }, {\n    content: withCtx(function () {\n      return [withDirectives((openBlock(), createElementBlock(\"div\", null, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(_ctx.ns.be(\"dropdown\", \"main-wrapper\"))\n      }, [createVNode(_component_hue_slider, {\n        ref: \"hue\",\n        \"class\": \"hue-slider\",\n        color: _ctx.color,\n        vertical: \"\"\n      }, null, 8, [\"color\"]), createVNode(_component_sv_panel, {\n        ref: \"svPanel\",\n        color: _ctx.color\n      }, null, 8, [\"color\"])], 2), _ctx.showAlpha ? (openBlock(), createBlock(_component_alpha_slider, {\n        key: 0,\n        ref: \"alpha\",\n        color: _ctx.color\n      }, null, 8, [\"color\"])) : createCommentVNode(\"v-if\", true), _ctx.predefine ? (openBlock(), createBlock(_component_predefine, {\n        key: 1,\n        ref: \"predefine\",\n        color: _ctx.color,\n        colors: _ctx.predefine\n      }, null, 8, [\"color\", \"colors\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(_ctx.ns.be(\"dropdown\", \"btns\"))\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass(_ctx.ns.be(\"dropdown\", \"value\"))\n      }, [createVNode(_component_el_input, {\n        modelValue: _ctx.customInput,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return _ctx.customInput = $event;\n        }),\n        \"validate-event\": false,\n        size: \"small\",\n        onKeyup: withKeys(_ctx.handleConfirm, [\"enter\"]),\n        onBlur: _ctx.handleConfirm\n      }, null, 8, [\"modelValue\", \"onKeyup\", \"onBlur\"])], 2), createVNode(_component_el_button, {\n        size: \"small\",\n        type: \"text\",\n        \"class\": normalizeClass(_ctx.ns.be(\"dropdown\", \"link-btn\")),\n        onClick: _ctx.clear\n      }, {\n        \"default\": withCtx(function () {\n          return [createTextVNode(toDisplayString(_ctx.t(\"el.colorpicker.clear\")), 1)];\n        }),\n        _: 1\n      }, 8, [\"class\", \"onClick\"]), createVNode(_component_el_button, {\n        plain: \"\",\n        size: \"small\",\n        \"class\": normalizeClass(_ctx.ns.be(\"dropdown\", \"btn\")),\n        onClick: _ctx.confirmValue\n      }, {\n        \"default\": withCtx(function () {\n          return [createTextVNode(toDisplayString(_ctx.t(\"el.colorpicker.confirm\")), 1)];\n        }),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])], 2)])), [[_directive_click_outside, _ctx.hide]])];\n    }),\n    \"default\": withCtx(function () {\n      return [createElementVNode(\"div\", {\n        \"class\": normalizeClass([_ctx.ns.b(\"picker\"), _ctx.ns.is(\"disabled\", _ctx.colorDisabled), _ctx.ns.bm(\"picker\", _ctx.colorSize)])\n      }, [_ctx.colorDisabled ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(_ctx.ns.be(\"picker\", \"mask\"))\n      }, null, 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(_ctx.ns.be(\"picker\", \"trigger\")),\n        onClick: _cache[1] || (_cache[1] = function () {\n          return _ctx.handleTrigger && _ctx.handleTrigger.apply(_ctx, arguments);\n        })\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass([_ctx.ns.be(\"picker\", \"color\"), _ctx.ns.is(\"alpha\", _ctx.showAlpha)])\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass(_ctx.ns.be(\"picker\", \"color-inner\")),\n        style: normalizeStyle({\n          backgroundColor: _ctx.displayedColor\n        })\n      }, [withDirectives(createVNode(_component_el_icon, {\n        \"class\": normalizeClass([_ctx.ns.be(\"picker\", \"icon\"), _ctx.ns.is(\"icon-arrow-down\")])\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(_component_arrow_down)];\n        }),\n        _: 1\n      }, 8, [\"class\"]), [[vShow, _ctx.modelValue || _ctx.showPanelColor]]), !_ctx.modelValue && !_ctx.showPanelColor ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        \"class\": normalizeClass([_ctx.ns.be(\"picker\", \"empty\"), _ctx.ns.is(\"icon-close\")])\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(_component_close)];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 6)], 2)], 2)], 2)];\n    }),\n    _: 1\n  }, 8, [\"visible\", \"popper-class\"]);\n}\n\nvar ColorPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/index.vue\"]]);\n\nexport { ColorPicker as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElButton","ElTooltip","ElInput","ElIcon","Close","ArrowDown","SvPanel","HueSlider","AlphaSlider","Predefine","directives","ClickOutside","props","modelValue","showAlpha","colorFormat","disabled","size","type","validator","popperClass","predefine","emits","UPDATE_MODEL_EVENT","setup","emit","useLocale","t","useNamespace","elForm","formContextKey","elFormItem","formItemContextKey","ref","reactive","Color","enableAlpha","format","value","computed","showPanelColor","color","colorSize","useSize","watch","newVal","fromString","currentColor","val","customInput","color2","TypeError","toRgb","r","g","b","get","showPicker","debounce","debounceSetShowPicker","resetColor","nextTick","colorDisabled","_a","onMounted","_b","_c","alpha","provide","displayedColor","handleConfirm","hide","handleTrigger","clear","confirmValue","ns","hue","svPanel","popper","_component_el_tooltip","_directive_click_outside","visible","_cache","offset","effect","trigger","transition","persistent","content","_withDirectives","_normalizeClass","_createVNode","vertical","_ctx","_openBlock","key","_createCommentVNode","colors","onBlur","onClick","_","plain","_createElementVNode","be"],"sources":["../../../../../../packages/components/color-picker/src/index.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"popper\"\n    v-model:visible=\"showPicker\"\n    :show-arrow=\"false\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :offset=\"0\"\n    :gpu-acceleration=\"false\"\n    :popper-class=\"[ns.be('picker', 'panel'), ns.b('dropdown'), popperClass]\"\n    :stop-popper-mouse-event=\"false\"\n    effect=\"light\"\n    trigger=\"click\"\n    transition=\"el-zoom-in-top\"\n    persistent\n  >\n    <template #content>\n      <div v-click-outside=\"hide\">\n        <div :class=\"ns.be('dropdown', 'main-wrapper')\">\n          <hue-slider ref=\"hue\" class=\"hue-slider\" :color=\"color\" vertical />\n          <sv-panel ref=\"svPanel\" :color=\"color\" />\n        </div>\n        <alpha-slider v-if=\"showAlpha\" ref=\"alpha\" :color=\"color\" />\n        <predefine\n          v-if=\"predefine\"\n          ref=\"predefine\"\n          :color=\"color\"\n          :colors=\"predefine\"\n        />\n        <div :class=\"ns.be('dropdown', 'btns')\">\n          <span :class=\"ns.be('dropdown', 'value')\">\n            <el-input\n              v-model=\"customInput\"\n              :validate-event=\"false\"\n              size=\"small\"\n              @keyup.enter=\"handleConfirm\"\n              @blur=\"handleConfirm\"\n            />\n          </span>\n          <el-button\n            size=\"small\"\n            type=\"text\"\n            :class=\"ns.be('dropdown', 'link-btn')\"\n            @click=\"clear\"\n          >\n            {{ t('el.colorpicker.clear') }}\n          </el-button>\n          <el-button\n            plain\n            size=\"small\"\n            :class=\"ns.be('dropdown', 'btn')\"\n            @click=\"confirmValue\"\n          >\n            {{ t('el.colorpicker.confirm') }}\n          </el-button>\n        </div>\n      </div>\n    </template>\n    <template #default>\n      <div\n        :class=\"[\n          ns.b('picker'),\n          ns.is('disabled', colorDisabled),\n          ns.bm('picker', colorSize),\n        ]\"\n      >\n        <div v-if=\"colorDisabled\" :class=\"ns.be('picker', 'mask')\" />\n        <div :class=\"ns.be('picker', 'trigger')\" @click=\"handleTrigger\">\n          <span :class=\"[ns.be('picker', 'color'), ns.is('alpha', showAlpha)]\">\n            <span\n              :class=\"ns.be('picker', 'color-inner')\"\n              :style=\"{\n                backgroundColor: displayedColor,\n              }\"\n            >\n              <el-icon\n                v-show=\"modelValue || showPanelColor\"\n                :class=\"[ns.be('picker', 'icon'), ns.is('icon-arrow-down')]\"\n              >\n                <arrow-down />\n              </el-icon>\n              <el-icon\n                v-if=\"!modelValue && !showPanelColor\"\n                :class=\"[ns.be('picker', 'empty'), ns.is('icon-close')]\"\n              >\n                <close />\n              </el-icon>\n            </span>\n          </span>\n        </div>\n      </div>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { debounce } from 'lodash-unified'\nimport ElButton from '@element-plus/components/button'\nimport ElIcon from '@element-plus/components/icon'\nimport { ClickOutside } from '@element-plus/directives'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport { useLocale, useNamespace, useSize } from '@element-plus/hooks'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElInput from '@element-plus/components/input'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { debugWarn, isValidComponentSize } from '@element-plus/utils'\nimport { ArrowDown, Close } from '@element-plus/icons-vue'\nimport AlphaSlider from './components/alpha-slider.vue'\nimport HueSlider from './components/hue-slider.vue'\nimport Predefine from './components/predefine.vue'\nimport SvPanel from './components/sv-panel.vue'\nimport Color from './color'\nimport { OPTIONS_KEY } from './useOption'\nimport type { PropType } from 'vue'\nimport type { FormContext, FormItemContext } from '@element-plus/tokens'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { IUseOptions } from './useOption'\n\nexport default defineComponent({\n  name: 'ElColorPicker',\n  components: {\n    ElButton,\n    ElTooltip,\n    ElInput,\n    ElIcon,\n    Close,\n    ArrowDown,\n    SvPanel,\n    HueSlider,\n    AlphaSlider,\n    Predefine,\n  },\n  directives: {\n    ClickOutside,\n  },\n  props: {\n    modelValue: String,\n    showAlpha: Boolean,\n    colorFormat: String,\n    disabled: Boolean,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    popperClass: String,\n    predefine: Array,\n  },\n  emits: ['change', 'active-change', UPDATE_MODEL_EVENT],\n  setup(props, { emit }) {\n    const { t } = useLocale()\n    const ns = useNamespace('color')\n    const elForm = inject(formContextKey, {} as FormContext)\n    const elFormItem = inject(formItemContextKey, {} as FormItemContext)\n\n    const hue = ref(null)\n    const svPanel = ref(null)\n    const alpha = ref(null)\n    const popper = ref(null)\n    // data\n    const color = reactive(\n      new Color({\n        enableAlpha: props.showAlpha,\n        format: props.colorFormat,\n        value: props.modelValue,\n      })\n    )\n    const showPicker = ref(false)\n    const showPanelColor = ref(false)\n    const customInput = ref('')\n    // computed\n    const displayedColor = computed(() => {\n      if (!props.modelValue && !showPanelColor.value) {\n        return 'transparent'\n      }\n      return displayedRgb(color, props.showAlpha)\n    })\n    const colorSize = useSize()\n    const colorDisabled = computed(() => {\n      return !!(props.disabled || elForm.disabled)\n    })\n\n    const currentColor = computed(() => {\n      return !props.modelValue && !showPanelColor.value ? '' : color.value\n    })\n    // watch\n    watch(\n      () => props.modelValue,\n      (newVal) => {\n        if (!newVal) {\n          showPanelColor.value = false\n        } else if (newVal && newVal !== color.value) {\n          color.fromString(newVal)\n        }\n      }\n    )\n    watch(\n      () => currentColor.value,\n      (val) => {\n        customInput.value = val\n        emit('active-change', val)\n      }\n    )\n\n    watch(\n      () => color.value,\n      () => {\n        if (!props.modelValue && !showPanelColor.value) {\n          showPanelColor.value = true\n        }\n      }\n    )\n\n    // methods\n    function displayedRgb(color, showAlpha) {\n      if (!(color instanceof Color)) {\n        throw new TypeError('color should be instance of _color Class')\n      }\n\n      const { r, g, b } = color.toRgb()\n      return showAlpha\n        ? `rgba(${r}, ${g}, ${b}, ${color.get('alpha') / 100})`\n        : `rgb(${r}, ${g}, ${b})`\n    }\n\n    function setShowPicker(value) {\n      showPicker.value = value\n    }\n\n    const debounceSetShowPicker = debounce(setShowPicker, 100)\n\n    function hide() {\n      debounceSetShowPicker(false)\n      resetColor()\n    }\n\n    function resetColor() {\n      nextTick(() => {\n        if (props.modelValue) {\n          color.fromString(props.modelValue)\n        } else {\n          showPanelColor.value = false\n        }\n      })\n    }\n\n    function handleTrigger() {\n      if (colorDisabled.value) return\n      debounceSetShowPicker(!showPicker.value)\n    }\n\n    function handleConfirm() {\n      color.fromString(customInput.value)\n    }\n\n    function confirmValue() {\n      const value = color.value\n      emit(UPDATE_MODEL_EVENT, value)\n      emit('change', value)\n      elFormItem.validate?.('change').catch((err) => debugWarn(err))\n      debounceSetShowPicker(false)\n      // check if modelValue change, if not change, then reset color.\n      nextTick(() => {\n        const newColor = new Color({\n          enableAlpha: props.showAlpha,\n          format: props.colorFormat,\n          value: props.modelValue,\n        })\n        if (!color.compare(newColor)) {\n          resetColor()\n        }\n      })\n    }\n\n    function clear() {\n      debounceSetShowPicker(false)\n      emit(UPDATE_MODEL_EVENT, null)\n      emit('change', null)\n      if (props.modelValue !== null) {\n        elFormItem.validate?.('change').catch((err) => debugWarn(err))\n      }\n      resetColor()\n    }\n\n    onMounted(() => {\n      if (props.modelValue) {\n        customInput.value = currentColor.value\n      }\n    })\n    watch(\n      () => showPicker.value,\n      () => {\n        nextTick(() => {\n          hue.value?.update()\n          svPanel.value?.update()\n          alpha.value?.update()\n        })\n      }\n    )\n\n    provide<IUseOptions>(OPTIONS_KEY, {\n      currentColor,\n    })\n\n    return {\n      color: color as Color,\n      colorDisabled,\n      colorSize,\n      displayedColor,\n      showPanelColor,\n      showPicker,\n      customInput,\n      handleConfirm,\n      hide,\n      handleTrigger,\n      clear,\n      confirmValue,\n      t,\n      ns,\n      hue,\n      svPanel,\n      alpha,\n      popper,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}