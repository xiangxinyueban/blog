{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { componentSizes } from '../../../constants/size.mjs';\nimport { isArray, isString } from '@vue/shared';\nimport { isBoolean } from '@vueuse/core';\nvar formProps = buildProps({\n  model: Object,\n  rules: {\n    type: definePropType(Object)\n  },\n  labelPosition: String,\n  labelWidth: {\n    type: [String, Number],\n    \"default\": \"\"\n  },\n  labelSuffix: {\n    type: String,\n    \"default\": \"\"\n  },\n  inline: Boolean,\n  inlineMessage: Boolean,\n  statusIcon: Boolean,\n  showMessage: {\n    type: Boolean,\n    \"default\": true\n  },\n  size: {\n    type: String,\n    values: componentSizes\n  },\n  disabled: Boolean,\n  validateOnRuleChange: {\n    type: Boolean,\n    \"default\": true\n  },\n  hideRequiredAsterisk: {\n    type: Boolean,\n    \"default\": false\n  },\n  scrollToError: Boolean\n});\nvar formEmits = {\n  validate: function validate(prop, isValid, message) {\n    return (isArray(prop) || isString(prop)) && isBoolean(isValid) && isString(message);\n  }\n};\nexport { formEmits, formProps };","map":{"version":3,"mappings":";;;;;;;AAQY,IAACA,SAAS,GAAGC,UAAU,CAAC;AAClCC,OAAK,EAAEC,MAD2B;AAElCC,OAAK,EAAE;AACLC,QAAI,EAAEC,cAAc,CAACH,MAAD;AADf,GAF2B;AAKlCI,eAAa,EAAEC,MALmB;AAMlCC,YAAU,EAAE;AACVJ,QAAI,EAAE,CAACG,MAAD,EAASE,MAAT,CADI;AAEV,eAAS;AAFC,GANsB;AAUlCC,aAAW,EAAE;AACXN,QAAI,EAAEG,MADK;AAEX,eAAS;AAFE,GAVqB;AAclCI,QAAM,EAAEC,OAd0B;AAelCC,eAAa,EAAED,OAfmB;AAgBlCE,YAAU,EAAEF,OAhBsB;AAiBlCG,aAAW,EAAE;AACXX,QAAI,EAAEQ,OADK;AAEX,eAAS;AAFE,GAjBqB;AAqBlCI,MAAI,EAAE;AACJZ,QAAI,EAAEG,MADF;AAEJU,UAAM,EAAEC;AAFJ,GArB4B;AAyBlCC,UAAQ,EAAEP,OAzBwB;AA0BlCQ,sBAAoB,EAAE;AACpBhB,QAAI,EAAEQ,OADc;AAEpB,eAAS;AAFW,GA1BY;AA8BlCS,sBAAoB,EAAE;AACpBjB,QAAI,EAAEQ,OADc;AAEpB,eAAS;AAFW,GA9BY;AAkClCU,eAAa,EAAEV;AAlCmB,CAAD,CAAvB;AAoCA,IAACW,SAAS,GAAG;AACvBC,UAAQ,EAAE,kBAACC,IAAD,EAAOC,OAAP,EAAgBC,OAAhB;AAAA,WAA4B,CAACC,OAAO,CAACH,IAAD,CAAP,IAAiBI,QAAQ,CAACJ,IAAD,CAA1B,KAAqCK,SAAS,CAACJ,OAAD,CAA9C,IAA2DG,QAAQ,CAACF,OAAD,CAA/F;AAAA;AADa,CAAb","names":["formProps","buildProps","model","Object","rules","type","definePropType","labelPosition","String","labelWidth","Number","labelSuffix","inline","Boolean","inlineMessage","statusIcon","showMessage","size","values","componentSizes","disabled","validateOnRuleChange","hideRequiredAsterisk","scrollToError","formEmits","validate","prop","isValid","message","isArray","isString","isBoolean"],"sources":["../../../../../../packages/components/form/src/form.ts"],"sourcesContent":["import { componentSizes } from '@element-plus/constants'\nimport {\n  buildProps,\n  definePropType,\n  isArray,\n  isBoolean,\n  isString,\n} from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { FormItemProp } from './form-item'\nimport type { FormRules } from '@element-plus/tokens'\n\nexport const formProps = buildProps({\n  model: Object,\n  rules: {\n    type: definePropType<FormRules>(Object),\n  },\n  labelPosition: String,\n  labelWidth: {\n    type: [String, Number],\n    default: '',\n  },\n  labelSuffix: {\n    type: String,\n    default: '',\n  },\n  inline: Boolean,\n  inlineMessage: Boolean,\n  statusIcon: Boolean,\n  showMessage: {\n    type: Boolean,\n    default: true,\n  },\n  size: {\n    type: String,\n    values: componentSizes,\n  },\n  disabled: Boolean,\n  validateOnRuleChange: {\n    type: Boolean,\n    default: true,\n  },\n  hideRequiredAsterisk: {\n    type: Boolean,\n    default: false,\n  },\n  scrollToError: Boolean,\n} as const)\nexport type FormProps = ExtractPropTypes<typeof formProps>\n\nexport const formEmits = {\n  validate: (prop: FormItemProp, isValid: boolean, message: string) =>\n    (isArray(prop) || isString(prop)) &&\n    isBoolean(isValid) &&\n    isString(message),\n}\nexport type FormEmits = typeof formEmits\n"]},"metadata":{},"sourceType":"module"}