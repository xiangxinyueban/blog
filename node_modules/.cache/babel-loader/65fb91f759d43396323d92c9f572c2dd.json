{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { defineComponent, computed, resolveComponent, openBlock, createElementBlock, toDisplayString, createBlock, withCtx, createVNode } from 'vue';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ArrowLeft } from '@element-plus/icons-vue';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nvar paginationPrevProps = {\n  disabled: Boolean,\n  currentPage: {\n    type: Number,\n    \"default\": 1\n  },\n  prevText: {\n    type: String,\n    \"default\": \"\"\n  }\n};\n\nvar _sfc_main = defineComponent({\n  name: \"ElPaginationPrev\",\n  components: {\n    ElIcon: ElIcon,\n    ArrowLeft: ArrowLeft\n  },\n  props: paginationPrevProps,\n  emits: [\"click\"],\n  setup: function setup(props) {\n    var internalDisabled = computed(function () {\n      return props.disabled || props.currentPage <= 1;\n    });\n    return {\n      internalDisabled: internalDisabled\n    };\n  }\n});\n\nvar _hoisted_1 = [\"disabled\", \"aria-disabled\"];\nvar _hoisted_2 = {\n  key: 0\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_arrow_left = resolveComponent(\"arrow-left\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  return openBlock(), createElementBlock(\"button\", {\n    type: \"button\",\n    \"class\": \"btn-prev\",\n    disabled: _ctx.internalDisabled,\n    \"aria-disabled\": _ctx.internalDisabled,\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.$emit(\"click\", $event);\n    })\n  }, [_ctx.prevText ? (openBlock(), createElementBlock(\"span\", _hoisted_2, toDisplayString(_ctx.prevText), 1)) : (openBlock(), createBlock(_component_el_icon, {\n    key: 1\n  }, {\n    \"default\": withCtx(function () {\n      return [createVNode(_component_arrow_left)];\n    }),\n    _: 1\n  }))], 8, _hoisted_1);\n}\n\nvar Prev = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/prev.vue\"]]);\n\nexport { Prev as default };","map":{"version":3,"mappings":";;;;;AAkBA,IAAMA,mBAAsB;AAC1BC,UAAU,SADgB;AAE1BC,aAAa;AACXC,QAAM,QADK;AAEX,eAAS;AAFE,GAFa;AAM1BC,UAAU;AACRD,QAAM,QADE;AAER,eAAS;AAFD;AANgB,CAA5B;;AAYA,IAAKE,YAAaC,eAAa;AAC7BC,MAAM,oBADuB;AAG7BC,YAAY;AACVC,kBADU;AAEVC;AAFU,GAHiB;AAO7BC,OAAO,qBAPsB;AAQ7BC,SAAO,CAAC,OAAD,CARsB;AAU7BC,OAV6B,iBAUvBF,KAVuB,EAUhB;AACX,QAAMG,mBAAmBC,QACvB;AAAA,aAAMJ,MAAMV,QAAN,IAAkBU,MAAMT,WAAN,IAAqB,CAA7C;AAAA,MADF;AAGO;AACLY;AADK;AAGT;AAjB6B,EAA/B;;;;;;;;;;;;sBA7BEE,kBASS;AARPb,QAAK,UAQE;AAPP,aAAM,UAOC;AANNF,YAAU,uBAMJ;AALN,qBAAegB,qBAKT;AAJNC,WAAK;AAAA,aAAED,IAAK,MAAL,CAAK,OAAL,EAAeE,MAAf,CAAF;AAAA;AAIC,KAJsB,CAEjBF,8BAAZD,kBAA2C,qCAAlBC,IAAQ,SAAU,GAAV,CAAU,CAA/B,KAAqBG,aACjCC,WAAwC;AAAAC;AAAA;AAAA,uBAAxB;AAAA,aAAc,CAAdC,WAAc,wBAAd;AAAA,KAAwB;;AAAA,IAD5B,CAFiB,CAItB","names":["paginationPrevProps","disabled","currentPage","type","prevText","_sfc_main","defineComponent","name","components","ElIcon","ArrowLeft","props","emits","setup","internalDisabled","computed","_createElementBlock","_ctx","onClick","$event","_openBlock","_createBlock","key","_createVNode"],"sources":["../../../../../../../packages/components/pagination/src/components/prev.vue"],"sourcesContent":["<template>\n  <button\n    type=\"button\"\n    class=\"btn-prev\"\n    :disabled=\"internalDisabled\"\n    :aria-disabled=\"internalDisabled\"\n    @click=\"$emit('click', $event)\"\n  >\n    <span v-if=\"prevText\">{{ prevText }}</span>\n    <el-icon v-else><arrow-left /></el-icon>\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowLeft } from '@element-plus/icons-vue'\n\nconst paginationPrevProps = {\n  disabled: Boolean,\n  currentPage: {\n    type: Number,\n    default: 1,\n  },\n  prevText: {\n    type: String,\n    default: '',\n  },\n} as const\n\nexport default defineComponent({\n  name: 'ElPaginationPrev',\n\n  components: {\n    ElIcon,\n    ArrowLeft,\n  },\n  props: paginationPrevProps,\n  emits: ['click'],\n\n  setup(props) {\n    const internalDisabled = computed(\n      () => props.disabled || props.currentPage <= 1\n    )\n    return {\n      internalDisabled,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}