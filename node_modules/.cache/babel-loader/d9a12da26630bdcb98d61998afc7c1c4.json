{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { defineComponent, computed, provide, createVNode } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport { buildProps } from '../../../utils/vue/props.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { rowContextKey } from '../../../tokens/row.mjs';\nvar rowProps = buildProps({\n  tag: {\n    type: String,\n    \"default\": \"div\"\n  },\n  gutter: {\n    type: Number,\n    \"default\": 0\n  },\n  justify: {\n    type: String,\n    values: [\"start\", \"center\", \"end\", \"space-around\", \"space-between\", \"space-evenly\"],\n    \"default\": \"start\"\n  },\n  align: {\n    type: String,\n    values: [\"top\", \"middle\", \"bottom\"],\n    \"default\": \"top\"\n  }\n});\nvar Row = defineComponent({\n  name: \"ElRow\",\n  props: rowProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var ns = useNamespace(\"row\");\n    var gutter = computed(function () {\n      return props.gutter;\n    });\n    provide(rowContextKey, {\n      gutter: gutter\n    });\n    var style = computed(function () {\n      var styles = {\n        marginLeft: \"\",\n        marginRight: \"\"\n      };\n\n      if (props.gutter) {\n        styles.marginLeft = \"-\".concat(props.gutter / 2, \"px\");\n        styles.marginRight = styles.marginLeft;\n      }\n\n      return styles;\n    });\n    return function () {\n      return createVNode(props.tag, {\n        \"class\": [ns.b(), ns.is(\"justify-\".concat(props.justify), props.justify !== \"start\"), ns.is(\"align-\".concat(props.align), props.align !== \"top\")],\n        \"style\": style.value\n      }, {\n        \"default\": function _default() {\n          var _a;\n\n          return [(_a = slots[\"default\"]) == null ? void 0 : _a.call(slots)];\n        }\n      });\n    };\n  }\n});\nexport { Row as default, rowProps };","map":{"version":3,"mappings":";;;;;;;;AAMaA,YAAQ,GAAGC,UAAU,CAAC;AACjCC,KAAG,EAAE;AACHC,QAAI,EAAEC,MADH;AAEHC,eAAS;AAFN,GAD4B;AAKjCC,QAAM,EAAE;AACNH,QAAI,EAAEI,MADA;AAENF,eAAS;AAFH,GALyB;AASjCG,SAAO,EAAE;AACPL,QAAI,EAAEC,MADC;AAEPK,UAAM,EAAE,CACN,OADM,EAEN,QAFM,EAGN,KAHM,EAIN,cAJM,EAKN,eALM,EAMN,cANM,CAFD;AAUPJ,eAAS;AAVF,GATwB;AAqBjCK,OAAK,EAAE;AACLP,QAAI,EAAEC,MADD;AAELK,UAAM,EAAE,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,CAFH;AAGLJ,eAAS;AAHJ;AArB0B,CAAD,CAArBL;AA6BPW,OAAG,GAAGC,eAAe,CAAC;AAC1BC,MAAI,EAAE,OADoB;AAE1BC,OAAK,EAAEd,QAFmB;OAAA,8BAIXe;AAAAA,QAAfC,KAAeD,QAAfC,KAAeD;AAAS;AACtB,QAAME,MAAiB,YAAC;AAAA,aAAxBH,YAAwB;AAAA,KAAD,CAAvB;AAEMR,2BAAiB;AACvBY,YAAQC,EAARD;AADuB,KAAjBZ;AACiB,QAAvBc;AAIA,UAAWC,MAAGC,GAAQ;AACpBC,kBAA2B,EAAG,EADV;AAElBA,qBAD4B;AADV,OAAtB;;AACE;;AAIIT,eAAKU,WAALV,GAAcO,iBAAdP;AACFO;;AACAA;AACD,KAZH,CAAuB;;;AAarB;AATF;SAYO;AAAA,mBAEI,oBACL;AAHC;;AAAA;AASFN;AATE;;AAYR;AApCyB,CAAD,CAArBJ","names":["rowProps","buildProps","tag","type","String","default","gutter","Number","justify","values","align","Row","defineComponent","name","props","slots","setup","ns","provide","rowContextKey","style","styles","computed","marginLeft","marginRight"],"sources":["../../../../../../packages/components/row/src/row.tsx"],"sourcesContent":["import { computed, defineComponent, provide } from 'vue'\nimport { buildProps } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { rowContextKey } from '@element-plus/tokens'\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\n\nexport const rowProps = buildProps({\n  tag: {\n    type: String,\n    default: 'div',\n  },\n  gutter: {\n    type: Number,\n    default: 0,\n  },\n  justify: {\n    type: String,\n    values: [\n      'start',\n      'center',\n      'end',\n      'space-around',\n      'space-between',\n      'space-evenly',\n    ],\n    default: 'start',\n  },\n  align: {\n    type: String,\n    values: ['top', 'middle', 'bottom'],\n    default: 'top',\n  },\n} as const)\nexport type RowProps = ExtractPropTypes<typeof rowProps>\n\nconst Row = defineComponent({\n  name: 'ElRow',\n  props: rowProps,\n\n  setup(props, { slots }) {\n    const ns = useNamespace('row')\n\n    const gutter = computed(() => props.gutter)\n    provide(rowContextKey, {\n      gutter,\n    })\n\n    const style = computed(() => {\n      const styles: CSSProperties = {\n        marginLeft: '',\n        marginRight: '',\n      }\n      if (props.gutter) {\n        styles.marginLeft = `-${props.gutter / 2}px`\n        styles.marginRight = styles.marginLeft\n      }\n      return styles\n    })\n\n    return () => (\n      <props.tag\n        class={[\n          ns.b(),\n          ns.is(`justify-${props.justify}`, props.justify !== 'start'),\n          ns.is(`align-${props.align}`, props.align !== 'top'),\n        ]}\n        style={style.value}\n      >\n        {slots.default?.()}\n      </props.tag>\n    )\n  },\n})\n\nexport default Row\nexport type RowInstance = InstanceType<typeof Row>\n"]},"metadata":{},"sourceType":"module"}