{"ast":null,"code":"import { onBeforeMount } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport '../../utils/index.mjs';\nimport { generateId } from '../../utils/rand.mjs';\nvar cachedContainer;\nvar POPPER_CONTAINER_ID = \"el-popper-container-\".concat(generateId());\nvar POPPER_CONTAINER_SELECTOR = \"#\".concat(POPPER_CONTAINER_ID);\n\nvar createContainer = function createContainer() {\n  var container = document.createElement(\"div\");\n  container.id = POPPER_CONTAINER_ID;\n  document.body.appendChild(container);\n  return container;\n};\n\nvar usePopperContainer = function usePopperContainer() {\n  onBeforeMount(function () {\n    if (!isClient) return;\n\n    if (process.env.NODE_ENV === \"test\" || !cachedContainer || !document.body.querySelector(POPPER_CONTAINER_SELECTOR)) {\n      cachedContainer = createContainer();\n    }\n  });\n};\n\nexport { POPPER_CONTAINER_ID, POPPER_CONTAINER_SELECTOR, usePopperContainer };","map":{"version":3,"mappings":";;;;AAGA,IAAIA,eAAJ;AACY,IAACC,mBAAmB,iCAA0BC,UAAU,EAApC,CAApB;AACA,IAACC,yBAAyB,cAAOF,mBAAP,CAA1B;;AACZ,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACAF,WAAS,CAACG,EAAV,GAAeP,mBAAf;AACAK,UAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;AACA,SAAOA,SAAP;AACD,CALD;;AAMY,IAACM,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACtCC,eAAa,CAAC,YAAM;AAClB,QAAI,CAACC,QAAL,EACE;;AACF,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAAmC,CAAChB,eAApC,IAAuD,CAACM,QAAQ,CAACG,IAAT,CAAcQ,aAAd,CAA4Bd,yBAA5B,CAA5D,EAAoH;AAClHH,qBAAe,GAAGI,eAAe,EAAjC;AACD;AACF,GANY,CAAb;AAOF,CARY","names":["cachedContainer","POPPER_CONTAINER_ID","generateId","POPPER_CONTAINER_SELECTOR","createContainer","container","document","createElement","id","body","appendChild","usePopperContainer","onBeforeMount","isClient","process","env","NODE_ENV","querySelector"],"sources":["../../../../../packages/hooks/use-popper-container/index.ts"],"sourcesContent":["import { onBeforeMount } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { generateId } from '@element-plus/utils'\n\nlet cachedContainer: HTMLElement\n\nexport const POPPER_CONTAINER_ID = `el-popper-container-${generateId()}`\n\nexport const POPPER_CONTAINER_SELECTOR = `#${POPPER_CONTAINER_ID}`\n\nconst createContainer = () => {\n  const container = document.createElement('div')\n  container.id = POPPER_CONTAINER_ID\n  document.body.appendChild(container)\n  return container\n}\n\nexport const usePopperContainer = () => {\n  onBeforeMount(() => {\n    if (!isClient) return\n\n    // This is for bypassing the error that when under testing env, we often encounter\n    // document.body.innerHTML = '' situation\n    // for this we need to disable the caching since it's not really needed\n    if (\n      process.env.NODE_ENV === 'test' ||\n      !cachedContainer ||\n      !document.body.querySelector(POPPER_CONTAINER_SELECTOR)\n    ) {\n      cachedContainer = createContainer()\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}