{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { ref, watch } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { genFileId } from './upload.mjs';\nimport { debugWarn, throwError } from '../../../utils/error.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nvar SCOPE = \"ElUpload\";\n\nvar revokeObjectURL = function revokeObjectURL(file) {\n  var _a;\n\n  if ((_a = file.url) == null ? void 0 : _a.startsWith(\"blob:\")) {\n    URL.revokeObjectURL(file.url);\n  }\n};\n\nvar useHandlers = function useHandlers(props, uploadRef) {\n  var uploadFiles = ref([]);\n\n  var getFile = function getFile(rawFile) {\n    return uploadFiles.value.find(function (file) {\n      return file.uid === rawFile.uid;\n    });\n  };\n\n  function abort(file) {\n    var _a;\n\n    (_a = uploadRef.value) == null ? void 0 : _a.abort(file);\n  }\n\n  function clearFiles() {\n    var states = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [\"ready\", \"uploading\", \"success\", \"fail\"];\n    uploadFiles.value = uploadFiles.value.filter(function (row) {\n      return !states.includes(row.status);\n    });\n  }\n\n  var handleError = function handleError(err, rawFile) {\n    var file = getFile(rawFile);\n    if (!file) return;\n    file.status = \"fail\";\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1);\n    props.onError(err, file, uploadFiles.value);\n    props.onChange(file, uploadFiles.value);\n  };\n\n  var handleProgress = function handleProgress(evt, rawFile) {\n    var file = getFile(rawFile);\n    if (!file) return;\n    props.onProgress(evt, file, uploadFiles.value);\n    file.status = \"uploading\";\n    file.percentage = Math.round(evt.percent);\n  };\n\n  var handleSuccess = function handleSuccess(response, rawFile) {\n    var file = getFile(rawFile);\n    if (!file) return;\n    file.status = \"success\";\n    file.response = response;\n    props.onSuccess(response, file, uploadFiles.value);\n    props.onChange(file, uploadFiles.value);\n  };\n\n  var handleStart = function handleStart(file) {\n    var uploadFile = {\n      name: file.name,\n      percentage: 0,\n      status: \"ready\",\n      size: file.size,\n      raw: file,\n      uid: file.uid\n    };\n\n    if (props.listType === \"picture-card\" || props.listType === \"picture\") {\n      try {\n        uploadFile.url = URL.createObjectURL(file);\n      } catch (err) {\n        debugWarn(SCOPE, err.message);\n        props.onError(err, uploadFile, uploadFiles.value);\n      }\n    }\n\n    uploadFiles.value.push(uploadFile);\n    props.onChange(uploadFile, uploadFiles.value);\n  };\n\n  var handleRemove = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(file, rawFile) {\n      var _file, uploadFile, doRemove, before;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (rawFile) {\n                useDeprecated({\n                  scope: SCOPE,\n                  from: \"handleRemove second argument\",\n                  version: \"2.2\",\n                  replacement: \"first argument `file`\",\n                  ref: \"https://element-plus.org/en-US/component/upload.html#methods\"\n                }, true);\n              }\n\n              _file = rawFile || file;\n              uploadFile = _file instanceof File ? getFile(_file) : _file;\n              if (!uploadFile) throwError(SCOPE, \"file to be removed not found\");\n\n              doRemove = function doRemove(file2) {\n                abort(file2);\n                var fileList = uploadFiles.value;\n                fileList.splice(fileList.indexOf(file2), 1);\n                props.onRemove(file2, fileList);\n                revokeObjectURL(file2);\n              };\n\n              if (!props.beforeRemove) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 8;\n              return props.beforeRemove(uploadFile, uploadFiles.value);\n\n            case 8:\n              before = _context.sent;\n              if (before !== false) doRemove(uploadFile);\n              _context.next = 13;\n              break;\n\n            case 12:\n              doRemove(uploadFile);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleRemove(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function submit() {\n    uploadFiles.value.filter(function (_ref2) {\n      var status = _ref2.status;\n      return status === \"ready\";\n    }).forEach(function (_ref3) {\n      var raw = _ref3.raw;\n\n      var _a;\n\n      return raw && ((_a = uploadRef.value) == null ? void 0 : _a.upload(raw));\n    });\n  }\n\n  watch(function () {\n    return props.listType;\n  }, function (val) {\n    if (val !== \"picture-card\" && val !== \"picture\") {\n      return;\n    }\n\n    uploadFiles.value = uploadFiles.value.map(function (file) {\n      var raw = file.raw,\n          url = file.url;\n\n      if (!url && raw) {\n        try {\n          file.url = URL.createObjectURL(raw);\n        } catch (err) {\n          props.onError(err, file, uploadFiles.value);\n        }\n      }\n\n      return file;\n    });\n  });\n  watch(function () {\n    return props.fileList;\n  }, function (fileList) {\n    var _iterator = _createForOfIteratorHelper(fileList),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var file = _step.value;\n        file.uid || (file.uid = genFileId());\n        file.status || (file.status = \"success\");\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    uploadFiles.value = fileList;\n  }, {\n    immediate: true,\n    deep: true\n  });\n  return {\n    abort: abort,\n    clearFiles: clearFiles,\n    handleError: handleError,\n    handleProgress: handleProgress,\n    handleStart: handleStart,\n    handleSuccess: handleSuccess,\n    handleRemove: handleRemove,\n    submit: submit,\n    uploadFiles: uploadFiles\n  };\n};\n\nexport { useHandlers };","map":{"version":3,"mappings":"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","names":["SCOPE","revokeObjectURL","file","_a","url","startsWith","URL","useHandlers","props","uploadRef","uploadFiles","ref","getFile","rawFile","value","find","uid","abort","clearFiles","states","filter","row","includes","status","handleError","err","splice","indexOf","onError","onChange","handleProgress","evt","onProgress","percentage","Math","round","percent","handleSuccess","response","onSuccess","handleStart","uploadFile","name","size","raw","listType","createObjectURL","debugWarn","message","push","handleRemove","useDeprecated","scope","from","version","replacement","_file","File","throwError","doRemove","file2","fileList","onRemove","beforeRemove","before","submit","forEach","upload","watch","val","map","genFileId","immediate","deep"],"sources":["../../../../../../packages/components/upload/src/use-handlers.ts"],"sourcesContent":["import { ref, watch } from 'vue'\nimport { debugWarn, throwError } from '@element-plus/utils'\nimport { useDeprecated } from '@element-plus/hooks'\nimport { genFileId } from './upload'\nimport type { ShallowRef } from 'vue'\nimport type {\n  UploadContentInstance,\n  UploadContentProps,\n} from './upload-content'\nimport type {\n  UploadFile,\n  UploadFiles,\n  UploadProps,\n  UploadRawFile,\n  UploadStatus,\n} from './upload'\n\nconst SCOPE = 'ElUpload'\n\nconst revokeObjectURL = (file: UploadFile) => {\n  if (file.url?.startsWith('blob:')) {\n    URL.revokeObjectURL(file.url)\n  }\n}\n\nexport const useHandlers = (\n  props: UploadProps,\n  uploadRef: ShallowRef<UploadContentInstance | undefined>\n) => {\n  const uploadFiles = ref<UploadFiles>([])\n\n  const getFile = (rawFile: UploadRawFile) =>\n    uploadFiles.value.find((file) => file.uid === rawFile.uid)\n\n  function abort(file: UploadFile) {\n    uploadRef.value?.abort(file)\n  }\n\n  function clearFiles(\n    /** @default ['ready', 'uploading', 'success', 'fail'] */\n    states: UploadStatus[] = ['ready', 'uploading', 'success', 'fail']\n  ) {\n    uploadFiles.value = uploadFiles.value.filter(\n      (row) => !states.includes(row.status)\n    )\n  }\n\n  const handleError: UploadContentProps['onError'] = (err, rawFile) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    file.status = 'fail'\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1)\n    props.onError(err, file, uploadFiles.value)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  const handleProgress: UploadContentProps['onProgress'] = (evt, rawFile) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    props.onProgress(evt, file, uploadFiles.value)\n    file.status = 'uploading'\n    file.percentage = Math.round(evt.percent)\n  }\n\n  const handleSuccess: UploadContentProps['onSuccess'] = (\n    response,\n    rawFile\n  ) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    file.status = 'success'\n    file.response = response\n    props.onSuccess(response, file, uploadFiles.value)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  const handleStart: UploadContentProps['onStart'] = (file) => {\n    const uploadFile: UploadFile = {\n      name: file.name,\n      percentage: 0,\n      status: 'ready',\n      size: file.size,\n      raw: file,\n      uid: file.uid,\n    }\n    if (props.listType === 'picture-card' || props.listType === 'picture') {\n      try {\n        uploadFile.url = URL.createObjectURL(file)\n      } catch (err: unknown) {\n        debugWarn(SCOPE, (err as Error).message)\n        props.onError(err as Error, uploadFile, uploadFiles.value)\n      }\n    }\n    uploadFiles.value.push(uploadFile)\n    props.onChange(uploadFile, uploadFiles.value)\n  }\n\n  const handleRemove: UploadContentProps['onRemove'] = async (\n    file,\n    rawFile // TODO: deprecated in 2.2\n  ): Promise<void> => {\n    if (rawFile) {\n      useDeprecated(\n        {\n          scope: SCOPE,\n          from: 'handleRemove second argument',\n          version: '2.2',\n          replacement: 'first argument `file`',\n          ref: 'https://element-plus.org/en-US/component/upload.html#methods',\n        },\n        true\n      )\n    }\n\n    const _file = rawFile || file\n    const uploadFile = _file instanceof File ? getFile(_file) : _file\n    if (!uploadFile) throwError(SCOPE, 'file to be removed not found')\n\n    const doRemove = (file: UploadFile) => {\n      abort(file)\n      const fileList = uploadFiles.value\n      fileList.splice(fileList.indexOf(file), 1)\n      props.onRemove(file, fileList)\n      revokeObjectURL(file)\n    }\n\n    if (props.beforeRemove) {\n      const before = await props.beforeRemove(uploadFile, uploadFiles.value)\n      if (before !== false) doRemove(uploadFile)\n    } else {\n      doRemove(uploadFile)\n    }\n  }\n\n  function submit() {\n    uploadFiles.value\n      .filter(({ status }) => status === 'ready')\n      .forEach(({ raw }) => raw && uploadRef.value?.upload(raw))\n  }\n\n  watch(\n    () => props.listType,\n    (val) => {\n      if (val !== 'picture-card' && val !== 'picture') {\n        return\n      }\n\n      uploadFiles.value = uploadFiles.value.map((file) => {\n        const { raw, url } = file\n        if (!url && raw) {\n          try {\n            file.url = URL.createObjectURL(raw)\n          } catch (err: unknown) {\n            props.onError(err as Error, file, uploadFiles.value)\n          }\n        }\n        return file\n      })\n    }\n  )\n\n  watch(\n    () => props.fileList,\n    (fileList) => {\n      for (const file of fileList) {\n        file.uid ||= genFileId()\n        file.status ||= 'success'\n      }\n      uploadFiles.value = fileList as UploadFiles\n    },\n    { immediate: true, deep: true }\n  )\n\n  return {\n    abort,\n    clearFiles,\n    handleError,\n    handleProgress,\n    handleStart,\n    handleSuccess,\n    handleRemove,\n    submit,\n    uploadFiles,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}