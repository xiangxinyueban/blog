{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport '../../../utils/index.mjs';\nimport '../../tooltip/index.mjs';\nimport { CircleClose } from '@element-plus/icons-vue';\nimport { useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nvar SelectProps = {\n  allowCreate: Boolean,\n  autocomplete: {\n    type: String,\n    \"default\": \"none\"\n  },\n  automaticDropdown: Boolean,\n  clearable: Boolean,\n  clearIcon: {\n    type: [String, Object],\n    \"default\": CircleClose\n  },\n  effect: {\n    type: String,\n    \"default\": \"light\"\n  },\n  collapseTags: Boolean,\n  collapseTagsTooltip: {\n    type: Boolean,\n    \"default\": false\n  },\n  defaultFirstOption: Boolean,\n  disabled: Boolean,\n  estimatedOptionHeight: {\n    type: Number,\n    \"default\": void 0\n  },\n  filterable: Boolean,\n  filterMethod: Function,\n  height: {\n    type: Number,\n    \"default\": 170\n  },\n  itemHeight: {\n    type: Number,\n    \"default\": 34\n  },\n  id: String,\n  loading: Boolean,\n  loadingText: String,\n  label: String,\n  modelValue: [Array, String, Number, Boolean, Object],\n  multiple: Boolean,\n  multipleLimit: {\n    type: Number,\n    \"default\": 0\n  },\n  name: String,\n  noDataText: String,\n  noMatchText: String,\n  remoteMethod: Function,\n  reserveKeyword: {\n    type: Boolean,\n    \"default\": true\n  },\n  options: {\n    type: Array,\n    required: true\n  },\n  placeholder: {\n    type: String\n  },\n  popperAppendToBody: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  teleported: useTooltipContentProps.teleported,\n  persistent: {\n    type: Boolean,\n    \"default\": true\n  },\n  popperClass: {\n    type: String,\n    \"default\": \"\"\n  },\n  popperOptions: {\n    type: Object,\n    \"default\": function _default() {\n      return {};\n    }\n  },\n  remote: Boolean,\n  size: {\n    type: String,\n    validator: isValidComponentSize\n  },\n  valueKey: {\n    type: String,\n    \"default\": \"value\"\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    \"default\": false\n  }\n};\nvar OptionProps = {\n  data: Array,\n  disabled: Boolean,\n  hovering: Boolean,\n  item: Object,\n  index: Number,\n  style: Object,\n  selected: Boolean,\n  created: Boolean\n};\nexport { OptionProps, SelectProps };","map":{"version":3,"mappings":"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","names":["SelectProps","allowCreate","Boolean","autocomplete","type","String","automaticDropdown","clearable","clearIcon","Object","CircleClose","effect","collapseTags","collapseTagsTooltip","defaultFirstOption","disabled","estimatedOptionHeight","Number","filterable","filterMethod","Function","height","itemHeight","id","loading","loadingText","label","modelValue","Array","multiple","multipleLimit","name","noDataText","noMatchText","remoteMethod","reserveKeyword","options","required","placeholder","popperAppendToBody","teleported","useTooltipContentProps","persistent","popperClass","popperOptions","remote","size","validator","isValidComponentSize","valueKey","scrollbarAlwaysOn","OptionProps","data","hovering","item","index","style","selected","created"],"sources":["../../../../../../packages/components/select-v2/src/defaults.ts"],"sourcesContent":["import { isValidComponentSize } from '@element-plus/utils'\nimport { useTooltipContentProps } from '@element-plus/components/tooltip'\nimport { CircleClose } from '@element-plus/icons-vue'\n\nimport type { Component, PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { OptionType } from './select.types'\nimport type { Options } from '@element-plus/components/popper'\n\nexport const SelectProps = {\n  allowCreate: Boolean,\n  autocomplete: {\n    type: String as PropType<'none' | 'both' | 'list' | 'inline'>,\n    default: 'none',\n  },\n  automaticDropdown: Boolean,\n  clearable: Boolean,\n  clearIcon: {\n    type: [String, Object] as PropType<string | Component>,\n    default: CircleClose,\n  },\n  effect: {\n    type: String as PropType<'light' | 'dark' | string>,\n    default: 'light',\n  },\n  collapseTags: Boolean,\n  collapseTagsTooltip: {\n    type: Boolean,\n    default: false,\n  },\n  defaultFirstOption: Boolean,\n  disabled: Boolean,\n  estimatedOptionHeight: {\n    type: Number,\n    default: undefined,\n  },\n  filterable: Boolean,\n  filterMethod: Function,\n  height: {\n    type: Number,\n    default: 170, // 5 items by default\n  },\n  itemHeight: {\n    type: Number,\n    default: 34,\n  },\n  id: String,\n  loading: Boolean,\n  loadingText: String,\n  label: String,\n  modelValue: [Array, String, Number, Boolean, Object] as PropType<\n    any[] | string | number | boolean | Record<string, any> | any\n  >,\n  multiple: Boolean,\n  multipleLimit: {\n    type: Number,\n    default: 0,\n  },\n  name: String,\n  noDataText: String,\n  noMatchText: String,\n  remoteMethod: Function,\n  reserveKeyword: {\n    type: Boolean,\n    default: true,\n  },\n  options: {\n    type: Array as PropType<OptionType[]>,\n    required: true,\n  },\n  placeholder: {\n    type: String,\n  },\n  popperAppendToBody: {\n    type: Boolean,\n    default: undefined,\n  },\n  teleported: useTooltipContentProps.teleported,\n  persistent: {\n    type: Boolean,\n    default: true,\n  },\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  popperOptions: {\n    type: Object as PropType<Partial<Options>>,\n    default: () => ({} as Partial<Options>),\n  },\n  remote: Boolean,\n  size: {\n    type: String as PropType<ComponentSize>,\n    validator: isValidComponentSize,\n  },\n  valueKey: {\n    type: String,\n    default: 'value',\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false,\n  },\n}\n\nexport const OptionProps = {\n  data: Array,\n  disabled: Boolean,\n  hovering: Boolean,\n  item: Object,\n  index: Number,\n  style: Object,\n  selected: Boolean,\n  created: Boolean,\n}\n"]},"metadata":{},"sourceType":"module"}