{"ast":null,"code":"import { defineComponent, ref, unref, computed, resolveComponent, openBlock, createBlock, mergeProps, withCtx, createElementVNode, normalizeClass, normalizeStyle, resolveDynamicComponent, createCommentVNode, createTextVNode, toDisplayString, createVNode, renderSlot } from 'vue';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport '../../popper/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { popconfirmProps } from './popconfirm.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useDeprecateAppendToBody } from '../../popper/src/deprecation.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar COMPONENT_NAME = \"ElPopconfirm\";\n\nvar _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElButton: ElButton,\n    ElTooltip: ElTooltip,\n    ElIcon: ElIcon\n  },\n  props: popconfirmProps,\n  setup: function setup(props) {\n    var _useDeprecateAppendTo = useDeprecateAppendToBody(COMPONENT_NAME, \"appendToBody\"),\n        compatTeleported = _useDeprecateAppendTo.compatTeleported;\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var ns = useNamespace(\"popconfirm\");\n    var tooltipRef = ref();\n\n    var hidePopper = function hidePopper() {\n      var _a, _b;\n\n      (_b = (_a = unref(tooltipRef)) == null ? void 0 : _a.onClose) == null ? void 0 : _b.call(_a);\n    };\n\n    var handleCallback = function handleCallback() {\n      hidePopper();\n    };\n\n    var confirm = function confirm(e) {\n      var _a;\n\n      (_a = props.onConfirm) == null ? void 0 : _a.call(props, e);\n      handleCallback();\n    };\n\n    var cancel = function cancel(e) {\n      var _a;\n\n      (_a = props.onCancel) == null ? void 0 : _a.call(props, e);\n      handleCallback();\n    };\n\n    var finalConfirmButtonText = computed(function () {\n      return props.confirmButtonText || t(\"el.popconfirm.confirmButtonText\");\n    });\n    var finalCancelButtonText = computed(function () {\n      return props.cancelButtonText || t(\"el.popconfirm.cancelButtonText\");\n    });\n    return {\n      finalConfirmButtonText: finalConfirmButtonText,\n      finalCancelButtonText: finalCancelButtonText,\n      tooltipRef: tooltipRef,\n      ns: ns,\n      compatTeleported: compatTeleported,\n      confirm: confirm,\n      cancel: cancel\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_button = resolveComponent(\"el-button\");\n\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  return openBlock(), createBlock(_component_el_tooltip, mergeProps({\n    ref: \"tooltipRef\"\n  }, _ctx.$attrs, {\n    trigger: \"click\",\n    effect: \"light\",\n    \"popper-class\": \"\".concat(_ctx.ns.namespace.value, \"-popover\"),\n    teleported: _ctx.compatTeleported,\n    \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n    \"hide-after\": _ctx.hideAfter,\n    persistent: _ctx.persistent\n  }), {\n    content: withCtx(function () {\n      return [createElementVNode(\"div\", {\n        \"class\": normalizeClass(_ctx.ns.b())\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(_ctx.ns.e(\"main\"))\n      }, [!_ctx.hideIcon && _ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        \"class\": normalizeClass(_ctx.ns.e(\"icon\")),\n        style: normalizeStyle({\n          color: _ctx.iconColor\n        })\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n        }),\n        _: 1\n      }, 8, [\"class\", \"style\"])) : createCommentVNode(\"v-if\", true), createTextVNode(\" \" + toDisplayString(_ctx.title), 1)], 2), createElementVNode(\"div\", {\n        \"class\": normalizeClass(_ctx.ns.e(\"action\"))\n      }, [createVNode(_component_el_button, {\n        size: \"small\",\n        type: _ctx.cancelButtonType,\n        onClick: _ctx.cancel\n      }, {\n        \"default\": withCtx(function () {\n          return [createTextVNode(toDisplayString(_ctx.finalCancelButtonText), 1)];\n        }),\n        _: 1\n      }, 8, [\"type\", \"onClick\"]), createVNode(_component_el_button, {\n        size: \"small\",\n        type: _ctx.confirmButtonType,\n        onClick: _ctx.confirm\n      }, {\n        \"default\": withCtx(function () {\n          return [createTextVNode(toDisplayString(_ctx.finalConfirmButtonText), 1)];\n        }),\n        _: 1\n      }, 8, [\"type\", \"onClick\"])], 2)], 2)];\n    }),\n    \"default\": withCtx(function () {\n      return [_ctx.$slots.reference ? renderSlot(_ctx.$slots, \"reference\", {\n        key: 0\n      }) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 3\n  }, 16, [\"popper-class\", \"teleported\", \"hide-after\", \"persistent\"]);\n}\n\nvar Popconfirm = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/popconfirm/src/popconfirm.vue\"]]);\n\nexport { Popconfirm as default };","map":{"version":3,"mappings":";;;;;;;;;;;AAiDA,IAAMA,cAAiB,iBAAvB;;AACA,IAAKC,YAAaC,eAAa;AAC7BC,MAAM,gBADuB;AAG7BC,YAAY;AACVC,sBADU;AAEVC,wBAFU;AAGVC;AAHU,GAHiB;AAS7BC,OAAO,iBATsB;AAW7BC,OAX6B,iBAWvBD,KAXuB,EAWhB;AACX,gCAA6BE,wBAC3B,iBACA,cADA,CADF;AAAA,QAAQC,gBAAR,yBAAQA,gBAAR;;AAIM,qBAAQC,SAAU,EAAlB;AAAA,QAAEC,CAAF,cAAEA,CAAF;;AACA,aAAKC,aAAa,YAAb,CAAL;AACN,QAAMC,aAAaC,GAA6B,EAAhD;;AAEA,QAAMC,aAAa,SAAbA,UAAa,GAAM;AACjB;;AACR;AAEA,KAJA;;AAKa;AACbA;AAEM,KAHO;;AAIX,sCAAmB;AACJ;;AACjB;AACMC,oBAAU;AACd,KAJA;;AAKe;AACjB;;AAEA,sCACE,MADF,GACEC,GAAMC,IAAN,CAAMZ,KAAN,EAAiCa,CAAjC,CADF;AAGAH;AAIO,KAVU;;AAWf;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACAI,oDADA;AAIAC,kDAJA;AAMAR,4BANA;AAOAS,YAPA;AAQFb,wCARE;AASJc,sBATI;AAULC;AAVK;;AA/CyB,EAA/B;;;AAjDE;;AAEgB,MACNC,oDADM;;AACN,MACDC,sDADC;;AAEP,sBAAiBC,WAAa;AAAAb;AAAA;AAC9Bc,WAAY,SADkB;AAE9BC,UAAqB,SAFS;AAG9B,8BAAYC,uBAAZ,aAH8B;AAI9BC,cAAY,uBAJkB;AAIlB,6DAJkB;AAMpB,sBACT,CAmBMC,SA1BuB;AA0BvBC;AA1BuB,MAOvB;AAAWC;AAAA,gCAUT;AATA,+BAAO;AASP,SATW,CAENC,mBAAY,KAAZ,EAAY;AAKX;AALW,OAAZ,GAEN,wCAAyB;AAAAC;+BAEF,mBAFE;AAE1BC;AAAAC,eAAwB;AAAxB;AAF0B,SAEN;;;UAAA;AAEdC;AAFc,OAFM,EAaxB,CAbwB,EAaxB,kBAbwB,CAAzB,IAaCC,kCAPAC,eAAO,sBAAI,YAAJ,EAAI,CAAJ,EARF,EAQM,CARN,CAFM,oBAaH;AAAA,iBAFIC;AAEJ,SAFI,CAAeC,WAA0B;AAAAC;mCAAA;AAC5BC;AAD4B,SAC/B;;;UAAA;AAEfN,SAAK;AAFU,OAD+B,EAG1B,CAH0B,EAG1B,mBAH0B,CAAzC,EAGeI,WAA2B;AAAAC;oCAAA;AAC5BC;AAD4B,SAC/B;;;UAAA;;AAAA,OAD+B,yBAH1C,CAEJ,IAbG,CASX,EAWM,CAXN,CAVS;AAAA,MAAX;;;;;MAAA;;AAAA,GAPuB,iEAA9B","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","components","ElButton","ElTooltip","ElIcon","props","setup","useDeprecateAppendToBody","compatTeleported","useLocale","t","useNamespace","tooltipRef","ref","hidePopper","handleCallback","_a","call","e","finalConfirmButtonText","finalCancelButtonText","ns","confirm","cancel","_component_el_button","_component_el_tooltip","_createBlock","trigger","effect","_ctx","teleported","hideAfter","persistent","content","_createElementVNode","key","style","color","_","_createCommentVNode","_createTextVNode","_normalizeClass","_createVNode","size","onClick"],"sources":["../../../../../../packages/components/popconfirm/src/popconfirm.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    v-bind=\"$attrs\"\n    trigger=\"click\"\n    effect=\"light\"\n    :popper-class=\"`${ns.namespace.value}-popover`\"\n    :teleported=\"compatTeleported\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :hide-after=\"hideAfter\"\n    :persistent=\"persistent\"\n  >\n    <template #content>\n      <div :class=\"ns.b()\">\n        <div :class=\"ns.e('main')\">\n          <el-icon\n            v-if=\"!hideIcon && icon\"\n            :class=\"ns.e('icon')\"\n            :style=\"{ color: iconColor }\"\n          >\n            <component :is=\"icon\" />\n          </el-icon>\n          {{ title }}\n        </div>\n        <div :class=\"ns.e('action')\">\n          <el-button size=\"small\" :type=\"cancelButtonType\" @click=\"cancel\">\n            {{ finalCancelButtonText }}\n          </el-button>\n          <el-button size=\"small\" :type=\"confirmButtonType\" @click=\"confirm\">\n            {{ finalConfirmButtonText }}\n          </el-button>\n        </div>\n      </div>\n    </template>\n    <template v-if=\"$slots.reference\">\n      <slot name=\"reference\" />\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, unref } from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElIcon from '@element-plus/components/icon'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { useDeprecateAppendToBody } from '@element-plus/components/popper'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { popconfirmProps } from './popconfirm'\n\nconst COMPONENT_NAME = 'ElPopconfirm'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  components: {\n    ElButton,\n    ElTooltip,\n    ElIcon,\n  },\n\n  props: popconfirmProps,\n\n  setup(props) {\n    const { compatTeleported } = useDeprecateAppendToBody(\n      COMPONENT_NAME,\n      'appendToBody'\n    )\n    const { t } = useLocale()\n    const ns = useNamespace('popconfirm')\n    const tooltipRef = ref<{ onClose: () => void }>()\n\n    const hidePopper = () => {\n      unref(tooltipRef)?.onClose?.()\n    }\n\n    const handleCallback = () => {\n      hidePopper()\n    }\n\n    const confirm = (e: Event) => {\n      props.onConfirm?.(e)\n      handleCallback()\n    }\n    const cancel = (e: Event) => {\n      props.onCancel?.(e)\n      handleCallback()\n    }\n\n    const finalConfirmButtonText = computed(\n      () => props.confirmButtonText || t('el.popconfirm.confirmButtonText')\n    )\n    const finalCancelButtonText = computed(\n      () => props.cancelButtonText || t('el.popconfirm.cancelButtonText')\n    )\n\n    return {\n      finalConfirmButtonText,\n      finalCancelButtonText,\n      tooltipRef,\n      ns,\n\n      // Deprecation in 2.1.0\n      compatTeleported,\n\n      confirm,\n      cancel,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}