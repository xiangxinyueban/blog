{"ast":null,"code":"import _toConsumableArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { isVNode, defineComponent, renderSlot, createVNode, createTextVNode } from 'vue';\nimport { isString, isArray } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport Item from './item.mjs';\nimport { useSpace } from './use-space.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { isNumber } from '@vueuse/core';\nimport { componentSizes } from '../../../constants/size.mjs';\nimport { isFragment, PatchFlags, isValidElementNode } from '../../../utils/vue/vnode.mjs';\nvar spaceProps = buildProps({\n  direction: {\n    type: String,\n    values: [\"horizontal\", \"vertical\"],\n    \"default\": \"horizontal\"\n  },\n  \"class\": {\n    type: definePropType([String, Object, Array]),\n    \"default\": \"\"\n  },\n  style: {\n    type: definePropType([String, Array, Object]),\n    \"default\": \"\"\n  },\n  alignment: {\n    type: definePropType(String),\n    \"default\": \"center\"\n  },\n  prefixCls: {\n    type: String\n  },\n  spacer: {\n    type: definePropType([Object, String, Number, Array]),\n    \"default\": null,\n    validator: function validator(val) {\n      return isVNode(val) || isNumber(val) || isString(val);\n    }\n  },\n  wrap: {\n    type: Boolean,\n    \"default\": false\n  },\n  fill: {\n    type: Boolean,\n    \"default\": false\n  },\n  fillRatio: {\n    type: Number,\n    \"default\": 100\n  },\n  size: {\n    type: [String, Array, Number],\n    values: componentSizes,\n    validator: function validator(val) {\n      return isNumber(val) || isArray(val) && val.length === 2 && val.every(function (i) {\n        return isNumber(i);\n      });\n    }\n  }\n});\nvar Space = defineComponent({\n  name: \"ElSpace\",\n  props: spaceProps,\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n\n    var _useSpace = useSpace(props),\n        classes = _useSpace.classes,\n        containerStyle = _useSpace.containerStyle,\n        itemStyle = _useSpace.itemStyle;\n\n    return function () {\n      var _a;\n\n      var spacer = props.spacer,\n          prefixCls = props.prefixCls,\n          direction = props.direction;\n      var children = renderSlot(slots, \"default\", {\n        key: 0\n      }, function () {\n        return [];\n      });\n      if (((_a = children.children) != null ? _a : []).length === 0) return null;\n\n      if (isArray(children.children)) {\n        var extractedChildren = [];\n        children.children.forEach(function (child, loopKey) {\n          if (isFragment(child)) {\n            if (isArray(child.children)) {\n              child.children.forEach(function (nested, key) {\n                extractedChildren.push(createVNode(Item, {\n                  style: itemStyle.value,\n                  prefixCls: prefixCls,\n                  key: \"nested-\".concat(key)\n                }, {\n                  \"default\": function _default() {\n                    return [nested];\n                  }\n                }, PatchFlags.PROPS | PatchFlags.STYLE, [\"style\", \"prefixCls\"]));\n              });\n            }\n          } else if (isValidElementNode(child)) {\n            extractedChildren.push(createVNode(Item, {\n              style: itemStyle.value,\n              prefixCls: prefixCls,\n              key: \"LoopKey\".concat(loopKey)\n            }, {\n              \"default\": function _default() {\n                return [child];\n              }\n            }, PatchFlags.PROPS | PatchFlags.STYLE, [\"style\", \"prefixCls\"]));\n          }\n        });\n\n        if (spacer) {\n          var len = extractedChildren.length - 1;\n          extractedChildren = extractedChildren.reduce(function (acc, child, idx) {\n            var children2 = [].concat(_toConsumableArray(acc), [child]);\n\n            if (idx !== len) {\n              children2.push(createVNode(\"span\", {\n                style: [itemStyle.value, direction === \"vertical\" ? \"width: 100%\" : null],\n                key: idx\n              }, [isVNode(spacer) ? spacer : createTextVNode(spacer, PatchFlags.TEXT)], PatchFlags.STYLE));\n            }\n\n            return children2;\n          }, []);\n        }\n\n        return createVNode(\"div\", {\n          \"class\": classes.value,\n          style: containerStyle.value\n        }, extractedChildren, PatchFlags.STYLE | PatchFlags.CLASS);\n      }\n\n      return children.children;\n    };\n  }\n});\nexport { Space as default, spaceProps };","map":{"version":3,"mappings":"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","names":["spaceProps","buildProps","direction","type","String","values","definePropType","Object","Array","style","alignment","prefixCls","spacer","Number","validator","val","isVNode","isNumber","isString","wrap","Boolean","fill","fillRatio","size","componentSizes","isArray","length","every","i","defineComponent","name","props","setup","slots","useSpace","classes","containerStyle","itemStyle","_a","children","renderSlot","key","extractedChildren","forEach","child","loopKey","isFragment","nested","push","createVNode","Item","value","PatchFlags","PROPS","STYLE","isValidElementNode","len","reduce","acc","idx","children2","createTextVNode","TEXT","CLASS"],"sources":["../../../../../../packages/components/space/src/space.ts"],"sourcesContent":["import {\n  createTextVNode,\n  createVNode,\n  defineComponent,\n  isVNode,\n  renderSlot,\n} from 'vue'\nimport { isString } from '@vue/shared'\nimport {\n  PatchFlags,\n  buildProps,\n  definePropType,\n  isArray,\n  isFragment,\n  isNumber,\n  isValidElementNode,\n} from '@element-plus/utils'\nimport { componentSizes } from '@element-plus/constants'\nimport Item from './item.vue'\nimport { useSpace } from './use-space'\n\nimport type { ExtractPropTypes, StyleValue, VNode, VNodeChild } from 'vue'\nimport type { AlignItemsProperty } from 'csstype'\n\nexport const spaceProps = buildProps({\n  direction: {\n    type: String,\n    values: ['horizontal', 'vertical'],\n    default: 'horizontal',\n  },\n\n  class: {\n    type: definePropType<string | string[] | Record<string, boolean>>([\n      String,\n      Object,\n      Array,\n    ]),\n    default: '',\n  },\n\n  style: {\n    type: definePropType<StyleValue>([String, Array, Object]),\n    default: '',\n  },\n\n  alignment: {\n    type: definePropType<AlignItemsProperty>(String),\n    default: 'center',\n  },\n\n  prefixCls: {\n    type: String,\n  },\n\n  spacer: {\n    type: definePropType<VNodeChild>([Object, String, Number, Array]),\n    default: null,\n    validator: (val: unknown) => isVNode(val) || isNumber(val) || isString(val),\n  },\n\n  wrap: {\n    type: Boolean,\n    default: false,\n  },\n\n  fill: {\n    type: Boolean,\n    default: false,\n  },\n\n  fillRatio: {\n    type: Number,\n    default: 100,\n  },\n\n  size: {\n    type: [String, Array, Number],\n    values: componentSizes,\n    validator: (val: unknown): val is [number, number] | number => {\n      return (\n        isNumber(val) ||\n        (isArray(val) && val.length === 2 && val.every((i) => isNumber(i)))\n      )\n    },\n  },\n} as const)\nexport type SpaceProps = ExtractPropTypes<typeof spaceProps>\n\nexport default defineComponent({\n  name: 'ElSpace',\n\n  props: spaceProps,\n\n  setup(props, { slots }) {\n    const { classes, containerStyle, itemStyle } = useSpace(props)\n\n    return () => {\n      const { spacer, prefixCls, direction } = props\n\n      const children = renderSlot(slots, 'default', { key: 0 }, () => [])\n      // retrieve the children out via a simple for loop\n      // the edge case here is that when users uses directives like <v-for>, <v-if>\n      // we need to go one layer deeper\n\n      if ((children.children ?? []).length === 0) return null\n\n      // loop the children, if current children is rendered via `renderList` or `<v-for>`\n      if (isArray(children.children)) {\n        let extractedChildren: VNode[] = []\n        children.children.forEach((child, loopKey) => {\n          if (isFragment(child)) {\n            if (isArray(child.children)) {\n              child.children.forEach((nested, key) => {\n                extractedChildren.push(\n                  createVNode(\n                    Item,\n                    {\n                      style: itemStyle.value,\n                      prefixCls,\n                      key: `nested-${key}`,\n                    },\n                    {\n                      default: () => [nested],\n                    },\n                    PatchFlags.PROPS | PatchFlags.STYLE,\n                    ['style', 'prefixCls']\n                  )\n                )\n              })\n            }\n            // if the current child is valid vnode, then append this current vnode\n            // to item as child node.\n          } else if (isValidElementNode(child)) {\n            extractedChildren.push(\n              createVNode(\n                Item,\n                {\n                  style: itemStyle.value,\n                  prefixCls,\n                  key: `LoopKey${loopKey}`,\n                },\n                {\n                  default: () => [child],\n                },\n                PatchFlags.PROPS | PatchFlags.STYLE,\n                ['style', 'prefixCls']\n              )\n            )\n          }\n        })\n\n        if (spacer) {\n          // track the current rendering index, when encounters the last element\n          // then no need to add a spacer after it.\n          const len = extractedChildren.length - 1\n          extractedChildren = extractedChildren.reduce<VNode[]>(\n            (acc, child, idx) => {\n              const children = [...acc, child]\n              if (idx !== len) {\n                children.push(\n                  createVNode(\n                    'span',\n                    // adding width 100% for vertical alignment,\n                    // when the spacer inherit the width from the\n                    // parent, this span's width was not set, so space\n                    // might disappear\n                    {\n                      style: [\n                        itemStyle.value,\n                        direction === 'vertical' ? 'width: 100%' : null,\n                      ],\n                      key: idx,\n                    },\n                    [\n                      // if spacer is already a valid vnode, then append it to the current\n                      // span element.\n                      // otherwise, treat it as string.\n                      isVNode(spacer)\n                        ? spacer\n                        : createTextVNode(spacer as string, PatchFlags.TEXT),\n                    ],\n                    PatchFlags.STYLE\n                  )\n                )\n              }\n              return children\n            },\n            []\n          )\n        }\n\n        // spacer container.\n        return createVNode(\n          'div',\n          {\n            class: classes.value,\n            style: containerStyle.value,\n          },\n          extractedChildren,\n          PatchFlags.STYLE | PatchFlags.CLASS\n        )\n      }\n\n      return children.children\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}