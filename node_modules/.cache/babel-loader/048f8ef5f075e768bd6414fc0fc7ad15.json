{"ast":null,"code":"import _asyncToGenerator from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport { defineComponent, ref, computed, unref, watch, shallowRef, onMounted, nextTick, onBeforeUnmount, provide, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, Transition, withCtx, withDirectives, createVNode, vShow, createCommentVNode, renderSlot, Fragment, renderList, toDisplayString } from 'vue';\nimport { throttle } from 'lodash-unified';\nimport { useResizeObserver } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport { carouselProps, carouselEmits } from './carousel.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isString } from '@vue/shared';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { carouselContextKey } from '../../../tokens/carousel.mjs';\nvar _hoisted_1 = [\"onMouseenter\", \"onMouseleave\"];\nvar _hoisted_2 = [\"onMouseenter\", \"onClick\"];\nvar _hoisted_3 = {\n  key: 0\n};\nvar __default__ = {\n  name: \"ElCarousel\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: carouselProps,\n  emits: carouselEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n        emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"carousel\");\n    var COMPONENT_NAME = \"ElCarousel\";\n    var THROTTLE_TIME = 300;\n    var activeIndex = ref(-1);\n    var timer = ref(null);\n    var hover = ref(false);\n    var root = ref();\n    var items = ref([]);\n    var arrowDisplay = computed(function () {\n      return props.arrow !== \"never\" && !unref(isVertical);\n    });\n    var hasLabel = computed(function () {\n      return items.value.some(function (item) {\n        return item.props.label.toString().length > 0;\n      });\n    });\n    var carouselClasses = computed(function () {\n      var classes = [ns.b(), ns.m(props.direction)];\n\n      if (unref(isCardType)) {\n        classes.push(ns.m(\"card\"));\n      }\n\n      return classes;\n    });\n    var indicatorsClasses = computed(function () {\n      var classes = [ns.e(\"indicators\"), ns.em(\"indicators\", props.direction)];\n\n      if (hasLabel.value) {\n        classes.push(ns.em(\"indicators\", \"labels\"));\n      }\n\n      if (props.indicatorPosition === \"outside\" || unref(isCardType)) {\n        classes.push(ns.em(\"indicators\", \"outside\"));\n      }\n\n      return classes;\n    });\n    var isCardType = computed(function () {\n      return props.type === \"card\";\n    });\n    var isVertical = computed(function () {\n      return props.direction === \"vertical\";\n    });\n    var throttledArrowClick = throttle(function (index) {\n      setActiveItem(index);\n    }, THROTTLE_TIME, {\n      trailing: true\n    });\n    var throttledIndicatorHover = throttle(function (index) {\n      handleIndicatorHover(index);\n    }, THROTTLE_TIME);\n\n    function pauseTimer() {\n      if (timer.value) {\n        clearInterval(timer.value);\n        timer.value = null;\n      }\n    }\n\n    function startTimer() {\n      if (props.interval <= 0 || !props.autoplay || timer.value) return;\n      timer.value = setInterval(function () {\n        return playSlides();\n      }, props.interval);\n    }\n\n    var playSlides = function playSlides() {\n      if (activeIndex.value < items.value.length - 1) {\n        activeIndex.value = activeIndex.value + 1;\n      } else if (props.loop) {\n        activeIndex.value = 0;\n      }\n    };\n\n    function setActiveItem(index) {\n      if (isString(index)) {\n        var filteredItems = items.value.filter(function (item) {\n          return item.props.name === index;\n        });\n\n        if (filteredItems.length > 0) {\n          index = items.value.indexOf(filteredItems[0]);\n        }\n      }\n\n      index = Number(index);\n\n      if (Number.isNaN(index) || index !== Math.floor(index)) {\n        debugWarn(COMPONENT_NAME, \"index must be integer.\");\n        return;\n      }\n\n      var itemCount = items.value.length;\n      var oldIndex = activeIndex.value;\n\n      if (index < 0) {\n        activeIndex.value = props.loop ? itemCount - 1 : 0;\n      } else if (index >= itemCount) {\n        activeIndex.value = props.loop ? 0 : itemCount - 1;\n      } else {\n        activeIndex.value = index;\n      }\n\n      if (oldIndex === activeIndex.value) {\n        resetItemPosition(oldIndex);\n      }\n    }\n\n    function resetItemPosition(oldIndex) {\n      items.value.forEach(function (item, index) {\n        item.translateItem(index, activeIndex.value, oldIndex);\n      });\n    }\n\n    function addItem(item) {\n      items.value.push(item);\n    }\n\n    function removeItem(uid) {\n      var index = items.value.findIndex(function (item) {\n        return item.uid === uid;\n      });\n\n      if (index !== -1) {\n        items.value.splice(index, 1);\n        if (activeIndex.value === index) next();\n      }\n    }\n\n    function itemInStage(item, index) {\n      var _a, _b, _c, _d;\n\n      var _items = unref(items);\n\n      var itemCount = _items.length;\n      if (itemCount === 0 || !item.states.inStage) return false;\n      var nextItemIndex = index + 1;\n      var prevItemIndex = index - 1;\n      var lastItemIndex = itemCount - 1;\n      var isLastItemActive = _items[lastItemIndex].states.active;\n      var isFirstItemActive = _items[0].states.active;\n      var isNextItemActive = (_b = (_a = _items[nextItemIndex]) == null ? void 0 : _a.states) == null ? void 0 : _b.active;\n      var isPrevItemActive = (_d = (_c = _items[prevItemIndex]) == null ? void 0 : _c.states) == null ? void 0 : _d.active;\n\n      if (index === lastItemIndex && isFirstItemActive || isNextItemActive) {\n        return \"left\";\n      } else if (index === 0 && isLastItemActive || isPrevItemActive) {\n        return \"right\";\n      }\n\n      return false;\n    }\n\n    function handleMouseEnter() {\n      hover.value = true;\n\n      if (props.pauseOnHover) {\n        pauseTimer();\n      }\n    }\n\n    function handleMouseLeave() {\n      hover.value = false;\n      startTimer();\n    }\n\n    function handleButtonEnter(arrow) {\n      if (unref(isVertical)) return;\n      items.value.forEach(function (item, index) {\n        if (arrow === itemInStage(item, index)) {\n          item.states.hover = true;\n        }\n      });\n    }\n\n    function handleButtonLeave() {\n      if (unref(isVertical)) return;\n      items.value.forEach(function (item) {\n        item.states.hover = false;\n      });\n    }\n\n    function handleIndicatorClick(index) {\n      activeIndex.value = index;\n    }\n\n    function handleIndicatorHover(index) {\n      if (props.trigger === \"hover\" && index !== activeIndex.value) {\n        activeIndex.value = index;\n      }\n    }\n\n    function prev() {\n      setActiveItem(activeIndex.value - 1);\n    }\n\n    function next() {\n      setActiveItem(activeIndex.value + 1);\n    }\n\n    watch(function () {\n      return activeIndex.value;\n    }, function (current, prev2) {\n      resetItemPosition(prev2);\n\n      if (prev2 > -1) {\n        emit(\"change\", current, prev2);\n      }\n    });\n    watch(function () {\n      return props.autoplay;\n    }, function (autoplay) {\n      autoplay ? startTimer() : pauseTimer();\n    });\n    watch(function () {\n      return props.loop;\n    }, function () {\n      setActiveItem(activeIndex.value);\n    });\n    var resizeObserver = shallowRef();\n    onMounted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return nextTick();\n\n            case 2:\n              resizeObserver.value = useResizeObserver(root.value, function () {\n                resetItemPosition();\n              });\n\n              if (props.initialIndex < items.value.length && props.initialIndex >= 0) {\n                activeIndex.value = props.initialIndex;\n              }\n\n              startTimer();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n    onBeforeUnmount(function () {\n      pauseTimer();\n      if (root.value && resizeObserver.value) resizeObserver.value.stop();\n    });\n    provide(carouselContextKey, {\n      root: root,\n      isCardType: isCardType,\n      isVertical: isVertical,\n      items: items,\n      loop: props.loop,\n      addItem: addItem,\n      removeItem: removeItem,\n      setActiveItem: setActiveItem\n    });\n    expose({\n      setActiveItem: setActiveItem,\n      prev: prev,\n      next: next\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"root\",\n        ref: root,\n        \"class\": normalizeClass(unref(carouselClasses)),\n        onMouseenter: withModifiers(handleMouseEnter, [\"stop\"]),\n        onMouseleave: withModifiers(handleMouseLeave, [\"stop\"])\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"container\")),\n        style: normalizeStyle({\n          height: _ctx.height\n        })\n      }, [unref(arrowDisplay) ? (openBlock(), createBlock(Transition, {\n        key: 0,\n        name: \"carousel-arrow-left\"\n      }, {\n        \"default\": withCtx(function () {\n          return [withDirectives(createElementVNode(\"button\", {\n            type: \"button\",\n            \"class\": normalizeClass([unref(ns).e(\"arrow\"), unref(ns).em(\"arrow\", \"left\")]),\n            onMouseenter: _cache[0] || (_cache[0] = function ($event) {\n              return handleButtonEnter(\"left\");\n            }),\n            onMouseleave: handleButtonLeave,\n            onClick: _cache[1] || (_cache[1] = withModifiers(function ($event) {\n              return unref(throttledArrowClick)(activeIndex.value - 1);\n            }, [\"stop\"]))\n          }, [createVNode(unref(ElIcon), null, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(ArrowLeft))];\n            }),\n            _: 1\n          })], 34), [[vShow, (_ctx.arrow === \"always\" || hover.value) && (props.loop || activeIndex.value > 0)]])];\n        }),\n        _: 1\n      })) : createCommentVNode(\"v-if\", true), unref(arrowDisplay) ? (openBlock(), createBlock(Transition, {\n        key: 1,\n        name: \"carousel-arrow-right\"\n      }, {\n        \"default\": withCtx(function () {\n          return [withDirectives(createElementVNode(\"button\", {\n            type: \"button\",\n            \"class\": normalizeClass([unref(ns).e(\"arrow\"), unref(ns).em(\"arrow\", \"right\")]),\n            onMouseenter: _cache[2] || (_cache[2] = function ($event) {\n              return handleButtonEnter(\"right\");\n            }),\n            onMouseleave: handleButtonLeave,\n            onClick: _cache[3] || (_cache[3] = withModifiers(function ($event) {\n              return unref(throttledArrowClick)(activeIndex.value + 1);\n            }, [\"stop\"]))\n          }, [createVNode(unref(ElIcon), null, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(ArrowRight))];\n            }),\n            _: 1\n          })], 34), [[vShow, (_ctx.arrow === \"always\" || hover.value) && (props.loop || activeIndex.value < items.value.length - 1)]])];\n        }),\n        _: 1\n      })) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")], 6), _ctx.indicatorPosition !== \"none\" ? (openBlock(), createElementBlock(\"ul\", {\n        key: 0,\n        \"class\": normalizeClass(unref(indicatorsClasses))\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(items.value, function (item, index) {\n        return openBlock(), createElementBlock(\"li\", {\n          key: index,\n          \"class\": normalizeClass([unref(ns).e(\"indicator\"), unref(ns).em(\"indicator\", _ctx.direction), unref(ns).is(\"active\", index === activeIndex.value)]),\n          onMouseenter: function onMouseenter($event) {\n            return unref(throttledIndicatorHover)(index);\n          },\n          onClick: withModifiers(function ($event) {\n            return handleIndicatorClick(index);\n          }, [\"stop\"])\n        }, [createElementVNode(\"button\", {\n          \"class\": normalizeClass(unref(ns).e(\"button\"))\n        }, [unref(hasLabel) ? (openBlock(), createElementBlock(\"span\", _hoisted_3, toDisplayString(item.props.label), 1)) : createCommentVNode(\"v-if\", true)], 2)], 42, _hoisted_2);\n      }), 128))], 2)) : createCommentVNode(\"v-if\", true)], 42, _hoisted_1);\n    };\n  }\n}));\n\nvar Carousel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/carousel/src/carousel.vue\"]]);\n\nexport { Carousel as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA,gCACA;AAAA;AAAA,KADA;AAIA;AACA;AAAA;AAAA;AACA,KAFA;AAIA;AACA;;AACA;AACAA;AACA;;AACA;AACA,KANA;AAQA;AACA;;AACA;AACAA;AACA;;AACA;AACAA;AACA;;AACA;AACA,KATA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA,sCACA;AACAC;AAEA,KAHA,EAGAC,aAHA,EAIA;AAAAC;AAAA,KAJA,CADA;AAQA;AACAC;AAAA,KADA,EAEAF,aAFA;;AAIA;AACA;AACAG;AACAC;AACA;AACA;;AAEA;AACA;AACAA;AAAA;AAAA;AACA;;AAEA;AACA;AACAC;AACA,OAFA,MAEA;AACAA;AACA;AACA,KANA;;AAQA;AACA;AACA,+CACA;AAAA;AAAA,SADA;;AAGA;AACAC;AACA;AACA;;AACAA;;AACA;AACAC;AACA;AACA;;AACA;AACA;;AACA;AACAF;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA;;AACA;AACAG;AACA;AACA;;AAEA;AACAC;AACAC;AACA,OAFA;AAGA;;AAEA;AACAD;AACA;;AAEA;AACA;AAAA;AAAA;;AACA;AACAA;AACA;AACA;AACA;;AAEA;AACA;;AACA;;AACA;AAAA,mDACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AACA;AAEA;;AACA;AACAE;;AACA;AACAC;AACA;AAEA;;AACA;AACAD;AACAE;AAEA;;AACA;AAAA,6BACA;AACAJ;AACA;AACAC;AACA;AACA,OAJA;AAMA;;AACA;AAAA,6BACA;AACAD;AACAC;AACA,OAFA;AAIA;;AACA;AACAL;AAEA;;AACA;AACA;AACAA;AACA;AAEA;;AACA;AACAN;AAEA;;AACA;AACAA;AAGA;;AAGAe;AAAA;AAAA;AACAN;;AACA;AACAO;AAEA;AACA,KANA;AASAD;AAAA;AAAA;AAEAE;AAEA,KAJA;AAMAF;AAAA;AAAA;AAEAf;AAEA,KAJA;AAMA;AACAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEAC,UAFA;;AAAA;AAGAC;AACAX;AACA,eAFA;;AAGA;AACAH;AACA;;AACAQ;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYAO;AACAR;AAAA,8CACAO;AAGA,KALA;AAMAE;AACAC,gBADA;AAEAC,4BAFA;AAGAC,4BAHA;AAIAf,kBAJA;AAKAgB,sBALA;AAMAC,sBANA;AAOAC,4BAPA;AAQA5B;AARA;AAYA6B;AAEA7B,kCAFA;AAIA8B,gBAJA;AAKAC;AALA","names":["classes","setActiveItem","THROTTLE_TIME","trailing","handleIndicatorHover","clearInterval","timer","activeIndex","index","debugWarn","resetItemPosition","items","item","hover","pauseTimer","startTimer","watch","emit","autoplay","onMounted","nextTick","resizeObserver","onBeforeUnmount","provide","root","isCardType","isVertical","loop","addItem","removeItem","expose","prev","next"],"sources":["../../../../../../packages/components/carousel/src/carousel.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"root\"\n    :class=\"carouselClasses\"\n    @mouseenter.stop=\"handleMouseEnter\"\n    @mouseleave.stop=\"handleMouseLeave\"\n  >\n    <div :class=\"ns.e('container')\" :style=\"{ height: height }\">\n      <transition v-if=\"arrowDisplay\" name=\"carousel-arrow-left\">\n        <button\n          v-show=\"\n            (arrow === 'always' || hover) && (props.loop || activeIndex > 0)\n          \"\n          type=\"button\"\n          :class=\"[ns.e('arrow'), ns.em('arrow', 'left')]\"\n          @mouseenter=\"handleButtonEnter('left')\"\n          @mouseleave=\"handleButtonLeave\"\n          @click.stop=\"throttledArrowClick(activeIndex - 1)\"\n        >\n          <ElIcon>\n            <ArrowLeft />\n          </ElIcon>\n        </button>\n      </transition>\n      <transition v-if=\"arrowDisplay\" name=\"carousel-arrow-right\">\n        <button\n          v-show=\"\n            (arrow === 'always' || hover) &&\n            (props.loop || activeIndex < items.length - 1)\n          \"\n          type=\"button\"\n          :class=\"[ns.e('arrow'), ns.em('arrow', 'right')]\"\n          @mouseenter=\"handleButtonEnter('right')\"\n          @mouseleave=\"handleButtonLeave\"\n          @click.stop=\"throttledArrowClick(activeIndex + 1)\"\n        >\n          <ElIcon>\n            <ArrowRight />\n          </ElIcon>\n        </button>\n      </transition>\n      <slot />\n    </div>\n    <ul v-if=\"indicatorPosition !== 'none'\" :class=\"indicatorsClasses\">\n      <li\n        v-for=\"(item, index) in items\"\n        :key=\"index\"\n        :class=\"[\n          ns.e('indicator'),\n          ns.em('indicator', direction),\n          ns.is('active', index === activeIndex),\n        ]\"\n        @mouseenter=\"throttledIndicatorHover(index)\"\n        @click.stop=\"handleIndicatorClick(index)\"\n      >\n        <button :class=\"ns.e('button')\">\n          <span v-if=\"hasLabel\">{{ item.props.label }}</span>\n        </button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  ref,\n  shallowRef,\n  unref,\n  watch,\n} from 'vue'\nimport { throttle } from 'lodash-unified'\nimport { useResizeObserver } from '@vueuse/core'\nimport { debugWarn, isString } from '@element-plus/utils'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { carouselContextKey } from '@element-plus/tokens'\nimport { carouselEmits, carouselProps } from './carousel'\nimport type { CarouselItemContext } from '@element-plus/tokens'\n\ndefineOptions({\n  name: 'ElCarousel',\n})\n\nconst props = defineProps(carouselProps)\nconst emit = defineEmits(carouselEmits)\nconst ns = useNamespace('carousel')\nconst COMPONENT_NAME = 'ElCarousel'\nconst THROTTLE_TIME = 300\n\n// refs\nconst activeIndex = ref(-1)\nconst timer = ref<ReturnType<typeof setInterval> | null>(null)\nconst hover = ref(false)\nconst root = ref<HTMLDivElement>()\nconst items = ref<Array<CarouselItemContext>>([])\n\n// computed\nconst arrowDisplay = computed(\n  () => props.arrow !== 'never' && !unref(isVertical)\n)\n\nconst hasLabel = computed(() => {\n  return items.value.some((item) => item.props.label.toString().length > 0)\n})\n\nconst carouselClasses = computed(() => {\n  const classes = [ns.b(), ns.m(props.direction)]\n  if (unref(isCardType)) {\n    classes.push(ns.m('card'))\n  }\n  return classes\n})\n\nconst indicatorsClasses = computed(() => {\n  const classes = [ns.e('indicators'), ns.em('indicators', props.direction)]\n  if (hasLabel.value) {\n    classes.push(ns.em('indicators', 'labels'))\n  }\n  if (props.indicatorPosition === 'outside' || unref(isCardType)) {\n    classes.push(ns.em('indicators', 'outside'))\n  }\n  return classes\n})\n\nconst isCardType = computed(() => props.type === 'card')\nconst isVertical = computed(() => props.direction === 'vertical')\n\n// methods\nconst throttledArrowClick = throttle(\n  (index: number) => {\n    setActiveItem(index)\n  },\n  THROTTLE_TIME,\n  { trailing: true }\n)\n\nconst throttledIndicatorHover = throttle((index: number) => {\n  handleIndicatorHover(index)\n}, THROTTLE_TIME)\n\nfunction pauseTimer() {\n  if (timer.value) {\n    clearInterval(timer.value)\n    timer.value = null\n  }\n}\n\nfunction startTimer() {\n  if (props.interval <= 0 || !props.autoplay || timer.value) return\n  timer.value = setInterval(() => playSlides(), props.interval)\n}\n\nconst playSlides = () => {\n  if (activeIndex.value < items.value.length - 1) {\n    activeIndex.value = activeIndex.value + 1\n  } else if (props.loop) {\n    activeIndex.value = 0\n  }\n}\n\nfunction setActiveItem(index: number | string) {\n  if (isString(index)) {\n    const filteredItems = items.value.filter(\n      (item) => item.props.name === index\n    )\n    if (filteredItems.length > 0) {\n      index = items.value.indexOf(filteredItems[0])\n    }\n  }\n  index = Number(index)\n  if (Number.isNaN(index) || index !== Math.floor(index)) {\n    debugWarn(COMPONENT_NAME, 'index must be integer.')\n    return\n  }\n  const itemCount = items.value.length\n  const oldIndex = activeIndex.value\n  if (index < 0) {\n    activeIndex.value = props.loop ? itemCount - 1 : 0\n  } else if (index >= itemCount) {\n    activeIndex.value = props.loop ? 0 : itemCount - 1\n  } else {\n    activeIndex.value = index\n  }\n  if (oldIndex === activeIndex.value) {\n    resetItemPosition(oldIndex)\n  }\n}\n\nfunction resetItemPosition(oldIndex?: number) {\n  items.value.forEach((item, index) => {\n    item.translateItem(index, activeIndex.value, oldIndex)\n  })\n}\n\nfunction addItem(item: CarouselItemContext) {\n  items.value.push(item)\n}\n\nfunction removeItem(uid?: number) {\n  const index = items.value.findIndex((item) => item.uid === uid)\n  if (index !== -1) {\n    items.value.splice(index, 1)\n    if (activeIndex.value === index) next()\n  }\n}\n\nfunction itemInStage(item: CarouselItemContext, index: number) {\n  const _items = unref(items)\n  const itemCount = _items.length\n  if (itemCount === 0 || !item.states.inStage) return false\n  const nextItemIndex = index + 1\n  const prevItemIndex = index - 1\n  const lastItemIndex = itemCount - 1\n  const isLastItemActive = _items[lastItemIndex].states.active\n  const isFirstItemActive = _items[0].states.active\n  const isNextItemActive = _items[nextItemIndex]?.states?.active\n  const isPrevItemActive = _items[prevItemIndex]?.states?.active\n\n  if ((index === lastItemIndex && isFirstItemActive) || isNextItemActive) {\n    return 'left'\n  } else if ((index === 0 && isLastItemActive) || isPrevItemActive) {\n    return 'right'\n  }\n  return false\n}\n\nfunction handleMouseEnter() {\n  hover.value = true\n  if (props.pauseOnHover) {\n    pauseTimer()\n  }\n}\n\nfunction handleMouseLeave() {\n  hover.value = false\n  startTimer()\n}\n\nfunction handleButtonEnter(arrow: 'left' | 'right') {\n  if (unref(isVertical)) return\n  items.value.forEach((item, index) => {\n    if (arrow === itemInStage(item, index)) {\n      item.states.hover = true\n    }\n  })\n}\n\nfunction handleButtonLeave() {\n  if (unref(isVertical)) return\n  items.value.forEach((item) => {\n    item.states.hover = false\n  })\n}\n\nfunction handleIndicatorClick(index: number) {\n  activeIndex.value = index\n}\n\nfunction handleIndicatorHover(index: number) {\n  if (props.trigger === 'hover' && index !== activeIndex.value) {\n    activeIndex.value = index\n  }\n}\n\nfunction prev() {\n  setActiveItem(activeIndex.value - 1)\n}\n\nfunction next() {\n  setActiveItem(activeIndex.value + 1)\n}\n\n// watch\nwatch(\n  () => activeIndex.value,\n  (current, prev) => {\n    resetItemPosition(prev)\n    if (prev > -1) {\n      emit('change', current, prev)\n    }\n  }\n)\nwatch(\n  () => props.autoplay,\n  (autoplay) => {\n    autoplay ? startTimer() : pauseTimer()\n  }\n)\nwatch(\n  () => props.loop,\n  () => {\n    setActiveItem(activeIndex.value)\n  }\n)\n\nconst resizeObserver = shallowRef<ReturnType<typeof useResizeObserver>>()\n// lifecycle\nonMounted(async () => {\n  await nextTick()\n\n  resizeObserver.value = useResizeObserver(root.value, () => {\n    resetItemPosition()\n  })\n  if (props.initialIndex < items.value.length && props.initialIndex >= 0) {\n    activeIndex.value = props.initialIndex\n  }\n  startTimer()\n})\n\nonBeforeUnmount(() => {\n  pauseTimer()\n  if (root.value && resizeObserver.value) resizeObserver.value.stop()\n})\n\n// provide\nprovide(carouselContextKey, {\n  root,\n  isCardType,\n  isVertical,\n  items,\n  loop: props.loop,\n  addItem,\n  removeItem,\n  setActiveItem,\n})\n\ndefineExpose({\n  /** @description manually switch slide */\n  setActiveItem,\n  /** @description switch to the previous slide */\n  prev,\n  /** @description switch to the next slide */\n  next,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}