{"ast":null,"code":"import _toConsumableArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { defineComponent, ref, inject, getCurrentInstance, onMounted, watch, onBeforeUnmount, computed, reactive, resolveComponent, openBlock, createElementBlock, normalizeStyle, normalizeClass, createCommentVNode, createElementVNode, renderSlot, createBlock, withCtx, resolveDynamicComponent, toDisplayString, createTextVNode } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Close, Check } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElStep\",\n  components: {\n    ElIcon: ElIcon,\n    Close: Close,\n    Check: Check\n  },\n  props: {\n    title: {\n      type: String,\n      \"default\": \"\"\n    },\n    icon: {\n      type: [String, Object],\n      \"default\": \"\"\n    },\n    description: {\n      type: String,\n      \"default\": \"\"\n    },\n    status: {\n      type: String,\n      \"default\": \"\",\n      validator: function validator(val) {\n        return [\"\", \"wait\", \"process\", \"finish\", \"error\", \"success\"].includes(val);\n      }\n    }\n  },\n  setup: function setup(props) {\n    var ns = useNamespace(\"step\");\n    var index = ref(-1);\n    var lineStyle = ref({});\n    var internalStatus = ref(\"\");\n    var parent = inject(\"ElSteps\");\n    var currentInstance = getCurrentInstance();\n    onMounted(function () {\n      watch([function () {\n        return parent.props.active;\n      }, function () {\n        return parent.props.processStatus;\n      }, function () {\n        return parent.props.finishStatus;\n      }], function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            active = _ref2[0];\n\n        updateStatus(active);\n      }, {\n        immediate: true\n      });\n    });\n    onBeforeUnmount(function () {\n      parent.steps.value = parent.steps.value.filter(function (instance) {\n        return instance.uid !== currentInstance.uid;\n      });\n    });\n    var currentStatus = computed(function () {\n      return props.status || internalStatus.value;\n    });\n    var prevStatus = computed(function () {\n      var prevStep = parent.steps.value[index.value - 1];\n      return prevStep ? prevStep.currentStatus : \"wait\";\n    });\n    var isCenter = computed(function () {\n      return parent.props.alignCenter;\n    });\n    var isVertical = computed(function () {\n      return parent.props.direction === \"vertical\";\n    });\n    var isSimple = computed(function () {\n      return parent.props.simple;\n    });\n    var stepsCount = computed(function () {\n      return parent.steps.value.length;\n    });\n    var isLast = computed(function () {\n      var _a;\n\n      return ((_a = parent.steps.value[stepsCount.value - 1]) == null ? void 0 : _a.uid) === currentInstance.uid;\n    });\n    var space = computed(function () {\n      return isSimple.value ? \"\" : parent.props.space;\n    });\n    var style = computed(function () {\n      var style2 = {\n        flexBasis: typeof space.value === \"number\" ? \"\".concat(space.value, \"px\") : space.value ? space.value : \"\".concat(100 / (stepsCount.value - (isCenter.value ? 0 : 1)), \"%\")\n      };\n      if (isVertical.value) return style2;\n\n      if (isLast.value) {\n        style2.maxWidth = \"\".concat(100 / stepsCount.value, \"%\");\n      }\n\n      return style2;\n    });\n\n    var setIndex = function setIndex(val) {\n      index.value = val;\n    };\n\n    var calcProgress = function calcProgress(status) {\n      var step = 100;\n      var style2 = {};\n      style2.transitionDelay = \"\".concat(150 * index.value, \"ms\");\n\n      if (status === parent.props.processStatus) {\n        step = 0;\n      } else if (status === \"wait\") {\n        step = 0;\n        style2.transitionDelay = \"\".concat(-150 * index.value, \"ms\");\n      }\n\n      style2.borderWidth = step && !isSimple.value ? \"1px\" : 0;\n      style2[parent.props.direction === \"vertical\" ? \"height\" : \"width\"] = \"\".concat(step, \"%\");\n      lineStyle.value = style2;\n    };\n\n    var updateStatus = function updateStatus(activeIndex) {\n      if (activeIndex > index.value) {\n        internalStatus.value = parent.props.finishStatus;\n      } else if (activeIndex === index.value && prevStatus.value !== \"error\") {\n        internalStatus.value = parent.props.processStatus;\n      } else {\n        internalStatus.value = \"wait\";\n      }\n\n      var prevChild = parent.steps.value[stepsCount.value - 1];\n      if (prevChild) prevChild.calcProgress(internalStatus.value);\n    };\n\n    var stepItemState = reactive({\n      uid: computed(function () {\n        return currentInstance.uid;\n      }),\n      currentStatus: currentStatus,\n      setIndex: setIndex,\n      calcProgress: calcProgress\n    });\n    parent.steps.value = [].concat(_toConsumableArray(parent.steps.value), [stepItemState]);\n    return {\n      ns: ns,\n      index: index,\n      lineStyle: lineStyle,\n      currentStatus: currentStatus,\n      isCenter: isCenter,\n      isVertical: isVertical,\n      isSimple: isSimple,\n      isLast: isLast,\n      space: space,\n      style: style,\n      parent: parent,\n      setIndex: setIndex,\n      calcProgress: calcProgress,\n      updateStatus: updateStatus\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_check = resolveComponent(\"check\");\n\n  var _component_close = resolveComponent(\"close\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    style: normalizeStyle(_ctx.style),\n    \"class\": normalizeClass([_ctx.ns.b(), _ctx.ns.is(_ctx.isSimple ? \"simple\" : _ctx.parent.props.direction), _ctx.ns.is(\"flex\", _ctx.isLast && !_ctx.space && !_ctx.isCenter), _ctx.ns.is(\"center\", _ctx.isCenter && !_ctx.isVertical && !_ctx.isSimple)])\n  }, [createCommentVNode(\" icon & line \"), createElementVNode(\"div\", {\n    \"class\": normalizeClass([_ctx.ns.e(\"head\"), _ctx.ns.is(_ctx.currentStatus)])\n  }, [!_ctx.isSimple ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    \"class\": normalizeClass(_ctx.ns.e(\"line\"))\n  }, [createElementVNode(\"i\", {\n    \"class\": normalizeClass(_ctx.ns.e(\"line-inner\")),\n    style: normalizeStyle(_ctx.lineStyle)\n  }, null, 6)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n    \"class\": normalizeClass([_ctx.ns.e(\"icon\"), _ctx.ns.is(_ctx.icon ? \"icon\" : \"text\")])\n  }, [_ctx.currentStatus !== \"success\" && _ctx.currentStatus !== \"error\" ? renderSlot(_ctx.$slots, \"icon\", {\n    key: 0\n  }, function () {\n    return [_ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n      key: 0,\n      \"class\": normalizeClass(_ctx.ns.e(\"icon-inner\"))\n    }, {\n      \"default\": withCtx(function () {\n        return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n      }),\n      _: 1\n    }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), !_ctx.icon && !_ctx.isSimple ? (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      \"class\": normalizeClass(_ctx.ns.e(\"icon-inner\"))\n    }, toDisplayString(_ctx.index + 1), 3)) : createCommentVNode(\"v-if\", true)];\n  }) : (openBlock(), createBlock(_component_el_icon, {\n    key: 1,\n    \"class\": normalizeClass([_ctx.ns.e(\"icon-inner\"), _ctx.ns.is(\"status\")])\n  }, {\n    \"default\": withCtx(function () {\n      return [_ctx.currentStatus === \"success\" ? (openBlock(), createBlock(_component_check, {\n        key: 0\n      })) : (openBlock(), createBlock(_component_close, {\n        key: 1\n      }))];\n    }),\n    _: 1\n  }, 8, [\"class\"]))], 2)], 2), createCommentVNode(\" title & description \"), createElementVNode(\"div\", {\n    \"class\": normalizeClass(_ctx.ns.e(\"main\"))\n  }, [createElementVNode(\"div\", {\n    \"class\": normalizeClass([_ctx.ns.e(\"title\"), _ctx.ns.is(_ctx.currentStatus)])\n  }, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n    return [createTextVNode(toDisplayString(_ctx.title), 1)];\n  })], 2), _ctx.isSimple ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    \"class\": normalizeClass(_ctx.ns.e(\"arrow\"))\n  }, null, 2)) : (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    \"class\": normalizeClass([_ctx.ns.e(\"description\"), _ctx.ns.is(_ctx.currentStatus)])\n  }, [renderSlot(_ctx.$slots, \"description\", {}, function () {\n    return [createTextVNode(toDisplayString(_ctx.description), 1)];\n  })], 2))], 2)], 6);\n}\n\nvar Step = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/steps/src/item.vue\"]]);\n\nexport { Step as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElIcon","Close","Check","props","title","type","icon","String","Object","description","status","validator","val","includes","setup","useNamespace","ref","inject","currentInstance","getCurrentInstance","onMounted","watch","parent","active","processStatus","finishStatus","updateStatus","immediate","onBeforeUnmount","value","steps","filter","instance","uid","computed","internalStatus","prevStep","index","currentStatus","alignCenter","direction","simple","length","flexBasis","style2","setIndex","calcProgress","step","borderWidth","lineStyle","prevStatus","prevChild","stepItemState","ns","isCenter","isVertical","isSimple","isLast","space","style","_ctx","b","is","_createCommentVNode","_createElementVNode","key","_normalizeClass","e","_renderSlot","_openBlock","createCommentVNode","_withCtx"],"sources":["../../../../../../packages/components/steps/src/item.vue"],"sourcesContent":["<template>\n  <div\n    :style=\"style\"\n    :class=\"[\n      ns.b(),\n      ns.is(isSimple ? 'simple' : parent.props.direction),\n      ns.is('flex', isLast && !space && !isCenter),\n      ns.is('center', isCenter && !isVertical && !isSimple),\n    ]\"\n  >\n    <!-- icon & line -->\n    <div :class=\"[ns.e('head'), ns.is(currentStatus)]\">\n      <div v-if=\"!isSimple\" :class=\"ns.e('line')\">\n        <i :class=\"ns.e('line-inner')\" :style=\"lineStyle\" />\n      </div>\n\n      <div :class=\"[ns.e('icon'), ns.is(icon ? 'icon' : 'text')]\">\n        <slot\n          v-if=\"currentStatus !== 'success' && currentStatus !== 'error'\"\n          name=\"icon\"\n        >\n          <el-icon v-if=\"icon\" :class=\"ns.e('icon-inner')\">\n            <component :is=\"icon\" />\n          </el-icon>\n          <div v-if=\"!icon && !isSimple\" :class=\"ns.e('icon-inner')\">\n            {{ index + 1 }}\n          </div>\n        </slot>\n        <el-icon v-else :class=\"[ns.e('icon-inner'), ns.is('status')]\">\n          <check v-if=\"currentStatus === 'success'\" />\n          <close v-else />\n        </el-icon>\n      </div>\n    </div>\n    <!-- title & description -->\n    <div :class=\"ns.e('main')\">\n      <div :class=\"[ns.e('title'), ns.is(currentStatus)]\">\n        <slot name=\"title\">{{ title }}</slot>\n      </div>\n      <div v-if=\"isSimple\" :class=\"ns.e('arrow')\" />\n      <div v-else :class=\"[ns.e('description'), ns.is(currentStatus)]\">\n        <slot name=\"description\">{{ description }}</slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  onBeforeUnmount,\n  onMounted,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { Check, Close } from '@element-plus/icons-vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { Component, PropType, Ref } from 'vue'\n\nexport interface IStepsProps {\n  space: number | string\n  active: number\n  direction: string\n  alignCenter: boolean\n  simple: boolean\n  finishStatus: string\n  processStatus: string\n}\n\nexport interface StepItemState {\n  uid: number\n  currentStatus: string\n  setIndex: (val: number) => void\n  calcProgress: (status: string) => void\n}\n\nexport interface IStepsInject {\n  props: IStepsProps\n  steps: Ref<StepItemState[]>\n}\n\nexport default defineComponent({\n  name: 'ElStep',\n  components: {\n    ElIcon,\n    Close,\n    Check,\n  },\n  props: {\n    title: {\n      type: String,\n      default: '',\n    },\n    icon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: '',\n    },\n    description: {\n      type: String,\n      default: '',\n    },\n    status: {\n      type: String,\n      default: '',\n      validator: (val: string): boolean =>\n        ['', 'wait', 'process', 'finish', 'error', 'success'].includes(val),\n    },\n  },\n  setup(props) {\n    const ns = useNamespace('step')\n    const index = ref(-1)\n    const lineStyle = ref({})\n    const internalStatus = ref('')\n    const parent: IStepsInject = inject('ElSteps')\n    const currentInstance = getCurrentInstance()\n\n    onMounted(() => {\n      watch(\n        [\n          () => parent.props.active,\n          () => parent.props.processStatus,\n          () => parent.props.finishStatus,\n        ],\n        ([active]) => {\n          updateStatus(active)\n        },\n        { immediate: true }\n      )\n    })\n\n    onBeforeUnmount(() => {\n      parent.steps.value = parent.steps.value.filter(\n        (instance) => instance.uid !== currentInstance.uid\n      )\n    })\n\n    const currentStatus = computed(() => {\n      return props.status || internalStatus.value\n    })\n    const prevStatus = computed(() => {\n      const prevStep = parent.steps.value[index.value - 1]\n      return prevStep ? prevStep.currentStatus : 'wait'\n    })\n    const isCenter = computed(() => {\n      return parent.props.alignCenter\n    })\n    const isVertical = computed(() => {\n      return parent.props.direction === 'vertical'\n    })\n    const isSimple = computed(() => {\n      return parent.props.simple\n    })\n    const stepsCount = computed(() => {\n      return parent.steps.value.length\n    })\n    const isLast = computed(() => {\n      return (\n        parent.steps.value[stepsCount.value - 1]?.uid === currentInstance.uid\n      )\n    })\n    const space = computed(() => {\n      return isSimple.value ? '' : parent.props.space\n    })\n    const style = computed(() => {\n      const style: Record<string, unknown> = {\n        flexBasis:\n          typeof space.value === 'number'\n            ? `${space.value}px`\n            : space.value\n            ? space.value\n            : `${100 / (stepsCount.value - (isCenter.value ? 0 : 1))}%`,\n      }\n      if (isVertical.value) return style\n      if (isLast.value) {\n        style.maxWidth = `${100 / stepsCount.value}%`\n      }\n      return style\n    })\n\n    const setIndex = (val) => {\n      index.value = val\n    }\n    const calcProgress = (status) => {\n      let step = 100\n      const style: Record<string, unknown> = {}\n\n      style.transitionDelay = `${150 * index.value}ms`\n      if (status === parent.props.processStatus) {\n        step = 0\n      } else if (status === 'wait') {\n        step = 0\n        style.transitionDelay = `${-150 * index.value}ms`\n      }\n      style.borderWidth = step && !isSimple.value ? '1px' : 0\n      style[\n        parent.props.direction === 'vertical' ? 'height' : 'width'\n      ] = `${step}%`\n      lineStyle.value = style\n    }\n    const updateStatus = (activeIndex) => {\n      if (activeIndex > index.value) {\n        internalStatus.value = parent.props.finishStatus\n      } else if (activeIndex === index.value && prevStatus.value !== 'error') {\n        internalStatus.value = parent.props.processStatus\n      } else {\n        internalStatus.value = 'wait'\n      }\n      const prevChild = parent.steps.value[stepsCount.value - 1]\n      if (prevChild) prevChild.calcProgress(internalStatus.value)\n    }\n\n    const stepItemState = reactive({\n      uid: computed(() => currentInstance.uid),\n      currentStatus,\n      setIndex,\n      calcProgress,\n    })\n    parent.steps.value = [...parent.steps.value, stepItemState]\n\n    return {\n      ns,\n      index,\n      lineStyle,\n      currentStatus,\n      isCenter,\n      isVertical,\n      isSimple,\n      isLast,\n      space,\n      style,\n      parent,\n      setIndex,\n      calcProgress,\n      updateStatus,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}