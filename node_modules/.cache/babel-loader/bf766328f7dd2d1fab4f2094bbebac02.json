{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { ref, watch } from 'vue';\n\nvar makeList = function makeList(total, method, methodFunc) {\n  var arr = [];\n  var disabledArr = method && methodFunc();\n\n  for (var i = 0; i < total; i++) {\n    arr[i] = disabledArr ? disabledArr.includes(i) : false;\n  }\n\n  return arr;\n};\n\nvar makeAvailableArr = function makeAvailableArr(list) {\n  return list.map(function (_, index) {\n    return !_ ? index : _;\n  }).filter(function (_) {\n    return _ !== true;\n  });\n};\n\nvar getTimeLists = function getTimeLists(disabledHours, disabledMinutes, disabledSeconds) {\n  var getHoursList = function getHoursList(role, compare) {\n    return makeList(24, disabledHours, function () {\n      return disabledHours(role, compare);\n    });\n  };\n\n  var getMinutesList = function getMinutesList(hour, role, compare) {\n    return makeList(60, disabledMinutes, function () {\n      return disabledMinutes(hour, role, compare);\n    });\n  };\n\n  var getSecondsList = function getSecondsList(hour, minute, role, compare) {\n    return makeList(60, disabledSeconds, function () {\n      return disabledSeconds(hour, minute, role, compare);\n    });\n  };\n\n  return {\n    getHoursList: getHoursList,\n    getMinutesList: getMinutesList,\n    getSecondsList: getSecondsList\n  };\n};\n\nvar getAvailableArrs = function getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds) {\n  var _getTimeLists = getTimeLists(disabledHours, disabledMinutes, disabledSeconds),\n      getHoursList = _getTimeLists.getHoursList,\n      getMinutesList = _getTimeLists.getMinutesList,\n      getSecondsList = _getTimeLists.getSecondsList;\n\n  var getAvailableHours = function getAvailableHours(role, compare) {\n    return makeAvailableArr(getHoursList(role, compare));\n  };\n\n  var getAvailableMinutes = function getAvailableMinutes(hour, role, compare) {\n    return makeAvailableArr(getMinutesList(hour, role, compare));\n  };\n\n  var getAvailableSeconds = function getAvailableSeconds(hour, minute, role, compare) {\n    return makeAvailableArr(getSecondsList(hour, minute, role, compare));\n  };\n\n  return {\n    getAvailableHours: getAvailableHours,\n    getAvailableMinutes: getAvailableMinutes,\n    getAvailableSeconds: getAvailableSeconds\n  };\n};\n\nvar useOldValue = function useOldValue(props) {\n  var oldValue = ref(props.parsedValue);\n  watch(function () {\n    return props.visible;\n  }, function (val) {\n    if (!val) {\n      oldValue.value = props.parsedValue;\n    }\n  });\n  return oldValue;\n};\n\nexport { getAvailableArrs, getTimeLists, useOldValue };","map":{"version":3,"mappings":"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","names":["makeList","total","method","methodFunc","arr","disabledArr","i","includes","makeAvailableArr","list","map","_","index","filter","getTimeLists","disabledHours","disabledMinutes","disabledSeconds","getHoursList","role","compare","getMinutesList","hour","getSecondsList","minute","getAvailableArrs","getAvailableHours","getAvailableMinutes","getAvailableSeconds","useOldValue","props","oldValue","ref","parsedValue","watch","visible","val","value"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/useTimePicker.ts"],"sourcesContent":["import { ref, watch } from 'vue'\n\nimport type { Dayjs } from 'dayjs'\n\nconst makeList = (total, method, methodFunc) => {\n  const arr = []\n  const disabledArr = method && methodFunc()\n  for (let i = 0; i < total; i++) {\n    arr[i] = disabledArr ? disabledArr.includes(i) : false\n  }\n  return arr\n}\n\nconst makeAvailableArr = (list) => {\n  return list.map((_, index) => (!_ ? index : _)).filter((_) => _ !== true)\n}\n\nexport const getTimeLists = (\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds\n) => {\n  const getHoursList = (role, compare?) => {\n    return makeList(24, disabledHours, () => disabledHours(role, compare))\n  }\n\n  const getMinutesList = (hour, role, compare?) => {\n    return makeList(60, disabledMinutes, () =>\n      disabledMinutes(hour, role, compare)\n    )\n  }\n\n  const getSecondsList = (hour, minute, role, compare?) => {\n    return makeList(60, disabledSeconds, () =>\n      disabledSeconds(hour, minute, role, compare)\n    )\n  }\n\n  return {\n    getHoursList,\n    getMinutesList,\n    getSecondsList,\n  }\n}\n\nexport const getAvailableArrs = (\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds\n) => {\n  const { getHoursList, getMinutesList, getSecondsList } = getTimeLists(\n    disabledHours,\n    disabledMinutes,\n    disabledSeconds\n  )\n\n  const getAvailableHours = (role, compare?) => {\n    return makeAvailableArr(getHoursList(role, compare))\n  }\n\n  const getAvailableMinutes = (hour, role, compare?) => {\n    return makeAvailableArr(getMinutesList(hour, role, compare))\n  }\n\n  const getAvailableSeconds = (hour, minute, role, compare?) => {\n    return makeAvailableArr(getSecondsList(hour, minute, role, compare))\n  }\n\n  return {\n    getAvailableHours,\n    getAvailableMinutes,\n    getAvailableSeconds,\n  }\n}\n\nexport const useOldValue = (props: {\n  parsedValue?: string | Dayjs | Dayjs[]\n  visible: boolean\n}) => {\n  const oldValue = ref(props.parsedValue)\n\n  watch(\n    () => props.visible,\n    (val) => {\n      if (!val) {\n        oldValue.value = props.parsedValue\n      }\n    }\n  )\n\n  return oldValue\n}\n"]},"metadata":{},"sourceType":"module"}