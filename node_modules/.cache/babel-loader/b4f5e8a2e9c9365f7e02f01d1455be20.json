{"ast":null,"code":"import _classCallCheck from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport { ref, isRef, nextTick } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport { parseHeight } from './util.mjs';\nimport { hasOwn } from '@vue/shared';\n\nvar TableLayout = /*#__PURE__*/function () {\n  function TableLayout(options) {\n    _classCallCheck(this, TableLayout);\n\n    this.observers = [];\n    this.table = null;\n    this.store = null;\n    this.columns = [];\n    this.fit = true;\n    this.showHeader = true;\n    this.height = ref(null);\n    this.scrollX = ref(false);\n    this.scrollY = ref(false);\n    this.bodyWidth = ref(null);\n    this.fixedWidth = ref(null);\n    this.rightFixedWidth = ref(null);\n    this.tableHeight = ref(null);\n    this.headerHeight = ref(44);\n    this.appendHeight = ref(0);\n    this.footerHeight = ref(44);\n    this.viewportHeight = ref(null);\n    this.bodyHeight = ref(null);\n    this.bodyScrollHeight = ref(0);\n    this.fixedBodyHeight = ref(null);\n    this.gutterWidth = 0;\n\n    for (var name in options) {\n      if (hasOwn(options, name)) {\n        if (isRef(this[name])) {\n          this[name].value = options[name];\n        } else {\n          this[name] = options[name];\n        }\n      }\n    }\n\n    if (!this.table) {\n      throw new Error(\"Table is required for Table Layout\");\n    }\n\n    if (!this.store) {\n      throw new Error(\"Store is required for Table Layout\");\n    }\n  }\n\n  _createClass(TableLayout, [{\n    key: \"updateScrollY\",\n    value: function updateScrollY() {\n      var height = this.height.value;\n      if (height === null) return false;\n      var bodyWrapper = this.table.refs.bodyWrapper;\n\n      if (this.table.vnode.el && bodyWrapper) {\n        var scrollY = true;\n        var prevScrollY = this.scrollY.value;\n\n        if (this.bodyHeight.value === null) {\n          scrollY = false;\n        } else {\n          scrollY = bodyWrapper.scrollHeight > this.bodyHeight.value;\n        }\n\n        this.scrollY.value = scrollY;\n        return prevScrollY !== scrollY;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"setHeight\",\n    value: function setHeight(value) {\n      var _this = this;\n\n      var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"height\";\n      if (!isClient) return;\n      var el = this.table.vnode.el;\n      value = parseHeight(value);\n      this.height.value = Number(value);\n      if (!el && (value || value === 0)) return nextTick(function () {\n        return _this.setHeight(value, prop);\n      });\n\n      if (typeof value === \"number\") {\n        el.style[prop] = \"\".concat(value, \"px\");\n        this.updateElsHeight();\n      } else if (typeof value === \"string\") {\n        el.style[prop] = value;\n        this.updateElsHeight();\n      }\n    }\n  }, {\n    key: \"setMaxHeight\",\n    value: function setMaxHeight(value) {\n      this.setHeight(value, \"max-height\");\n    }\n  }, {\n    key: \"getFlattenColumns\",\n    value: function getFlattenColumns() {\n      var flattenColumns = [];\n      var columns = this.table.store.states.columns.value;\n      columns.forEach(function (column) {\n        if (column.isColumnGroup) {\n          flattenColumns.push.apply(flattenColumns, column.columns);\n        } else {\n          flattenColumns.push(column);\n        }\n      });\n      return flattenColumns;\n    }\n  }, {\n    key: \"updateElsHeight\",\n    value: function updateElsHeight() {\n      var _this2 = this;\n\n      var _a, _b;\n\n      if (!this.table.$ready) return nextTick(function () {\n        return _this2.updateElsHeight();\n      });\n      var _this$table$refs = this.table.refs,\n          tableWrapper = _this$table$refs.tableWrapper,\n          headerWrapper = _this$table$refs.headerWrapper,\n          appendWrapper = _this$table$refs.appendWrapper,\n          footerWrapper = _this$table$refs.footerWrapper,\n          tableHeader = _this$table$refs.tableHeader,\n          tableBody = _this$table$refs.tableBody;\n\n      if (tableWrapper && tableWrapper.style.display === \"none\") {\n        return;\n      }\n\n      var tableLayout = this.table.props.tableLayout;\n      this.appendHeight.value = appendWrapper ? appendWrapper.offsetHeight : 0;\n\n      if (this.showHeader && !headerWrapper && tableLayout === \"fixed\") {\n        return;\n      }\n\n      var headerTrElm = tableHeader ? tableHeader : null;\n      var noneHeader = this.headerDisplayNone(headerTrElm);\n      var headerWrapperOffsetHeight = (headerWrapper == null ? void 0 : headerWrapper.offsetHeight) || 0;\n      var headerHeight = this.headerHeight.value = !this.showHeader ? 0 : headerWrapperOffsetHeight;\n\n      if (this.showHeader && !noneHeader && headerWrapperOffsetHeight > 0 && (this.table.store.states.columns.value || []).length > 0 && headerHeight < 2) {\n        return nextTick(function () {\n          return _this2.updateElsHeight();\n        });\n      }\n\n      var tableHeight = this.tableHeight.value = (_b = (_a = this.table) == null ? void 0 : _a.vnode.el) == null ? void 0 : _b.clientHeight;\n      var footerHeight = this.footerHeight.value = footerWrapper ? footerWrapper.offsetHeight : 0;\n\n      if (this.height.value !== null) {\n        if (this.bodyHeight.value === null) {\n          requestAnimationFrame(function () {\n            return _this2.updateElsHeight();\n          });\n        }\n\n        this.bodyHeight.value = tableHeight - headerHeight - footerHeight + (footerWrapper ? 1 : 0);\n        this.bodyScrollHeight.value = tableBody == null ? void 0 : tableBody.scrollHeight;\n      }\n\n      this.fixedBodyHeight.value = this.scrollX.value ? this.bodyHeight.value - this.gutterWidth : this.bodyHeight.value;\n      this.viewportHeight.value = this.scrollX.value ? tableHeight - this.gutterWidth : tableHeight;\n      this.updateScrollY();\n      this.notifyObservers(\"scrollable\");\n    }\n  }, {\n    key: \"headerDisplayNone\",\n    value: function headerDisplayNone(elm) {\n      if (!elm) return true;\n      var headerChild = elm;\n\n      while (headerChild.tagName !== \"DIV\") {\n        if (getComputedStyle(headerChild).display === \"none\") {\n          return true;\n        }\n\n        headerChild = headerChild.parentElement;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"updateColumnsWidth\",\n    value: function updateColumnsWidth() {\n      if (!isClient) return;\n      var fit = this.fit;\n      var bodyWidth = this.table.vnode.el.clientWidth;\n      var bodyMinWidth = 0;\n      var flattenColumns = this.getFlattenColumns();\n      var flexColumns = flattenColumns.filter(function (column) {\n        return typeof column.width !== \"number\";\n      });\n      flattenColumns.forEach(function (column) {\n        if (typeof column.width === \"number\" && column.realWidth) column.realWidth = null;\n      });\n\n      if (flexColumns.length > 0 && fit) {\n        flattenColumns.forEach(function (column) {\n          bodyMinWidth += Number(column.width || column.minWidth || 80);\n        });\n\n        if (bodyMinWidth <= bodyWidth) {\n          this.scrollX.value = false;\n          var totalFlexWidth = bodyWidth - bodyMinWidth;\n\n          if (flexColumns.length === 1) {\n            flexColumns[0].realWidth = Number(flexColumns[0].minWidth || 80) + totalFlexWidth;\n          } else {\n            var allColumnsWidth = flexColumns.reduce(function (prev, column) {\n              return prev + Number(column.minWidth || 80);\n            }, 0);\n            var flexWidthPerPixel = totalFlexWidth / allColumnsWidth;\n            var noneFirstWidth = 0;\n            flexColumns.forEach(function (column, index) {\n              if (index === 0) return;\n              var flexWidth = Math.floor(Number(column.minWidth || 80) * flexWidthPerPixel);\n              noneFirstWidth += flexWidth;\n              column.realWidth = Number(column.minWidth || 80) + flexWidth;\n            });\n            flexColumns[0].realWidth = Number(flexColumns[0].minWidth || 80) + totalFlexWidth - noneFirstWidth;\n          }\n        } else {\n          this.scrollX.value = true;\n          flexColumns.forEach(function (column) {\n            column.realWidth = Number(column.minWidth);\n          });\n        }\n\n        this.bodyWidth.value = Math.max(bodyMinWidth, bodyWidth);\n        this.table.state.resizeState.value.width = this.bodyWidth.value;\n      } else {\n        flattenColumns.forEach(function (column) {\n          if (!column.width && !column.minWidth) {\n            column.realWidth = 80;\n          } else {\n            column.realWidth = Number(column.width || column.minWidth);\n          }\n\n          bodyMinWidth += column.realWidth;\n        });\n        this.scrollX.value = bodyMinWidth > bodyWidth;\n        this.bodyWidth.value = bodyMinWidth;\n      }\n\n      var fixedColumns = this.store.states.fixedColumns.value;\n\n      if (fixedColumns.length > 0) {\n        var fixedWidth = 0;\n        fixedColumns.forEach(function (column) {\n          fixedWidth += Number(column.realWidth || column.width);\n        });\n        this.fixedWidth.value = fixedWidth;\n      }\n\n      var rightFixedColumns = this.store.states.rightFixedColumns.value;\n\n      if (rightFixedColumns.length > 0) {\n        var rightFixedWidth = 0;\n        rightFixedColumns.forEach(function (column) {\n          rightFixedWidth += Number(column.realWidth || column.width);\n        });\n        this.rightFixedWidth.value = rightFixedWidth;\n      }\n\n      this.notifyObservers(\"columns\");\n    }\n  }, {\n    key: \"addObserver\",\n    value: function addObserver(observer) {\n      this.observers.push(observer);\n    }\n  }, {\n    key: \"removeObserver\",\n    value: function removeObserver(observer) {\n      var index = this.observers.indexOf(observer);\n\n      if (index !== -1) {\n        this.observers.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"notifyObservers\",\n    value: function notifyObservers(event) {\n      var _this3 = this;\n\n      var observers = this.observers;\n      observers.forEach(function (observer) {\n        var _a, _b;\n\n        switch (event) {\n          case \"columns\":\n            (_a = observer.state) == null ? void 0 : _a.onColumnsChange(_this3);\n            break;\n\n          case \"scrollable\":\n            (_b = observer.state) == null ? void 0 : _b.onScrollableChange(_this3);\n            break;\n\n          default:\n            throw new Error(\"Table Layout don't have event \".concat(event, \".\"));\n        }\n      });\n    }\n  }]);\n\n  return TableLayout;\n}();\n\nexport { TableLayout as default };","map":{"version":3,"mappings":"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","names":["TableLayout","options","observers","table","store","columns","fit","showHeader","height","ref","scrollX","scrollY","bodyWidth","fixedWidth","rightFixedWidth","tableHeight","headerHeight","appendHeight","footerHeight","viewportHeight","bodyHeight","bodyScrollHeight","fixedBodyHeight","gutterWidth","name","hasOwn","isRef","value","Error","bodyWrapper","refs","vnode","el","prevScrollY","scrollHeight","prop","isClient","parseHeight","Number","nextTick","setHeight","style","updateElsHeight","flattenColumns","states","forEach","column","isColumnGroup","push","apply","_a","_b","$ready","tableWrapper","headerWrapper","appendWrapper","footerWrapper","tableHeader","tableBody","display","tableLayout","props","offsetHeight","headerTrElm","noneHeader","headerDisplayNone","headerWrapperOffsetHeight","length","clientHeight","requestAnimationFrame","updateScrollY","notifyObservers","elm","headerChild","tagName","getComputedStyle","parentElement","clientWidth","bodyMinWidth","getFlattenColumns","flexColumns","filter","width","realWidth","minWidth","totalFlexWidth","allColumnsWidth","reduce","prev","flexWidthPerPixel","noneFirstWidth","index","flexWidth","Math","floor","max","state","resizeState","fixedColumns","rightFixedColumns","observer","indexOf","splice","event","onColumnsChange","onScrollableChange"],"sources":["../../../../../../packages/components/table/src/table-layout.ts"],"sourcesContent":["import { isRef, nextTick, ref } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { hasOwn } from '@element-plus/utils'\nimport { parseHeight } from './util'\nimport type { Ref } from 'vue'\n\nimport type { TableColumnCtx } from './table-column/defaults'\nimport type { TableHeader } from './table-header'\nimport type { Table } from './table/defaults'\nimport type { Store } from './store'\nclass TableLayout<T> {\n  observers: TableHeader[]\n  table: Table<T>\n  store: Store<T>\n  columns: TableColumnCtx<T>[]\n  fit: boolean\n  showHeader: boolean\n\n  height: Ref<null | number>\n  scrollX: Ref<boolean>\n  scrollY: Ref<boolean>\n  bodyWidth: Ref<null | number>\n  fixedWidth: Ref<null | number>\n  rightFixedWidth: Ref<null | number>\n  tableHeight: Ref<null | number>\n  headerHeight: Ref<null | number> // Table Header Height\n  appendHeight: Ref<null | number> // Append Slot Height\n  footerHeight: Ref<null | number> // Table Footer Height\n  viewportHeight: Ref<null | number> // Table Height - Scroll Bar Height\n  bodyHeight: Ref<null | number> // Table Height - Table Header Height\n  bodyScrollHeight: Ref<number>\n  fixedBodyHeight: Ref<null | number> // Table Height - Table Header Height - Scroll Bar Height\n  gutterWidth: number\n  constructor(options: Record<string, any>) {\n    this.observers = []\n    this.table = null\n    this.store = null\n    this.columns = []\n    this.fit = true\n    this.showHeader = true\n    this.height = ref(null)\n    this.scrollX = ref(false)\n    this.scrollY = ref(false)\n    this.bodyWidth = ref(null)\n    this.fixedWidth = ref(null)\n    this.rightFixedWidth = ref(null)\n    this.tableHeight = ref(null)\n    this.headerHeight = ref(44)\n    this.appendHeight = ref(0)\n    this.footerHeight = ref(44)\n    this.viewportHeight = ref(null)\n    this.bodyHeight = ref(null)\n    this.bodyScrollHeight = ref(0)\n    this.fixedBodyHeight = ref(null)\n    this.gutterWidth = 0\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        if (isRef(this[name])) {\n          this[name as string].value = options[name]\n        } else {\n          this[name as string] = options[name]\n        }\n      }\n    }\n    if (!this.table) {\n      throw new Error('Table is required for Table Layout')\n    }\n    if (!this.store) {\n      throw new Error('Store is required for Table Layout')\n    }\n  }\n\n  updateScrollY() {\n    const height = this.height.value\n    /**\n     * When the height is not initialized, it is null.\n     * After the table is initialized, when the height is not configured, the height is 0.\n     */\n    if (height === null) return false\n    const bodyWrapper = this.table.refs.bodyWrapper as HTMLElement\n    if (this.table.vnode.el && bodyWrapper) {\n      let scrollY = true\n      const prevScrollY = this.scrollY.value\n      /**\n       * When bodyHeight has no value,\n       * it means that the table height is not set,\n       * and the scroll bar will never appear\n       */\n      if (this.bodyHeight.value === null) {\n        scrollY = false\n      } else {\n        scrollY = bodyWrapper.scrollHeight > this.bodyHeight.value\n      }\n      this.scrollY.value = scrollY\n      return prevScrollY !== scrollY\n    }\n    return false\n  }\n\n  setHeight(value: string | number, prop = 'height') {\n    if (!isClient) return\n    const el = this.table.vnode.el\n    value = parseHeight(value)\n    this.height.value = Number(value)\n\n    if (!el && (value || value === 0))\n      return nextTick(() => this.setHeight(value, prop))\n\n    if (typeof value === 'number') {\n      el.style[prop] = `${value}px`\n      this.updateElsHeight()\n    } else if (typeof value === 'string') {\n      el.style[prop] = value\n      this.updateElsHeight()\n    }\n  }\n\n  setMaxHeight(value: string | number) {\n    this.setHeight(value, 'max-height')\n  }\n\n  getFlattenColumns(): TableColumnCtx<T>[] {\n    const flattenColumns = []\n    const columns = this.table.store.states.columns.value\n    columns.forEach((column) => {\n      if (column.isColumnGroup) {\n        // eslint-disable-next-line prefer-spread\n        flattenColumns.push.apply(flattenColumns, column.columns)\n      } else {\n        flattenColumns.push(column)\n      }\n    })\n\n    return flattenColumns\n  }\n\n  updateElsHeight() {\n    if (!this.table.$ready) return nextTick(() => this.updateElsHeight())\n    const {\n      tableWrapper,\n      headerWrapper,\n      appendWrapper,\n      footerWrapper,\n      tableHeader,\n      tableBody,\n    } = this.table.refs\n    if (tableWrapper && tableWrapper.style.display === 'none') {\n      // avoid v-show\n      return\n    }\n    const { tableLayout } = this.table.props\n    this.appendHeight.value = appendWrapper ? appendWrapper.offsetHeight : 0\n    if (this.showHeader && !headerWrapper && tableLayout === 'fixed') {\n      return\n    }\n    const headerTrElm: HTMLElement = tableHeader ? tableHeader : null\n    const noneHeader = this.headerDisplayNone(headerTrElm)\n    const headerWrapperOffsetHeight = headerWrapper?.offsetHeight || 0\n    const headerHeight = (this.headerHeight.value = !this.showHeader\n      ? 0\n      : headerWrapperOffsetHeight)\n    if (\n      this.showHeader &&\n      !noneHeader &&\n      headerWrapperOffsetHeight > 0 &&\n      (this.table.store.states.columns.value || []).length > 0 &&\n      headerHeight < 2\n    ) {\n      return nextTick(() => this.updateElsHeight())\n    }\n    const tableHeight = (this.tableHeight.value =\n      this.table?.vnode.el?.clientHeight)\n    const footerHeight = (this.footerHeight.value = footerWrapper\n      ? footerWrapper.offsetHeight\n      : 0)\n    if (this.height.value !== null) {\n      if (this.bodyHeight.value === null) {\n        requestAnimationFrame(() => this.updateElsHeight())\n      }\n      this.bodyHeight.value =\n        tableHeight - headerHeight - footerHeight + (footerWrapper ? 1 : 0)\n      this.bodyScrollHeight.value = tableBody?.scrollHeight\n    }\n    this.fixedBodyHeight.value = this.scrollX.value\n      ? this.bodyHeight.value - this.gutterWidth\n      : this.bodyHeight.value\n\n    this.viewportHeight.value = this.scrollX.value\n      ? tableHeight - this.gutterWidth\n      : tableHeight\n\n    this.updateScrollY()\n    this.notifyObservers('scrollable')\n  }\n\n  headerDisplayNone(elm: HTMLElement) {\n    if (!elm) return true\n    let headerChild = elm\n    while (headerChild.tagName !== 'DIV') {\n      if (getComputedStyle(headerChild).display === 'none') {\n        return true\n      }\n      headerChild = headerChild.parentElement\n    }\n    return false\n  }\n\n  updateColumnsWidth() {\n    if (!isClient) return\n    const fit = this.fit\n    const bodyWidth = this.table.vnode.el.clientWidth\n    let bodyMinWidth = 0\n\n    const flattenColumns = this.getFlattenColumns()\n    const flexColumns = flattenColumns.filter(\n      (column) => typeof column.width !== 'number'\n    )\n    flattenColumns.forEach((column) => {\n      // Clean those columns whose width changed from flex to unflex\n      if (typeof column.width === 'number' && column.realWidth)\n        column.realWidth = null\n    })\n    if (flexColumns.length > 0 && fit) {\n      flattenColumns.forEach((column) => {\n        bodyMinWidth += Number(column.width || column.minWidth || 80)\n      })\n      if (bodyMinWidth <= bodyWidth) {\n        // DON'T HAVE SCROLL BAR\n        this.scrollX.value = false\n\n        const totalFlexWidth = bodyWidth - bodyMinWidth\n\n        if (flexColumns.length === 1) {\n          flexColumns[0].realWidth =\n            Number(flexColumns[0].minWidth || 80) + totalFlexWidth\n        } else {\n          const allColumnsWidth = flexColumns.reduce(\n            (prev, column) => prev + Number(column.minWidth || 80),\n            0\n          )\n          const flexWidthPerPixel = totalFlexWidth / allColumnsWidth\n          let noneFirstWidth = 0\n\n          flexColumns.forEach((column, index) => {\n            if (index === 0) return\n            const flexWidth = Math.floor(\n              Number(column.minWidth || 80) * flexWidthPerPixel\n            )\n            noneFirstWidth += flexWidth\n            column.realWidth = Number(column.minWidth || 80) + flexWidth\n          })\n\n          flexColumns[0].realWidth =\n            Number(flexColumns[0].minWidth || 80) +\n            totalFlexWidth -\n            noneFirstWidth\n        }\n      } else {\n        // HAVE HORIZONTAL SCROLL BAR\n        this.scrollX.value = true\n        flexColumns.forEach((column) => {\n          column.realWidth = Number(column.minWidth)\n        })\n      }\n\n      this.bodyWidth.value = Math.max(bodyMinWidth, bodyWidth)\n      this.table.state.resizeState.value.width = this.bodyWidth.value\n    } else {\n      flattenColumns.forEach((column) => {\n        if (!column.width && !column.minWidth) {\n          column.realWidth = 80\n        } else {\n          column.realWidth = Number(column.width || column.minWidth)\n        }\n        bodyMinWidth += column.realWidth\n      })\n      this.scrollX.value = bodyMinWidth > bodyWidth\n\n      this.bodyWidth.value = bodyMinWidth\n    }\n\n    const fixedColumns = this.store.states.fixedColumns.value\n\n    if (fixedColumns.length > 0) {\n      let fixedWidth = 0\n      fixedColumns.forEach((column) => {\n        fixedWidth += Number(column.realWidth || column.width)\n      })\n\n      this.fixedWidth.value = fixedWidth\n    }\n\n    const rightFixedColumns = this.store.states.rightFixedColumns.value\n    if (rightFixedColumns.length > 0) {\n      let rightFixedWidth = 0\n      rightFixedColumns.forEach((column) => {\n        rightFixedWidth += Number(column.realWidth || column.width)\n      })\n\n      this.rightFixedWidth.value = rightFixedWidth\n    }\n    this.notifyObservers('columns')\n  }\n\n  addObserver(observer: TableHeader) {\n    this.observers.push(observer)\n  }\n\n  removeObserver(observer: TableHeader) {\n    const index = this.observers.indexOf(observer)\n    if (index !== -1) {\n      this.observers.splice(index, 1)\n    }\n  }\n\n  notifyObservers(event: string) {\n    const observers = this.observers\n    observers.forEach((observer) => {\n      switch (event) {\n        case 'columns':\n          observer.state?.onColumnsChange(this)\n          break\n        case 'scrollable':\n          observer.state?.onScrollableChange(this)\n          break\n        default:\n          throw new Error(`Table Layout don't have event ${event}.`)\n      }\n    })\n  }\n}\n\nexport default TableLayout\n"]},"metadata":{},"sourceType":"module"}