{"ast":null,"code":"import '../../../../utils/index.mjs';\nimport { cAF, rAF } from '../../../../utils/raf.mjs';\nimport { isFirefox } from '../../../../utils/browser.mjs';\n\nvar useGridWheel = function useGridWheel(_ref, onWheelDelta) {\n  var atXEndEdge = _ref.atXEndEdge,\n      atXStartEdge = _ref.atXStartEdge,\n      atYEndEdge = _ref.atYEndEdge,\n      atYStartEdge = _ref.atYStartEdge;\n  var frameHandle = null;\n  var xOffset = 0;\n  var yOffset = 0;\n\n  var hasReachedEdge = function hasReachedEdge(x, y) {\n    var xEdgeReached = x < 0 && atXStartEdge.value || x > 0 && atXEndEdge.value;\n    var yEdgeReached = y < 0 && atYStartEdge.value || y > 0 && atYEndEdge.value;\n    return xEdgeReached && yEdgeReached;\n  };\n\n  var onWheel = function onWheel(e) {\n    cAF(frameHandle);\n    var x = e.deltaX;\n    var y = e.deltaY;\n    if (hasReachedEdge(xOffset, yOffset) && hasReachedEdge(xOffset + x, yOffset + y)) return;\n    xOffset += x;\n    yOffset += y;\n\n    if (!isFirefox()) {\n      e.preventDefault();\n    }\n\n    frameHandle = rAF(function () {\n      onWheelDelta(xOffset, yOffset);\n      xOffset = 0;\n      yOffset = 0;\n    });\n  };\n\n  return {\n    hasReachedEdge: hasReachedEdge,\n    onWheel: onWheel\n  };\n};\n\nexport { useGridWheel };","map":{"version":3,"mappings":";;;;AACY,IAACA,YAAY,GAAG,SAAfA,YAAe,OAAyDC,YAAzD,EAA0E;AAAA,MAAvEC,UAAuE,QAAvEA,UAAuE;AAAA,MAA3DC,YAA2D,QAA3DA,YAA2D;AAAA,MAA7CC,UAA6C,QAA7CA,UAA6C;AAAA,MAAjCC,YAAiC,QAAjCA,YAAiC;AACpG,MAAIC,WAAW,GAAG,IAAlB;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,OAAO,GAAG,CAAd;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAIC,CAAJ,EAAU;AAC/B,QAAMC,YAAY,GAAGF,CAAC,GAAG,CAAJ,IAASP,YAAY,CAACU,KAAtB,IAA+BH,CAAC,GAAG,CAAJ,IAASR,UAAU,CAACW,KAAxE;AACA,QAAMC,YAAY,GAAGH,CAAC,GAAG,CAAJ,IAASN,YAAY,CAACQ,KAAtB,IAA+BF,CAAC,GAAG,CAAJ,IAASP,UAAU,CAACS,KAAxE;AACA,WAAOD,YAAY,IAAIE,YAAvB;AACD,GAJD;;AAKA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAO;AACrBC,OAAG,CAACX,WAAD,CAAH;AACA,QAAMI,CAAC,GAAGM,CAAC,CAACE,MAAZ;AACA,QAAMP,CAAC,GAAGK,CAAC,CAACG,MAAZ;AACA,QAAIV,cAAc,CAACF,OAAD,EAAUC,OAAV,CAAd,IAAoCC,cAAc,CAACF,OAAO,GAAGG,CAAX,EAAcF,OAAO,GAAGG,CAAxB,CAAtD,EACE;AACFJ,WAAO,IAAIG,CAAX;AACAF,WAAO,IAAIG,CAAX;;AACA,QAAI,CAACS,SAAS,EAAd,EAAkB;AAChBJ,OAAC,CAACK,cAAF;AACD;;AACDf,eAAW,GAAGgB,GAAG,CAAC,YAAM;AACtBrB,kBAAY,CAACM,OAAD,EAAUC,OAAV,CAAZ;AACAD,aAAO,GAAG,CAAV;AACAC,aAAO,GAAG,CAAV;AACD,KAJgB,CAAjB;AAKD,GAhBD;;AAiBA,SAAO;AACLC,kBAAc,EAAdA,cADK;AAELM,WAAO,EAAPA;AAFK,GAAP;AAIF,CA9BY","names":["useGridWheel","onWheelDelta","atXEndEdge","atXStartEdge","atYEndEdge","atYStartEdge","frameHandle","xOffset","yOffset","hasReachedEdge","x","y","xEdgeReached","value","yEdgeReached","onWheel","e","cAF","deltaX","deltaY","isFirefox","preventDefault","rAF"],"sources":["../../../../../../../packages/components/virtual-list/src/hooks/use-grid-wheel.ts"],"sourcesContent":["import { cAF, isFirefox, rAF } from '@element-plus/utils'\n\nimport type { ComputedRef } from 'vue'\n\ninterface GridWheelState {\n  atXStartEdge: ComputedRef<boolean>\n  atXEndEdge: ComputedRef<boolean>\n  atYStartEdge: ComputedRef<boolean>\n  atYEndEdge: ComputedRef<boolean>\n}\n\ntype GridWheelHandler = (x: number, y: number) => void\n\nexport const useGridWheel = (\n  { atXEndEdge, atXStartEdge, atYEndEdge, atYStartEdge }: GridWheelState,\n  onWheelDelta: GridWheelHandler\n) => {\n  let frameHandle: number | null = null\n  let xOffset = 0\n  let yOffset = 0\n\n  const hasReachedEdge = (x: number, y: number) => {\n    const xEdgeReached =\n      (x < 0 && atXStartEdge.value) || (x > 0 && atXEndEdge.value)\n    const yEdgeReached =\n      (y < 0 && atYStartEdge.value) || (y > 0 && atYEndEdge.value)\n    return xEdgeReached && yEdgeReached\n  }\n\n  const onWheel = (e: WheelEvent) => {\n    cAF(frameHandle!)\n\n    const x = e.deltaX\n    const y = e.deltaY\n\n    if (\n      hasReachedEdge(xOffset, yOffset) &&\n      hasReachedEdge(xOffset + x, yOffset + y)\n    )\n      return\n\n    xOffset += x\n    yOffset += y\n\n    if (!isFirefox()) {\n      e.preventDefault()\n    }\n\n    frameHandle = rAF(() => {\n      onWheelDelta(xOffset, yOffset)\n      xOffset = 0\n      yOffset = 0\n    })\n  }\n\n  return {\n    hasReachedEdge,\n    onWheel,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}