{"ast":null,"code":"import _classCallCheck from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport { isFunction, capitalize } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport { isEmpty, isUndefined } from '../../../utils/types.mjs';\n\nvar ExpandTrigger = /* @__PURE__ */function (ExpandTrigger2) {\n  ExpandTrigger2[\"CLICK\"] = \"click\";\n  ExpandTrigger2[\"HOVER\"] = \"hover\";\n  return ExpandTrigger2;\n}(ExpandTrigger || {});\n\nvar uid = 0;\n\nvar calculatePathNodes = function calculatePathNodes(node) {\n  var nodes = [node];\n  var parent = node.parent;\n\n  while (parent) {\n    nodes.unshift(parent);\n    parent = parent.parent;\n  }\n\n  return nodes;\n};\n\nvar Node = /*#__PURE__*/function () {\n  function Node(data, config, parent) {\n    var _this = this;\n\n    var root = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    _classCallCheck(this, Node);\n\n    this.data = data;\n    this.config = config;\n    this.parent = parent;\n    this.root = root;\n    this.uid = uid++;\n    this.checked = false;\n    this.indeterminate = false;\n    this.loading = false;\n    var valueKey = config.value,\n        labelKey = config.label,\n        childrenKey = config.children;\n    var childrenData = data[childrenKey];\n    var pathNodes = calculatePathNodes(this);\n    this.level = root ? 0 : parent ? parent.level + 1 : 1;\n    this.value = data[valueKey];\n    this.label = data[labelKey];\n    this.pathNodes = pathNodes;\n    this.pathValues = pathNodes.map(function (node) {\n      return node.value;\n    });\n    this.pathLabels = pathNodes.map(function (node) {\n      return node.label;\n    });\n    this.childrenData = childrenData;\n    this.children = (childrenData || []).map(function (child) {\n      return new Node(child, config, _this);\n    });\n    this.loaded = !config.lazy || this.isLeaf || !isEmpty(childrenData);\n  }\n\n  _createClass(Node, [{\n    key: \"isDisabled\",\n    get: function get() {\n      var data = this.data,\n          parent = this.parent,\n          config = this.config;\n      var disabled = config.disabled,\n          checkStrictly = config.checkStrictly;\n      var isDisabled = isFunction(disabled) ? disabled(data, this) : !!data[disabled];\n      return isDisabled || !checkStrictly && (parent == null ? void 0 : parent.isDisabled);\n    }\n  }, {\n    key: \"isLeaf\",\n    get: function get() {\n      var data = this.data,\n          config = this.config,\n          childrenData = this.childrenData,\n          loaded = this.loaded;\n      var lazy = config.lazy,\n          leaf = config.leaf;\n      var isLeaf = isFunction(leaf) ? leaf(data, this) : data[leaf];\n      return isUndefined(isLeaf) ? lazy && !loaded ? false : !(Array.isArray(childrenData) && childrenData.length) : !!isLeaf;\n    }\n  }, {\n    key: \"valueByOption\",\n    get: function get() {\n      return this.config.emitPath ? this.pathValues : this.value;\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(childData) {\n      var childrenData = this.childrenData,\n          children = this.children;\n      var node = new Node(childData, this.config, this);\n\n      if (Array.isArray(childrenData)) {\n        childrenData.push(childData);\n      } else {\n        this.childrenData = [childData];\n      }\n\n      children.push(node);\n      return node;\n    }\n  }, {\n    key: \"calcText\",\n    value: function calcText(allLevels, separator) {\n      var text = allLevels ? this.pathLabels.join(separator) : this.label;\n      this.text = text;\n      return text;\n    }\n  }, {\n    key: \"broadcast\",\n    value: function broadcast(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var handlerName = \"onParent\".concat(capitalize(event));\n      this.children.forEach(function (child) {\n        if (child) {\n          child.broadcast.apply(child, [event].concat(args));\n          child[handlerName] && child[handlerName].apply(child, args);\n        }\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      var parent = this.parent;\n      var handlerName = \"onChild\".concat(capitalize(event));\n\n      if (parent) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        parent[handlerName] && parent[handlerName].apply(parent, args);\n        parent.emit.apply(parent, [event].concat(args));\n      }\n    }\n  }, {\n    key: \"onParentCheck\",\n    value: function onParentCheck(checked) {\n      if (!this.isDisabled) {\n        this.setCheckState(checked);\n      }\n    }\n  }, {\n    key: \"onChildCheck\",\n    value: function onChildCheck() {\n      var children = this.children;\n      var validChildren = children.filter(function (child) {\n        return !child.isDisabled;\n      });\n      var checked = validChildren.length ? validChildren.every(function (child) {\n        return child.checked;\n      }) : false;\n      this.setCheckState(checked);\n    }\n  }, {\n    key: \"setCheckState\",\n    value: function setCheckState(checked) {\n      var totalNum = this.children.length;\n      var checkedNum = this.children.reduce(function (c, p) {\n        var num = p.checked ? 1 : p.indeterminate ? 0.5 : 0;\n        return c + num;\n      }, 0);\n      this.checked = this.loaded && this.children.every(function (child) {\n        return child.loaded && child.checked;\n      }) && checked;\n      this.indeterminate = this.loaded && checkedNum !== totalNum && checkedNum > 0;\n    }\n  }, {\n    key: \"doCheck\",\n    value: function doCheck(checked) {\n      if (this.checked === checked) return;\n      var _this$config = this.config,\n          checkStrictly = _this$config.checkStrictly,\n          multiple = _this$config.multiple;\n\n      if (checkStrictly || !multiple) {\n        this.checked = checked;\n      } else {\n        this.broadcast(\"check\", checked);\n        this.setCheckState(checked);\n        this.emit(\"check\");\n      }\n    }\n  }]);\n\n  return Node;\n}();\n\nexport { ExpandTrigger, Node as default };","map":{"version":3,"mappings":"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","names":["ExpandTrigger","ExpandTrigger2","uid","calculatePathNodes","node","nodes","parent","unshift","Node","data","config","root","checked","indeterminate","loading","valueKey","value","labelKey","label","childrenKey","children","childrenData","pathNodes","level","pathValues","map","pathLabels","child","loaded","lazy","isLeaf","isEmpty","disabled","checkStrictly","isDisabled","isFunction","leaf","isUndefined","Array","isArray","length","emitPath","childData","push","allLevels","separator","text","join","event","args","handlerName","capitalize","forEach","broadcast","emit","setCheckState","validChildren","filter","every","totalNum","checkedNum","reduce","c","p","num","multiple"],"sources":["../../../../../../packages/components/cascader-panel/src/node.ts"],"sourcesContent":["import { isFunction } from '@vue/shared'\nimport { capitalize, isEmpty, isUndefined } from '@element-plus/utils'\nimport type { VNode } from 'vue'\n\nexport type CascaderNodeValue = string | number\nexport type CascaderNodePathValue = CascaderNodeValue[]\nexport type CascaderValue =\n  | CascaderNodeValue\n  | CascaderNodePathValue\n  | (CascaderNodeValue | CascaderNodePathValue)[]\nexport type CascaderConfig = Required<CascaderProps>\nexport enum ExpandTrigger {\n  CLICK = 'click',\n  HOVER = 'hover',\n}\nexport type isDisabled = (data: CascaderOption, node: Node) => boolean\nexport type isLeaf = (data: CascaderOption, node: Node) => boolean\nexport type Resolve = (dataList?: CascaderOption[]) => void\nexport type LazyLoad = (node: Node, resolve: Resolve) => void\nexport type RenderLabel = ({\n  node: Node,\n  data: CascaderOption,\n}) => VNode | VNode[]\nexport interface CascaderOption extends Record<string, unknown> {\n  label?: string\n  value?: CascaderNodeValue\n  children?: CascaderOption[]\n  disabled?: boolean\n  leaf?: boolean\n}\n\nexport interface CascaderProps {\n  expandTrigger?: ExpandTrigger\n  multiple?: boolean\n  checkStrictly?: boolean\n  emitPath?: boolean\n  lazy?: boolean\n  lazyLoad?: LazyLoad\n  value?: string\n  label?: string\n  children?: string\n  disabled?: string | isDisabled\n  leaf?: string | isLeaf\n  hoverThreshold?: number\n}\n\nexport type Nullable<T> = null | T\n\ntype ChildrenData = CascaderOption[] | undefined\n\nlet uid = 0\n\nconst calculatePathNodes = (node: Node) => {\n  const nodes = [node]\n  let { parent } = node\n\n  while (parent) {\n    nodes.unshift(parent)\n    parent = parent.parent\n  }\n\n  return nodes\n}\n\nclass Node {\n  readonly uid: number = uid++\n  readonly level: number\n  readonly value: CascaderNodeValue\n  readonly label: string\n  readonly pathNodes: Node[]\n  readonly pathValues: CascaderNodePathValue\n  readonly pathLabels: string[]\n\n  childrenData: ChildrenData\n  children: Node[]\n  text: string\n  loaded: boolean\n  checked = false\n  indeterminate = false\n  loading = false\n\n  constructor(\n    readonly data: Nullable<CascaderOption>,\n    readonly config: CascaderConfig,\n    readonly parent?: Node,\n    readonly root = false\n  ) {\n    const { value: valueKey, label: labelKey, children: childrenKey } = config\n\n    const childrenData = data[childrenKey] as ChildrenData\n    const pathNodes = calculatePathNodes(this)\n\n    this.level = root ? 0 : parent ? parent.level + 1 : 1\n    this.value = data[valueKey] as CascaderNodeValue\n    this.label = data[labelKey] as string\n    this.pathNodes = pathNodes\n    this.pathValues = pathNodes.map((node) => node.value)\n    this.pathLabels = pathNodes.map((node) => node.label)\n    this.childrenData = childrenData\n    this.children = (childrenData || []).map(\n      (child) => new Node(child, config, this)\n    )\n    this.loaded = !config.lazy || this.isLeaf || !isEmpty(childrenData)\n  }\n\n  get isDisabled(): boolean {\n    const { data, parent, config } = this\n    const { disabled, checkStrictly } = config\n    const isDisabled = isFunction(disabled)\n      ? disabled(data, this)\n      : !!data[disabled]\n    return isDisabled || (!checkStrictly && parent?.isDisabled)\n  }\n\n  get isLeaf(): boolean {\n    const { data, config, childrenData, loaded } = this\n    const { lazy, leaf } = config\n    const isLeaf = isFunction(leaf) ? leaf(data, this) : data[leaf]\n\n    return isUndefined(isLeaf)\n      ? lazy && !loaded\n        ? false\n        : !(Array.isArray(childrenData) && childrenData.length)\n      : !!isLeaf\n  }\n\n  get valueByOption() {\n    return this.config.emitPath ? this.pathValues : this.value\n  }\n\n  appendChild(childData: CascaderOption) {\n    const { childrenData, children } = this\n    const node = new Node(childData, this.config, this)\n\n    if (Array.isArray(childrenData)) {\n      childrenData.push(childData)\n    } else {\n      this.childrenData = [childData]\n    }\n\n    children.push(node)\n\n    return node\n  }\n\n  calcText(allLevels: boolean, separator: string) {\n    const text = allLevels ? this.pathLabels.join(separator) : this.label\n    this.text = text\n    return text\n  }\n\n  broadcast(event: string, ...args: unknown[]) {\n    const handlerName = `onParent${capitalize(event)}`\n    this.children.forEach((child) => {\n      if (child) {\n        // bottom up\n        child.broadcast(event, ...args)\n        child[handlerName] && child[handlerName](...args)\n      }\n    })\n  }\n\n  emit(event: string, ...args: unknown[]) {\n    const { parent } = this\n    const handlerName = `onChild${capitalize(event)}`\n    if (parent) {\n      parent[handlerName] && parent[handlerName](...args)\n      parent.emit(event, ...args)\n    }\n  }\n\n  onParentCheck(checked: boolean) {\n    if (!this.isDisabled) {\n      this.setCheckState(checked)\n    }\n  }\n\n  onChildCheck() {\n    const { children } = this\n    const validChildren = children.filter((child) => !child.isDisabled)\n    const checked = validChildren.length\n      ? validChildren.every((child) => child.checked)\n      : false\n\n    this.setCheckState(checked)\n  }\n\n  setCheckState(checked: boolean) {\n    const totalNum = this.children.length\n    const checkedNum = this.children.reduce((c, p) => {\n      const num = p.checked ? 1 : p.indeterminate ? 0.5 : 0\n      return c + num\n    }, 0)\n\n    this.checked =\n      this.loaded &&\n      this.children.every((child) => child.loaded && child.checked) &&\n      checked\n    this.indeterminate =\n      this.loaded && checkedNum !== totalNum && checkedNum > 0\n  }\n\n  doCheck(checked: boolean) {\n    if (this.checked === checked) return\n\n    const { checkStrictly, multiple } = this.config\n\n    if (checkStrictly || !multiple) {\n      this.checked = checked\n    } else {\n      // bottom up to unify the calculation of the indeterminate state\n      this.broadcast('check', checked)\n      this.setCheckState(checked)\n      this.emit('check')\n    }\n  }\n}\n\nexport default Node\n"]},"metadata":{},"sourceType":"module"}