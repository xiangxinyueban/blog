{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nvar progressProps = buildProps({\n  type: {\n    type: String,\n    \"default\": \"line\",\n    values: [\"line\", \"circle\", \"dashboard\"]\n  },\n  percentage: {\n    type: Number,\n    \"default\": 0,\n    validator: function validator(val) {\n      return val >= 0 && val <= 100;\n    }\n  },\n  status: {\n    type: String,\n    \"default\": \"\",\n    values: [\"\", \"success\", \"exception\", \"warning\"]\n  },\n  indeterminate: {\n    type: Boolean,\n    \"default\": false\n  },\n  duration: {\n    type: Number,\n    \"default\": 3\n  },\n  strokeWidth: {\n    type: Number,\n    \"default\": 6\n  },\n  strokeLinecap: {\n    type: definePropType(String),\n    \"default\": \"round\"\n  },\n  textInside: {\n    type: Boolean,\n    \"default\": false\n  },\n  width: {\n    type: Number,\n    \"default\": 126\n  },\n  showText: {\n    type: Boolean,\n    \"default\": true\n  },\n  color: {\n    type: definePropType([String, Array, Function]),\n    \"default\": \"\"\n  },\n  format: {\n    type: definePropType(Function),\n    \"default\": function _default(percentage) {\n      return \"\".concat(percentage, \"%\");\n    }\n  }\n});\nexport { progressProps };","map":{"version":3,"mappings":";;;AACY,IAACA,aAAa,GAAGC,UAAU,CAAC;AACtCC,MAAI,EAAE;AACJA,QAAI,EAAEC,MADF;AAEJ,eAAS,MAFL;AAGJC,UAAM,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB;AAHJ,GADgC;AAMtCC,YAAU,EAAE;AACVH,QAAI,EAAEI,MADI;AAEV,eAAS,CAFC;AAGVC,aAAS,EAAE,mBAACC,GAAD;AAAA,aAASA,GAAG,IAAI,CAAP,IAAYA,GAAG,IAAI,GAA5B;AAAA;AAHD,GAN0B;AAWtCC,QAAM,EAAE;AACNP,QAAI,EAAEC,MADA;AAEN,eAAS,EAFH;AAGNC,UAAM,EAAE,CAAC,EAAD,EAAK,SAAL,EAAgB,WAAhB,EAA6B,SAA7B;AAHF,GAX8B;AAgBtCM,eAAa,EAAE;AACbR,QAAI,EAAES,OADO;AAEb,eAAS;AAFI,GAhBuB;AAoBtCC,UAAQ,EAAE;AACRV,QAAI,EAAEI,MADE;AAER,eAAS;AAFD,GApB4B;AAwBtCO,aAAW,EAAE;AACXX,QAAI,EAAEI,MADK;AAEX,eAAS;AAFE,GAxByB;AA4BtCQ,eAAa,EAAE;AACbZ,QAAI,EAAEa,cAAc,CAACZ,MAAD,CADP;AAEb,eAAS;AAFI,GA5BuB;AAgCtCa,YAAU,EAAE;AACVd,QAAI,EAAES,OADI;AAEV,eAAS;AAFC,GAhC0B;AAoCtCM,OAAK,EAAE;AACLf,QAAI,EAAEI,MADD;AAEL,eAAS;AAFJ,GApC+B;AAwCtCY,UAAQ,EAAE;AACRhB,QAAI,EAAES,OADE;AAER,eAAS;AAFD,GAxC4B;AA4CtCQ,OAAK,EAAE;AACLjB,QAAI,EAAEa,cAAc,CAAC,CACnBZ,MADmB,EAEnBiB,KAFmB,EAGnBC,QAHmB,CAAD,CADf;AAML,eAAS;AANJ,GA5C+B;AAoDtCC,QAAM,EAAE;AACNpB,QAAI,EAAEa,cAAc,CAACM,QAAD,CADd;AAEN,eAAS,kBAAChB,UAAD;AAAA,uBAAmBA,UAAnB;AAAA;AAFH;AApD8B,CAAD,CAA3B","names":["progressProps","buildProps","type","String","values","percentage","Number","validator","val","status","indeterminate","Boolean","duration","strokeWidth","strokeLinecap","definePropType","textInside","width","showText","color","Array","Function","format"],"sources":["../../../../../../packages/components/progress/src/progress.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils'\nimport type { ExtractPropTypes, SVGAttributes } from 'vue'\n\ntype Color = { color: string; percentage: number }\ntype ProgressFn = (percentage: number) => string\n\nexport const progressProps = buildProps({\n  type: {\n    type: String,\n    default: 'line',\n    values: ['line', 'circle', 'dashboard'],\n  },\n  percentage: {\n    type: Number,\n    default: 0,\n    validator: (val: number): boolean => val >= 0 && val <= 100,\n  },\n  status: {\n    type: String,\n    default: '',\n    values: ['', 'success', 'exception', 'warning'],\n  },\n  indeterminate: {\n    type: Boolean,\n    default: false,\n  },\n  duration: {\n    type: Number,\n    default: 3,\n  },\n  strokeWidth: {\n    type: Number,\n    default: 6,\n  },\n  strokeLinecap: {\n    type: definePropType<NonNullable<SVGAttributes['stroke-linecap']>>(String),\n    default: 'round',\n  },\n  textInside: {\n    type: Boolean,\n    default: false,\n  },\n  width: {\n    type: Number,\n    default: 126,\n  },\n  showText: {\n    type: Boolean,\n    default: true,\n  },\n  color: {\n    type: definePropType<string | Color[] | ProgressFn>([\n      String,\n      Array,\n      Function,\n    ]),\n    default: '',\n  },\n  format: {\n    type: definePropType<ProgressFn>(Function),\n    default: (percentage: number): string => `${percentage}%`,\n  },\n} as const)\n\nexport type ProgressProps = ExtractPropTypes<typeof progressProps>\n"]},"metadata":{},"sourceType":"module"}