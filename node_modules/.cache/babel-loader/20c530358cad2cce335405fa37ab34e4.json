{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport '../../../utils/index.mjs';\nimport '../../popper/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { useDelayedToggleProps } from '../../../hooks/use-delayed-toggle/index.mjs';\nimport { usePopperContentProps } from '../../popper/src/content.mjs';\nimport { POPPER_CONTAINER_SELECTOR } from '../../../hooks/use-popper-container/index.mjs';\nimport { usePopperTriggerProps } from '../../popper/src/trigger.mjs';\nvar triggers = [\"hover\", \"focus\", \"click\", \"contextmenu\"];\nvar useTooltipContentProps = buildProps(_objectSpread(_objectSpread(_objectSpread({}, useDelayedToggleProps), usePopperContentProps), {}, {\n  appendTo: {\n    type: definePropType([String, Object]),\n    \"default\": POPPER_CONTAINER_SELECTOR\n  },\n  content: {\n    type: String,\n    \"default\": \"\"\n  },\n  rawContent: {\n    type: Boolean,\n    \"default\": false\n  },\n  persistent: Boolean,\n  ariaLabel: String,\n  visible: {\n    type: definePropType(Boolean),\n    \"default\": null\n  },\n  transition: {\n    type: String,\n    \"default\": \"el-fade-in-linear\"\n  },\n  teleported: {\n    type: Boolean,\n    \"default\": true\n  },\n  disabled: {\n    type: Boolean\n  }\n}));\nvar useTooltipTriggerProps = buildProps(_objectSpread(_objectSpread({}, usePopperTriggerProps), {}, {\n  disabled: Boolean,\n  trigger: {\n    type: definePropType([String, Array]),\n    \"default\": \"hover\"\n  }\n}));\nvar useTooltipProps = buildProps({\n  openDelay: {\n    type: Number\n  },\n  visibleArrow: {\n    type: Boolean,\n    \"default\": void 0\n  },\n  hideAfter: {\n    type: Number,\n    \"default\": 200\n  },\n  showArrow: {\n    type: Boolean,\n    \"default\": true\n  }\n});\nexport { useTooltipContentProps, useTooltipProps, useTooltipTriggerProps };","map":{"version":3,"mappings":";;;;;;;;;;AASA,IAAMA,QAAQ,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,aAA5B,CAAjB;AACY,IAACC,sBAAsB,GAAGC,UAAU,+CAC3CC,qBAD2C,GAE3CC,qBAF2C;AAG9CC,UAAQ,EAAE;AACRC,QAAI,EAAEC,cAAc,CAAC,CAACC,MAAD,EAASC,MAAT,CAAD,CADZ;AAER,eAASC;AAFD,GAHoC;AAO9CC,SAAO,EAAE;AACPL,QAAI,EAAEE,MADC;AAEP,eAAS;AAFF,GAPqC;AAW9CI,YAAU,EAAE;AACVN,QAAI,EAAEO,OADI;AAEV,eAAS;AAFC,GAXkC;AAe9CC,YAAU,EAAED,OAfkC;AAgB9CE,WAAS,EAAEP,MAhBmC;AAiB9CQ,SAAO,EAAE;AACPV,QAAI,EAAEC,cAAc,CAACM,OAAD,CADb;AAEP,eAAS;AAFF,GAjBqC;AAqB9CI,YAAU,EAAE;AACVX,QAAI,EAAEE,MADI;AAEV,eAAS;AAFC,GArBkC;AAyB9CU,YAAU,EAAE;AACVZ,QAAI,EAAEO,OADI;AAEV,eAAS;AAFC,GAzBkC;AA6B9CM,UAAQ,EAAE;AACRb,QAAI,EAAEO;AADE;AA7BoC,GAApC;AAiCA,IAACO,sBAAsB,GAAGlB,UAAU,iCAC3CmB,qBAD2C;AAE9CF,UAAQ,EAAEN,OAFoC;AAG9CS,SAAO,EAAE;AACPhB,QAAI,EAAEC,cAAc,CAAC,CAACC,MAAD,EAASe,KAAT,CAAD,CADb;AAEP,eAAS;AAFF;AAHqC,GAApC;AAQA,IAACC,eAAe,GAAGtB,UAAU,CAAC;AACxCuB,WAAS,EAAE;AACTnB,QAAI,EAAEoB;AADG,GAD6B;AAIxCC,cAAY,EAAE;AACZrB,QAAI,EAAEO,OADM;AAEZ,eAAS,KAAK;AAFF,GAJ0B;AAQxCe,WAAS,EAAE;AACTtB,QAAI,EAAEoB,MADG;AAET,eAAS;AAFA,GAR6B;AAYxCG,WAAS,EAAE;AACTvB,QAAI,EAAEO,OADG;AAET,eAAS;AAFA;AAZ6B,CAAD,CAA7B","names":["triggers","useTooltipContentProps","buildProps","useDelayedToggleProps","usePopperContentProps","appendTo","type","definePropType","String","Object","POPPER_CONTAINER_SELECTOR","content","rawContent","Boolean","persistent","ariaLabel","visible","transition","teleported","disabled","useTooltipTriggerProps","usePopperTriggerProps","trigger","Array","useTooltipProps","openDelay","Number","visibleArrow","hideAfter","showArrow"],"sources":["../../../../../../packages/components/tooltip/src/tooltip.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils'\nimport {\n  usePopperContentProps,\n  usePopperTriggerProps,\n} from '@element-plus/components/popper'\nimport {\n  POPPER_CONTAINER_SELECTOR,\n  useDelayedToggleProps,\n} from '@element-plus/hooks'\nimport type Tooltip from '../src/tooltip.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nconst triggers = ['hover', 'focus', 'click', 'contextmenu'] as const\n\nexport type Trigger = typeof triggers[number]\n\nexport const useTooltipContentProps = buildProps({\n  ...useDelayedToggleProps,\n  ...usePopperContentProps,\n  appendTo: {\n    type: definePropType<string | HTMLElement>([String, Object]),\n    default: POPPER_CONTAINER_SELECTOR,\n  },\n  content: {\n    type: String,\n    default: '',\n  },\n  rawContent: {\n    type: Boolean,\n    default: false,\n  },\n  persistent: Boolean,\n  ariaLabel: String,\n  // because model toggle prop is generated dynamically\n  // so the typing cannot be evaluated by typescript as type:\n  // [name]: { type: Boolean, default: null }\n  // so we need to declare that again for type checking.\n  visible: {\n    type: definePropType<boolean | null>(Boolean),\n    default: null,\n  },\n  transition: {\n    type: String,\n    default: 'el-fade-in-linear',\n  },\n  teleported: {\n    type: Boolean,\n    default: true,\n  },\n  disabled: {\n    type: Boolean,\n  },\n} as const)\n\nexport const useTooltipTriggerProps = buildProps({\n  ...usePopperTriggerProps,\n  disabled: Boolean,\n  trigger: {\n    type: definePropType<Trigger | Trigger[]>([String, Array]),\n    default: 'hover',\n  },\n} as const)\n\nexport const useTooltipProps = buildProps({\n  openDelay: {\n    type: Number,\n  },\n  visibleArrow: {\n    type: Boolean,\n    default: undefined,\n  },\n  hideAfter: {\n    type: Number,\n    default: 200,\n  },\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport type ElTooltipContentProps = ExtractPropTypes<\n  typeof useTooltipContentProps\n>\n\nexport type ElTooltipTriggerProps = ExtractPropTypes<\n  typeof useTooltipTriggerProps\n>\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps> &\n  ElTooltipContentProps &\n  ElTooltipTriggerProps\n\nexport type TooltipInstance = InstanceType<typeof Tooltip>\n"]},"metadata":{},"sourceType":"module"}