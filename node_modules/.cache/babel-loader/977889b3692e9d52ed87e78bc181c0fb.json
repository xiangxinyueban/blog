{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport '../../../utils/index.mjs';\nimport { VERTICAL } from './defaults.mjs';\nimport { buildProp, definePropType, buildProps } from '../../../utils/vue/props.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nvar itemSize = buildProp({\n  type: definePropType([Number, Function]),\n  required: true\n});\nvar estimatedItemSize = buildProp({\n  type: Number\n});\nvar cache = buildProp({\n  type: Number,\n  \"default\": 2\n});\nvar direction = buildProp({\n  type: String,\n  values: [\"ltr\", \"rtl\"],\n  \"default\": \"ltr\"\n});\nvar initScrollOffset = buildProp({\n  type: Number,\n  \"default\": 0\n});\nvar total = buildProp({\n  type: Number,\n  required: true\n});\nvar layout = buildProp({\n  type: String,\n  values: [\"horizontal\", \"vertical\"],\n  \"default\": VERTICAL\n});\nvar virtualizedProps = buildProps({\n  className: {\n    type: String,\n    \"default\": \"\"\n  },\n  containerElement: {\n    type: definePropType([String, Object]),\n    \"default\": \"div\"\n  },\n  data: {\n    type: definePropType(Array),\n    \"default\": function _default() {\n      return mutable([]);\n    }\n  },\n  direction: direction,\n  height: {\n    type: [String, Number],\n    required: true\n  },\n  innerElement: {\n    type: [String, Object],\n    \"default\": \"div\"\n  },\n  style: {\n    type: definePropType([Object, String, Array])\n  },\n  useIsScrolling: {\n    type: Boolean,\n    \"default\": false\n  },\n  width: {\n    type: [Number, String],\n    required: false\n  },\n  perfMode: {\n    type: Boolean,\n    \"default\": true\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    \"default\": false\n  }\n});\nvar virtualizedListProps = buildProps(_objectSpread({\n  cache: cache,\n  estimatedItemSize: estimatedItemSize,\n  layout: layout,\n  initScrollOffset: initScrollOffset,\n  total: total,\n  itemSize: itemSize\n}, virtualizedProps));\nvar virtualizedGridProps = buildProps(_objectSpread({\n  columnCache: cache,\n  columnWidth: itemSize,\n  estimatedColumnWidth: estimatedItemSize,\n  estimatedRowHeight: estimatedItemSize,\n  initScrollLeft: initScrollOffset,\n  initScrollTop: initScrollOffset,\n  rowCache: cache,\n  rowHeight: itemSize,\n  totalColumn: total,\n  totalRow: total\n}, virtualizedProps));\nvar virtualizedScrollbarProps = buildProps({\n  layout: layout,\n  total: total,\n  ratio: {\n    type: Number,\n    required: true\n  },\n  clientSize: {\n    type: Number,\n    required: true\n  },\n  scrollFrom: {\n    type: Number,\n    required: true\n  },\n  visible: Boolean\n});\nexport { virtualizedGridProps, virtualizedListProps, virtualizedProps, virtualizedScrollbarProps };","map":{"version":3,"mappings":"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","names":["itemSize","buildProp","type","definePropType","Number","Function","required","estimatedItemSize","cache","direction","String","values","initScrollOffset","total","layout","VERTICAL","virtualizedProps","buildProps","className","containerElement","Object","data","Array","mutable","height","innerElement","style","useIsScrolling","Boolean","width","perfMode","scrollbarAlwaysOn","virtualizedListProps","virtualizedGridProps","columnCache","columnWidth","estimatedColumnWidth","estimatedRowHeight","initScrollLeft","initScrollTop","rowCache","rowHeight","totalColumn","totalRow","virtualizedScrollbarProps","ratio","clientSize","scrollFrom","visible"],"sources":["../../../../../../packages/components/virtual-list/src/props.ts"],"sourcesContent":["import {\n  buildProp,\n  buildProps,\n  definePropType,\n  mutable,\n} from '@element-plus/utils'\nimport { VERTICAL } from './defaults'\n\nimport type { ExtractPropTypes, StyleValue } from 'vue'\nimport type { ItemSize } from './types'\n\nconst itemSize = buildProp({\n  type: definePropType<number | ItemSize>([Number, Function]),\n  required: true,\n} as const)\n\nconst estimatedItemSize = buildProp({\n  type: Number,\n} as const)\n\nconst cache = buildProp({\n  type: Number,\n  default: 2,\n} as const)\n\nconst direction = buildProp({\n  type: String,\n  values: ['ltr', 'rtl'],\n  default: 'ltr',\n} as const)\n\nconst initScrollOffset = buildProp({\n  type: Number,\n  default: 0,\n} as const)\n\nconst total = buildProp({\n  type: Number,\n  required: true,\n} as const)\n\nconst layout = buildProp({\n  type: String,\n  values: ['horizontal', 'vertical'],\n  default: VERTICAL,\n} as const)\n\nexport const virtualizedProps = buildProps({\n  className: {\n    type: String,\n    default: '',\n  },\n\n  containerElement: {\n    type: definePropType<string | Element>([String, Object]),\n    default: 'div',\n  },\n\n  data: {\n    type: definePropType<any[]>(Array),\n    default: () => mutable([] as const),\n  },\n\n  /**\n   * @description controls the horizontal direction.\n   */\n  direction,\n\n  height: {\n    type: [String, Number],\n    required: true,\n  },\n\n  innerElement: {\n    type: [String, Object],\n    default: 'div',\n  },\n\n  style: {\n    type: definePropType<StyleValue>([Object, String, Array]),\n  },\n\n  useIsScrolling: {\n    type: Boolean,\n    default: false,\n  },\n\n  width: {\n    type: [Number, String],\n    required: false,\n  },\n\n  perfMode: {\n    type: Boolean,\n    default: true,\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\n\nexport const virtualizedListProps = buildProps({\n  /**\n   * @description describes how many items should be pre rendered to the head\n   * and the tail of the window\n   */\n  cache,\n\n  estimatedItemSize,\n\n  /**\n   * @description controls the list's orientation\n   */\n  layout,\n\n  initScrollOffset,\n\n  /**\n   * @description describes the total number of the list.\n   */\n  total,\n\n  itemSize,\n  ...virtualizedProps,\n} as const)\n\nexport const virtualizedGridProps = buildProps({\n  columnCache: cache,\n  columnWidth: itemSize,\n  estimatedColumnWidth: estimatedItemSize,\n  estimatedRowHeight: estimatedItemSize,\n  initScrollLeft: initScrollOffset,\n  initScrollTop: initScrollOffset,\n  rowCache: cache,\n  rowHeight: itemSize,\n  totalColumn: total,\n  totalRow: total,\n  ...virtualizedProps,\n} as const)\n\nexport const virtualizedScrollbarProps = buildProps({\n  layout,\n  total,\n  ratio: {\n    type: Number,\n    required: true,\n  },\n  clientSize: {\n    type: Number,\n    required: true,\n  },\n  scrollFrom: {\n    type: Number,\n    required: true,\n  },\n  visible: Boolean,\n} as const)\n\nexport type VirtualizedProps = ExtractPropTypes<typeof virtualizedProps>\nexport type VirtualizedListProps = ExtractPropTypes<typeof virtualizedListProps>\nexport type VirtualizedGridProps = ExtractPropTypes<typeof virtualizedGridProps>\n\nexport type VirtualizedScrollbarProps = ExtractPropTypes<\n  typeof virtualizedScrollbarProps\n>\n"]},"metadata":{},"sourceType":"module"}