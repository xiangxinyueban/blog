{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport { defineComponent, useSlots, shallowRef, computed, onBeforeUnmount, provide, toRef, openBlock, createElementBlock, unref, createBlock, createSlots, withCtx, mergeProps, renderSlot, createCommentVNode } from 'vue';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport UploadList from './upload-list2.mjs';\nimport UploadContent from './upload-content2.mjs';\nimport { useHandlers } from './use-handlers.mjs';\nimport { uploadProps } from './upload.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useDisabled } from '../../../hooks/use-common-props/index.mjs';\nimport { uploadContextKey } from '../../../tokens/upload.mjs';\nvar __default__ = {\n  name: \"ElUpload\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: uploadProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var slots = useSlots();\n    var disabled = useDisabled();\n    var uploadRef = shallowRef();\n\n    var _useHandlers = useHandlers(props, uploadRef),\n        abort = _useHandlers.abort,\n        submit = _useHandlers.submit,\n        clearFiles = _useHandlers.clearFiles,\n        uploadFiles = _useHandlers.uploadFiles,\n        handleStart = _useHandlers.handleStart,\n        handleError = _useHandlers.handleError,\n        handleRemove = _useHandlers.handleRemove,\n        handleSuccess = _useHandlers.handleSuccess,\n        handleProgress = _useHandlers.handleProgress;\n\n    var isPictureCard = computed(function () {\n      return props.listType === \"picture-card\";\n    });\n    var uploadContentProps = computed(function () {\n      return _objectSpread(_objectSpread({}, props), {}, {\n        onStart: handleStart,\n        onProgress: handleProgress,\n        onSuccess: handleSuccess,\n        onError: handleError,\n        onRemove: handleRemove\n      });\n    });\n    onBeforeUnmount(function () {\n      uploadFiles.value.forEach(function (_ref2) {\n        var url = _ref2.url;\n        if (url == null ? void 0 : url.startsWith(\"blob:\")) URL.revokeObjectURL(url);\n      });\n    });\n    provide(uploadContextKey, {\n      accept: toRef(props, \"accept\")\n    });\n    expose({\n      abort: abort,\n      submit: submit,\n      clearFiles: clearFiles,\n      handleStart: handleStart,\n      handleRemove: handleRemove\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", null, [unref(isPictureCard) && _ctx.showFileList ? (openBlock(), createBlock(UploadList, {\n        key: 0,\n        disabled: unref(disabled),\n        \"list-type\": _ctx.listType,\n        files: unref(uploadFiles),\n        \"handle-preview\": _ctx.onPreview,\n        onRemove: unref(handleRemove)\n      }, createSlots({\n        append: withCtx(function () {\n          return [_ctx.listType === \"picture-card\" ? (openBlock(), createBlock(UploadContent, mergeProps({\n            key: 0,\n            ref_key: \"uploadRef\",\n            ref: uploadRef\n          }, unref(uploadContentProps)), {\n            \"default\": withCtx(function () {\n              return [unref(slots).trigger ? renderSlot(_ctx.$slots, \"trigger\", {\n                key: 0\n              }) : createCommentVNode(\"v-if\", true), !unref(slots).trigger && unref(slots)[\"default\"] ? renderSlot(_ctx.$slots, \"default\", {\n                key: 1\n              }) : createCommentVNode(\"v-if\", true)];\n            }),\n            _: 3\n          }, 16)) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 2\n      }, [_ctx.$slots.file ? {\n        name: \"default\",\n        fn: withCtx(function (_ref3) {\n          var file = _ref3.file;\n          return [renderSlot(_ctx.$slots, \"file\", {\n            file: file\n          })];\n        })\n      } : void 0]), 1032, [\"disabled\", \"list-type\", \"files\", \"handle-preview\", \"onRemove\"])) : createCommentVNode(\"v-if\", true), _ctx.listType !== \"picture-card\" ? (openBlock(), createBlock(UploadContent, mergeProps({\n        key: 1,\n        ref_key: \"uploadRef\",\n        ref: uploadRef\n      }, unref(uploadContentProps)), {\n        \"default\": withCtx(function () {\n          return [unref(slots).trigger ? renderSlot(_ctx.$slots, \"trigger\", {\n            key: 0\n          }) : createCommentVNode(\"v-if\", true), !unref(slots).trigger && unref(slots)[\"default\"] ? renderSlot(_ctx.$slots, \"default\", {\n            key: 1\n          }) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 16)) : createCommentVNode(\"v-if\", true), _ctx.$slots.trigger ? renderSlot(_ctx.$slots, \"default\", {\n        key: 2\n      }) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"tip\"), !unref(isPictureCard) && _ctx.showFileList ? (openBlock(), createBlock(UploadList, {\n        key: 3,\n        disabled: unref(disabled),\n        \"list-type\": _ctx.listType,\n        files: unref(uploadFiles),\n        \"handle-preview\": _ctx.onPreview,\n        onRemove: unref(handleRemove)\n      }, createSlots({\n        _: 2\n      }, [_ctx.$slots.file ? {\n        name: \"default\",\n        fn: withCtx(function (_ref4) {\n          var file = _ref4.file;\n          return [renderSlot(_ctx.$slots, \"file\", {\n            file: file\n          })];\n        })\n      } : void 0]), 1032, [\"disabled\", \"list-type\", \"files\", \"handle-preview\", \"onRemove\"])) : createCommentVNode(\"v-if\", true)]);\n    };\n  }\n}));\n\nvar Upload = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload.vue\"]]);\n\nexport { Upload as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AAEA;;AACA,uBAUAA,6BAVA;AAAA,QACAC,KADA,gBACAA,KADA;AAAA,QAEAC,MAFA,gBAEAA,MAFA;AAAA,QAGAC,UAHA,gBAGAA,UAHA;AAAA,QAIAC,WAJA,gBAIAA,WAJA;AAAA,QAKAC,WALA,gBAKAA,WALA;AAAA,QAMAC,WANA,gBAMAA,WANA;AAAA,QAOAC,YAPA,gBAOAA,YAPA;AAAA,QAQAC,aARA,gBAQAA,aARA;AAAA,QASAC,cATA,gBASAA,cATA;;AAYA;AAAA;AAAA;AAGA;AAAA,6CACAC,KADA;AAEAC,4BAFA;AAGAC,kCAHA;AAIAC,gCAJA;AAKAC,4BALA;AAMAC;AANA;AAAA;AASAC;AACAZ;AAAA;AACA;AACA,OAFA;AAGA,KAJA;AAMAa;AACAC;AADA;AAIAC;AAEAlB,kBAFA;AAIAC,oBAJA;AAMAC,4BANA;AAQAE,8BARA;AAUAE;AAVA","names":["useHandlers","abort","submit","clearFiles","uploadFiles","handleStart","handleError","handleRemove","handleSuccess","handleProgress","props","onStart","onProgress","onSuccess","onError","onRemove","onBeforeUnmount","provide","accept","expose"],"sources":["../../../../../../packages/components/upload/src/upload.vue"],"sourcesContent":["<template>\n  <div>\n    <upload-list\n      v-if=\"isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file }\">\n        <slot name=\"file\" :file=\"file\" />\n      </template>\n      <template #append>\n        <upload-content\n          v-if=\"listType === 'picture-card'\"\n          ref=\"uploadRef\"\n          v-bind=\"uploadContentProps\"\n        >\n          <slot v-if=\"slots.trigger\" name=\"trigger\" />\n          <slot v-if=\"!slots.trigger && slots.default\" />\n        </upload-content>\n      </template>\n    </upload-list>\n\n    <upload-content\n      v-if=\"listType !== 'picture-card'\"\n      ref=\"uploadRef\"\n      v-bind=\"uploadContentProps\"\n    >\n      <slot v-if=\"slots.trigger\" name=\"trigger\" />\n      <slot v-if=\"!slots.trigger && slots.default\" />\n    </upload-content>\n\n    <slot v-if=\"$slots.trigger\" />\n    <slot name=\"tip\" />\n    <upload-list\n      v-if=\"!isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file }\">\n        <slot name=\"file\" :file=\"file\" />\n      </template>\n    </upload-list>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  onBeforeUnmount,\n  provide,\n  shallowRef,\n  toRef,\n  useSlots,\n} from 'vue'\nimport { uploadContextKey } from '@element-plus/tokens'\nimport { useDisabled } from '@element-plus/hooks'\n\nimport UploadList from './upload-list.vue'\nimport UploadContent from './upload-content.vue'\nimport { useHandlers } from './use-handlers'\nimport { uploadProps } from './upload'\nimport type {\n  UploadContentInstance,\n  UploadContentProps,\n} from './upload-content'\n\ndefineOptions({\n  name: 'ElUpload',\n})\n\nconst props = defineProps(uploadProps)\n\nconst slots = useSlots()\nconst disabled = useDisabled()\n\nconst uploadRef = shallowRef<UploadContentInstance>()\nconst {\n  abort,\n  submit,\n  clearFiles,\n  uploadFiles,\n  handleStart,\n  handleError,\n  handleRemove,\n  handleSuccess,\n  handleProgress,\n} = useHandlers(props, uploadRef)\n\nconst isPictureCard = computed(() => props.listType === 'picture-card')\n\n// did not use `defineComponent` for performance\nconst uploadContentProps = computed<UploadContentProps>(() => ({\n  ...props,\n  onStart: handleStart,\n  onProgress: handleProgress,\n  onSuccess: handleSuccess,\n  onError: handleError,\n  onRemove: handleRemove,\n}))\n\nonBeforeUnmount(() => {\n  uploadFiles.value.forEach(({ url }) => {\n    if (url?.startsWith('blob:')) URL.revokeObjectURL(url)\n  })\n})\n\nprovide(uploadContextKey, {\n  accept: toRef(props, 'accept'),\n})\n\ndefineExpose({\n  /** @description cancel upload request */\n  abort,\n  /** @description upload the file list manually */\n  submit,\n  /** @description clear the file list  */\n  clearFiles,\n  /** @description select the file manually */\n  handleStart,\n  /** @description remove the file manually */\n  handleRemove,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}