{"ast":null,"code":"import _asyncToGenerator from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport { nextTick } from 'vue';\nimport { isFunction } from '@vue/shared';\nimport { throttle } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport { getOffsetTopDistance } from '../../../utils/dom/position.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { getScrollContainer } from '../../../utils/dom/scroll.mjs';\nvar SCOPE = \"ElInfiniteScroll\";\nvar CHECK_INTERVAL = 50;\nvar DEFAULT_DELAY = 200;\nvar DEFAULT_DISTANCE = 0;\nvar attributes = {\n  delay: {\n    type: Number,\n    \"default\": DEFAULT_DELAY\n  },\n  distance: {\n    type: Number,\n    \"default\": DEFAULT_DISTANCE\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": false\n  },\n  immediate: {\n    type: Boolean,\n    \"default\": true\n  }\n};\n\nvar getScrollOptions = function getScrollOptions(el, instance) {\n  return Object.entries(attributes).reduce(function (acm, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        name = _ref2[0],\n        option = _ref2[1];\n\n    var _a, _b;\n\n    var type = option.type,\n        defaultValue = option[\"default\"];\n    var attrVal = el.getAttribute(\"infinite-scroll-\".concat(name));\n    var value = (_b = (_a = instance[attrVal]) != null ? _a : attrVal) != null ? _b : defaultValue;\n    value = value === \"false\" ? false : value;\n    value = type(value);\n    acm[name] = Number.isNaN(value) ? defaultValue : value;\n    return acm;\n  }, {});\n};\n\nvar destroyObserver = function destroyObserver(el) {\n  var observer = el[SCOPE].observer;\n\n  if (observer) {\n    observer.disconnect();\n    delete el[SCOPE].observer;\n  }\n};\n\nvar handleScroll = function handleScroll(el, cb) {\n  var _el$SCOPE = el[SCOPE],\n      container = _el$SCOPE.container,\n      containerEl = _el$SCOPE.containerEl,\n      instance = _el$SCOPE.instance,\n      observer = _el$SCOPE.observer,\n      lastScrollTop = _el$SCOPE.lastScrollTop;\n\n  var _getScrollOptions = getScrollOptions(el, instance),\n      disabled = _getScrollOptions.disabled,\n      distance = _getScrollOptions.distance;\n\n  var clientHeight = containerEl.clientHeight,\n      scrollHeight = containerEl.scrollHeight,\n      scrollTop = containerEl.scrollTop;\n  var delta = scrollTop - lastScrollTop;\n  el[SCOPE].lastScrollTop = scrollTop;\n  if (observer || disabled || delta < 0) return;\n  var shouldTrigger = false;\n\n  if (container === el) {\n    shouldTrigger = scrollHeight - (clientHeight + scrollTop) <= distance;\n  } else {\n    var clientTop = el.clientTop,\n        height = el.scrollHeight;\n    var offsetTop = getOffsetTopDistance(el, containerEl);\n    shouldTrigger = scrollTop + clientHeight >= offsetTop + clientTop + height - distance;\n  }\n\n  if (shouldTrigger) {\n    cb.call(instance);\n  }\n};\n\nfunction checkFull(el, cb) {\n  var _el$SCOPE2 = el[SCOPE],\n      containerEl = _el$SCOPE2.containerEl,\n      instance = _el$SCOPE2.instance;\n\n  var _getScrollOptions2 = getScrollOptions(el, instance),\n      disabled = _getScrollOptions2.disabled;\n\n  if (disabled || containerEl.clientHeight === 0) return;\n\n  if (containerEl.scrollHeight <= containerEl.clientHeight) {\n    cb.call(instance);\n  } else {\n    destroyObserver(el);\n  }\n}\n\nvar InfiniteScroll = {\n  mounted: function mounted(el, binding) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var instance, cb, _getScrollOptions3, delay, immediate, container, containerEl, onScroll, observer;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              instance = binding.instance, cb = binding.value;\n\n              if (!isFunction(cb)) {\n                throwError(SCOPE, \"'v-infinite-scroll' binding value must be a function\");\n              }\n\n              _context.next = 4;\n              return nextTick();\n\n            case 4:\n              _getScrollOptions3 = getScrollOptions(el, instance), delay = _getScrollOptions3.delay, immediate = _getScrollOptions3.immediate;\n              container = getScrollContainer(el, true);\n              containerEl = container === window ? document.documentElement : container;\n              onScroll = throttle(handleScroll.bind(null, el, cb), delay);\n\n              if (container) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 10:\n              el[SCOPE] = {\n                instance: instance,\n                container: container,\n                containerEl: containerEl,\n                delay: delay,\n                cb: cb,\n                onScroll: onScroll,\n                lastScrollTop: containerEl.scrollTop\n              };\n\n              if (immediate) {\n                observer = new MutationObserver(throttle(checkFull.bind(null, el, cb), CHECK_INTERVAL));\n                el[SCOPE].observer = observer;\n                observer.observe(el, {\n                  childList: true,\n                  subtree: true\n                });\n                checkFull(el, cb);\n              }\n\n              container.addEventListener(\"scroll\", onScroll);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  unmounted: function unmounted(el) {\n    var _el$SCOPE3 = el[SCOPE],\n        container = _el$SCOPE3.container,\n        onScroll = _el$SCOPE3.onScroll;\n    container == null ? void 0 : container.removeEventListener(\"scroll\", onScroll);\n    destroyObserver(el);\n  },\n  updated: function updated(el) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _el$SCOPE4, containerEl, cb, observer;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (el[SCOPE]) {\n                _context2.next = 3;\n                break;\n              }\n\n              _context2.next = 3;\n              return nextTick();\n\n            case 3:\n              _el$SCOPE4 = el[SCOPE], containerEl = _el$SCOPE4.containerEl, cb = _el$SCOPE4.cb, observer = _el$SCOPE4.observer;\n\n              if (containerEl.clientHeight && observer) {\n                checkFull(el, cb);\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};\nexport { CHECK_INTERVAL, DEFAULT_DELAY, DEFAULT_DISTANCE, SCOPE, InfiniteScroll as default };","map":{"version":3,"mappings":"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","names":["SCOPE","CHECK_INTERVAL","DEFAULT_DELAY","DEFAULT_DISTANCE","attributes","delay","type","Number","distance","disabled","Boolean","immediate","getScrollOptions","el","instance","Object","entries","reduce","acm","name","option","_a","_b","defaultValue","attrVal","getAttribute","value","isNaN","destroyObserver","observer","disconnect","handleScroll","cb","container","containerEl","lastScrollTop","clientHeight","scrollHeight","scrollTop","delta","shouldTrigger","clientTop","height","offsetTop","getOffsetTopDistance","call","checkFull","InfiniteScroll","mounted","binding","isFunction","throwError","nextTick","getScrollContainer","window","document","documentElement","onScroll","throttle","bind","MutationObserver","observe","childList","subtree","addEventListener","unmounted","removeEventListener","updated"],"sources":["../../../../../../packages/components/infinite-scroll/src/index.ts"],"sourcesContent":["import { nextTick } from 'vue'\nimport { isFunction } from '@vue/shared'\nimport { throttle } from 'lodash-unified'\nimport {\n  getOffsetTopDistance,\n  getScrollContainer,\n  throwError,\n} from '@element-plus/utils'\n\nimport type { ComponentPublicInstance, ObjectDirective } from 'vue'\n\nexport const SCOPE = 'ElInfiniteScroll'\nexport const CHECK_INTERVAL = 50\nexport const DEFAULT_DELAY = 200\nexport const DEFAULT_DISTANCE = 0\n\nconst attributes = {\n  delay: {\n    type: Number,\n    default: DEFAULT_DELAY,\n  },\n  distance: {\n    type: Number,\n    default: DEFAULT_DISTANCE,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  immediate: {\n    type: Boolean,\n    default: true,\n  },\n}\n\ntype Attrs = typeof attributes\ntype ScrollOptions = { [K in keyof Attrs]: Attrs[K]['default'] }\ntype InfiniteScrollCallback = () => void\ntype InfiniteScrollEl = HTMLElement & {\n  [SCOPE]: {\n    container: HTMLElement | Window\n    containerEl: HTMLElement\n    instance: ComponentPublicInstance\n    delay: number // export for test\n    lastScrollTop: number\n    cb: InfiniteScrollCallback\n    onScroll: () => void\n    observer?: MutationObserver\n  }\n}\n\nconst getScrollOptions = (\n  el: HTMLElement,\n  instance: ComponentPublicInstance\n): ScrollOptions => {\n  return Object.entries(attributes).reduce((acm, [name, option]) => {\n    const { type, default: defaultValue } = option\n    const attrVal = el.getAttribute(`infinite-scroll-${name}`)\n    let value = instance[attrVal] ?? attrVal ?? defaultValue\n    value = value === 'false' ? false : value\n    value = type(value)\n    acm[name] = Number.isNaN(value) ? defaultValue : value\n    return acm\n  }, {} as ScrollOptions)\n}\n\nconst destroyObserver = (el: InfiniteScrollEl) => {\n  const { observer } = el[SCOPE]\n\n  if (observer) {\n    observer.disconnect()\n    delete el[SCOPE].observer\n  }\n}\n\nconst handleScroll = (el: InfiniteScrollEl, cb: InfiniteScrollCallback) => {\n  const { container, containerEl, instance, observer, lastScrollTop } =\n    el[SCOPE]\n  const { disabled, distance } = getScrollOptions(el, instance)\n  const { clientHeight, scrollHeight, scrollTop } = containerEl\n  const delta = scrollTop - lastScrollTop\n\n  el[SCOPE].lastScrollTop = scrollTop\n\n  // trigger only if full check has done and not disabled and scroll down\n  if (observer || disabled || delta < 0) return\n\n  let shouldTrigger = false\n\n  if (container === el) {\n    shouldTrigger = scrollHeight - (clientHeight + scrollTop) <= distance\n  } else {\n    // get the scrollHeight since el might be visible overflow\n    const { clientTop, scrollHeight: height } = el\n    const offsetTop = getOffsetTopDistance(el, containerEl)\n    shouldTrigger =\n      scrollTop + clientHeight >= offsetTop + clientTop + height - distance\n  }\n\n  if (shouldTrigger) {\n    cb.call(instance)\n  }\n}\n\nfunction checkFull(el: InfiniteScrollEl, cb: InfiniteScrollCallback) {\n  const { containerEl, instance } = el[SCOPE]\n  const { disabled } = getScrollOptions(el, instance)\n\n  if (disabled || containerEl.clientHeight === 0) return\n\n  if (containerEl.scrollHeight <= containerEl.clientHeight) {\n    cb.call(instance)\n  } else {\n    destroyObserver(el)\n  }\n}\n\nconst InfiniteScroll: ObjectDirective<\n  InfiniteScrollEl,\n  InfiniteScrollCallback\n> = {\n  async mounted(el, binding) {\n    const { instance, value: cb } = binding\n\n    if (!isFunction(cb)) {\n      throwError(SCOPE, \"'v-infinite-scroll' binding value must be a function\")\n    }\n\n    // ensure parentNode mounted\n    await nextTick()\n\n    const { delay, immediate } = getScrollOptions(el, instance)\n    const container = getScrollContainer(el, true)\n    const containerEl =\n      container === window\n        ? document.documentElement\n        : (container as HTMLElement)\n    const onScroll = throttle(handleScroll.bind(null, el, cb), delay)\n\n    if (!container) return\n\n    el[SCOPE] = {\n      instance,\n      container,\n      containerEl,\n      delay,\n      cb,\n      onScroll,\n      lastScrollTop: containerEl.scrollTop,\n    }\n\n    if (immediate) {\n      const observer = new MutationObserver(\n        throttle(checkFull.bind(null, el, cb), CHECK_INTERVAL)\n      )\n      el[SCOPE].observer = observer\n      observer.observe(el, { childList: true, subtree: true })\n      checkFull(el, cb)\n    }\n\n    container.addEventListener('scroll', onScroll)\n  },\n  unmounted(el) {\n    const { container, onScroll } = el[SCOPE]\n\n    container?.removeEventListener('scroll', onScroll)\n    destroyObserver(el)\n  },\n  async updated(el) {\n    if (!el[SCOPE]) {\n      await nextTick()\n    }\n    const { containerEl, cb, observer } = el[SCOPE]\n    if (containerEl.clientHeight && observer) {\n      checkFull(el, cb)\n    }\n  },\n}\n\nexport default InfiniteScroll\n"]},"metadata":{},"sourceType":"module"}