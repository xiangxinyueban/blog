{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.number.parse-int.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { defineComponent, ref, computed, resolveComponent, openBlock, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, createElementBlock, Fragment, renderList } from 'vue';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js';\nimport { ElSelect } from '../../select/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Clock, CircleClose } from '@element-plus/icons-vue';\nimport '../../../constants/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { componentSizes } from '../../../constants/size.mjs';\ndayjs.extend(customParseFormat);\nvar ElOption = ElSelect.Option;\n\nvar parseTime = function parseTime(time) {\n  var values = (time || \"\").split(\":\");\n\n  if (values.length >= 2) {\n    var hours = Number.parseInt(values[0], 10);\n    var minutes = Number.parseInt(values[1], 10);\n    var timeUpper = time.toUpperCase();\n\n    if (timeUpper.includes(\"AM\") && hours === 12) {\n      hours = 0;\n    } else if (timeUpper.includes(\"PM\") && hours !== 12) {\n      hours += 12;\n    }\n\n    return {\n      hours: hours,\n      minutes: minutes\n    };\n  }\n\n  return null;\n};\n\nvar compareTime = function compareTime(time1, time2) {\n  var value1 = parseTime(time1);\n  var value2 = parseTime(time2);\n  var minutes1 = value1.minutes + value1.hours * 60;\n  var minutes2 = value2.minutes + value2.hours * 60;\n\n  if (minutes1 === minutes2) {\n    return 0;\n  }\n\n  return minutes1 > minutes2 ? 1 : -1;\n};\n\nvar padTime = function padTime(time) {\n  return \"\".concat(time).padStart(2, \"0\");\n};\n\nvar formatTime = function formatTime(time) {\n  return \"\".concat(padTime(time.hours), \":\").concat(padTime(time.minutes));\n};\n\nvar nextTime = function nextTime(time, step) {\n  var timeValue = parseTime(time);\n  var stepValue = parseTime(step);\n  var next = {\n    hours: timeValue.hours,\n    minutes: timeValue.minutes\n  };\n  next.minutes += stepValue.minutes;\n  next.hours += stepValue.hours;\n  next.hours += Math.floor(next.minutes / 60);\n  next.minutes = next.minutes % 60;\n  return formatTime(next);\n};\n\nvar _sfc_main = defineComponent({\n  name: \"ElTimeSelect\",\n  components: {\n    ElSelect: ElSelect,\n    ElOption: ElOption,\n    ElIcon: ElIcon\n  },\n  model: {\n    prop: \"value\",\n    event: \"change\"\n  },\n  props: {\n    format: {\n      type: String,\n      \"default\": \"HH:mm\"\n    },\n    modelValue: String,\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    editable: {\n      type: Boolean,\n      \"default\": true\n    },\n    effect: {\n      type: String,\n      \"default\": \"light\"\n    },\n    clearable: {\n      type: Boolean,\n      \"default\": true\n    },\n    size: {\n      type: String,\n      values: componentSizes,\n      \"default\": \"\"\n    },\n    placeholder: {\n      type: String,\n      \"default\": \"\"\n    },\n    start: {\n      type: String,\n      \"default\": \"09:00\"\n    },\n    end: {\n      type: String,\n      \"default\": \"18:00\"\n    },\n    step: {\n      type: String,\n      \"default\": \"00:30\"\n    },\n    minTime: {\n      type: String,\n      \"default\": \"\"\n    },\n    maxTime: {\n      type: String,\n      \"default\": \"\"\n    },\n    name: {\n      type: String,\n      \"default\": \"\"\n    },\n    prefixIcon: {\n      type: [String, Object],\n      \"default\": Clock\n    },\n    clearIcon: {\n      type: [String, Object],\n      \"default\": CircleClose\n    }\n  },\n  emits: [\"change\", \"blur\", \"focus\", \"update:modelValue\"],\n  setup: function setup(props) {\n    var select = ref(null);\n    var value = computed(function () {\n      return props.modelValue;\n    });\n    var start = computed(function () {\n      var time = parseTime(props.start);\n      return formatTime(time);\n    });\n    var end = computed(function () {\n      var time = parseTime(props.end);\n      return formatTime(time);\n    });\n    var step = computed(function () {\n      var time = parseTime(props.step);\n      return formatTime(time);\n    });\n    var minTime = computed(function () {\n      var time = parseTime(props.minTime);\n      return time ? formatTime(time) : null;\n    });\n    var maxTime = computed(function () {\n      var time = parseTime(props.maxTime);\n      return time ? formatTime(time) : null;\n    });\n    var items = computed(function () {\n      var result = [];\n\n      if (props.start && props.end && props.step) {\n        var current = start.value;\n        var currentTime;\n\n        while (compareTime(current, end.value) <= 0) {\n          currentTime = dayjs(current, \"HH:mm\").format(props.format);\n          result.push({\n            value: currentTime,\n            disabled: compareTime(current, minTime.value || \"-1:-1\") <= 0 || compareTime(current, maxTime.value || \"100:100\") >= 0\n          });\n          current = nextTime(current, step.value);\n        }\n      }\n\n      return result;\n    });\n\n    var blur = function blur() {\n      var _a, _b;\n\n      (_b = (_a = select.value) == null ? void 0 : _a.blur) == null ? void 0 : _b.call(_a);\n    };\n\n    var focus = function focus() {\n      var _a, _b;\n\n      (_b = (_a = select.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    };\n\n    return {\n      select: select,\n      value: value,\n      items: items,\n      blur: blur,\n      focus: focus\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_option = resolveComponent(\"el-option\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_select = resolveComponent(\"el-select\");\n\n  return openBlock(), createBlock(_component_el_select, {\n    ref: \"select\",\n    \"model-value\": _ctx.value,\n    disabled: _ctx.disabled,\n    clearable: _ctx.clearable,\n    \"clear-icon\": _ctx.clearIcon,\n    size: _ctx.size,\n    effect: _ctx.effect,\n    placeholder: _ctx.placeholder,\n    \"default-first-option\": \"\",\n    filterable: _ctx.editable,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function (event) {\n      return _ctx.$emit(\"update:modelValue\", event);\n    }),\n    onChange: _cache[1] || (_cache[1] = function (event) {\n      return _ctx.$emit(\"change\", event);\n    }),\n    onBlur: _cache[2] || (_cache[2] = function (event) {\n      return _ctx.$emit(\"blur\", event);\n    }),\n    onFocus: _cache[3] || (_cache[3] = function (event) {\n      return _ctx.$emit(\"focus\", event);\n    })\n  }, {\n    prefix: withCtx(function () {\n      return [_ctx.prefixIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        \"class\": \"el-input__prefix-icon\"\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.prefixIcon)))];\n        }),\n        _: 1\n      })) : createCommentVNode(\"v-if\", true)];\n    }),\n    \"default\": withCtx(function () {\n      return [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.items, function (item) {\n        return openBlock(), createBlock(_component_el_option, {\n          key: item.value,\n          label: item.value,\n          value: item.value,\n          disabled: item.disabled\n        }, null, 8, [\"label\", \"value\", \"disabled\"]);\n      }), 128))];\n    }),\n    _: 1\n  }, 8, [\"model-value\", \"disabled\", \"clearable\", \"clear-icon\", \"size\", \"effect\", \"placeholder\", \"filterable\"]);\n}\n\nvar TimeSelect = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-select/src/time-select.vue\"]]);\n\nexport { TimeSelect as default };","map":{"version":3,"mappings":"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","names":["dayjs","extend","customParseFormat","ElOption","ElSelect","Option","parseTime","time","values","split","length","hours","parseInt","minutes","toUpperCase","timeUpper","compareTime","time1","time2","minutes1","value1","minutes2","value2","padTime","padStart","formatTime","nextTime","step","next","timeValue","stepValue","Math","floor","_sfc_main","defineComponent","name","components","ElIcon","model","prop","event","props","format","type","modelValue","disabled","editable","effect","clearable","size","placeholder","start","end","minTime","maxTime","prefixIcon","String","Object","Clock","clearIcon","CircleClose","emits","setup","ref","value","computed","result","current","currentTime","push","blur","select","items","focus","_component_el_select","_openBlock","_ctx","filterable","_cache","$emit","onChange","onBlur","onFocus","prefix","key","_createElementBlock","label"],"sources":["../../../../../../packages/components/time-select/src/time-select.vue"],"sourcesContent":["<template>\n  <el-select\n    ref=\"select\"\n    :model-value=\"value\"\n    :disabled=\"disabled\"\n    :clearable=\"clearable\"\n    :clear-icon=\"clearIcon\"\n    :size=\"size\"\n    :effect=\"effect\"\n    :placeholder=\"placeholder\"\n    default-first-option\n    :filterable=\"editable\"\n    @update:model-value=\"(event) => $emit('update:modelValue', event)\"\n    @change=\"(event) => $emit('change', event)\"\n    @blur=\"(event) => $emit('blur', event)\"\n    @focus=\"(event) => $emit('focus', event)\"\n  >\n    <el-option\n      v-for=\"item in items\"\n      :key=\"item.value\"\n      :label=\"item.value\"\n      :value=\"item.value\"\n      :disabled=\"item.disabled\"\n    />\n    <template #prefix>\n      <el-icon v-if=\"prefixIcon\" class=\"el-input__prefix-icon\">\n        <component :is=\"prefixIcon\" />\n      </el-icon>\n    </template>\n  </el-select>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js'\nimport ElSelect from '@element-plus/components/select'\nimport ElIcon from '@element-plus/components/icon'\nimport { CircleClose, Clock } from '@element-plus/icons-vue'\n\nimport { componentSizes } from '@element-plus/constants'\nimport type { Component, PropType } from 'vue'\ndayjs.extend(customParseFormat)\n\nconst { Option: ElOption } = ElSelect\n\ninterface Time {\n  hours: number\n  minutes: number\n}\n\nconst parseTime = (time: string): null | Time => {\n  const values = (time || '').split(':')\n  if (values.length >= 2) {\n    let hours = Number.parseInt(values[0], 10)\n    const minutes = Number.parseInt(values[1], 10)\n    const timeUpper = time.toUpperCase()\n    if (timeUpper.includes('AM') && hours === 12) {\n      hours = 0\n    } else if (timeUpper.includes('PM') && hours !== 12) {\n      hours += 12\n    }\n    return {\n      hours,\n      minutes,\n    }\n  }\n  return null\n}\nconst compareTime = (time1: string, time2: string): number => {\n  const value1 = parseTime(time1)\n  const value2 = parseTime(time2)\n  const minutes1 = value1.minutes + value1.hours * 60\n  const minutes2 = value2.minutes + value2.hours * 60\n  if (minutes1 === minutes2) {\n    return 0\n  }\n  return minutes1 > minutes2 ? 1 : -1\n}\nconst padTime = (time: number | string) => {\n  return `${time}`.padStart(2, '0')\n}\nconst formatTime = (time: Time): string => {\n  return `${padTime(time.hours)}:${padTime(time.minutes)}`\n}\nconst nextTime = (time: string, step: string): string => {\n  const timeValue = parseTime(time)\n  const stepValue = parseTime(step)\n  const next = {\n    hours: timeValue.hours,\n    minutes: timeValue.minutes,\n  }\n  next.minutes += stepValue.minutes\n  next.hours += stepValue.hours\n  next.hours += Math.floor(next.minutes / 60)\n  next.minutes = next.minutes % 60\n  return formatTime(next)\n}\n\nexport default defineComponent({\n  name: 'ElTimeSelect',\n  components: { ElSelect, ElOption, ElIcon },\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  props: {\n    format: {\n      type: String,\n      default: 'HH:mm',\n    },\n    modelValue: String,\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    editable: {\n      type: Boolean,\n      default: true,\n    },\n    effect: {\n      type: String as PropType<'light' | 'dark' | string>,\n      default: 'light',\n    },\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    size: {\n      type: String as PropType<ComponentSize>,\n      values: componentSizes,\n      default: '',\n    },\n    placeholder: {\n      type: String,\n      default: '',\n    },\n    start: {\n      type: String,\n      default: '09:00',\n    },\n    end: {\n      type: String,\n      default: '18:00',\n    },\n    step: {\n      type: String,\n      default: '00:30',\n    },\n    minTime: {\n      type: String,\n      default: '',\n    },\n    maxTime: {\n      type: String,\n      default: '',\n    },\n    name: {\n      type: String,\n      default: '',\n    },\n    prefixIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: Clock,\n    },\n    clearIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: CircleClose,\n    },\n  },\n  emits: ['change', 'blur', 'focus', 'update:modelValue'],\n  setup(props) {\n    // computed\n    const select = ref(null)\n    const value = computed(() => props.modelValue)\n    const start = computed(() => {\n      const time = parseTime(props.start)\n      return formatTime(time)\n    })\n    const end = computed(() => {\n      const time = parseTime(props.end)\n      return formatTime(time)\n    })\n    const step = computed(() => {\n      const time = parseTime(props.step)\n      return formatTime(time)\n    })\n    const minTime = computed(() => {\n      const time = parseTime(props.minTime)\n      return time ? formatTime(time) : null\n    })\n    const maxTime = computed(() => {\n      const time = parseTime(props.maxTime)\n      return time ? formatTime(time) : null\n    })\n    const items = computed(() => {\n      const result = []\n      if (props.start && props.end && props.step) {\n        let current = start.value\n        let currentTime\n        while (compareTime(current, end.value) <= 0) {\n          currentTime = dayjs(current, 'HH:mm').format(props.format)\n          result.push({\n            value: currentTime,\n            disabled:\n              compareTime(current, minTime.value || '-1:-1') <= 0 ||\n              compareTime(current, maxTime.value || '100:100') >= 0,\n          })\n          current = nextTime(current, step.value)\n        }\n      }\n      return result\n    })\n    const blur = () => {\n      select.value?.blur?.()\n    }\n    const focus = () => {\n      select.value?.focus?.()\n    }\n\n    return {\n      select,\n      value,\n      items,\n      blur,\n      focus,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}