{"ast":null,"code":"import _defineProperty from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, inject, ref, watch, nextTick, computed, unref, provide, resolveComponent, openBlock, createBlock, mergeProps, withCtx, normalizeClass, normalizeStyle, withModifiers, resolveDynamicComponent, createCommentVNode, createElementBlock, createElementVNode, renderSlot, toDisplayString } from 'vue';\nimport dayjs from 'dayjs';\nimport { isEqual } from 'lodash-unified';\nimport { onClickOutside } from '@vueuse/core';\nimport '../../../../hooks/index.mjs';\nimport '../../../../tokens/index.mjs';\nimport { ElInput } from '../../../input/index.mjs';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ElTooltip } from '../../../tooltip/index.mjs';\nimport '../../../../utils/index.mjs';\nimport '../../../../constants/index.mjs';\nimport { Clock, Calendar } from '@element-plus/icons-vue';\nimport { timePickerDefaultProps } from './props.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { isEmpty } from '../../../../utils/types.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { formContextKey, formItemContextKey } from '../../../../tokens/form.mjs';\nimport { debugWarn } from '../../../../utils/error.mjs';\nimport { useSize } from '../../../../hooks/use-common-props/index.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nvar dateEquals = function dateEquals(a, b) {\n  var aIsDate = a instanceof Date;\n  var bIsDate = b instanceof Date;\n\n  if (aIsDate && bIsDate) {\n    return a.getTime() === b.getTime();\n  }\n\n  if (!aIsDate && !bIsDate) {\n    return a === b;\n  }\n\n  return false;\n};\n\nvar valueEquals = function valueEquals(a, b) {\n  var aIsArray = Array.isArray(a);\n  var bIsArray = Array.isArray(b);\n\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return a.every(function (item, index) {\n      return dateEquals(item, b[index]);\n    });\n  }\n\n  if (!aIsArray && !bIsArray) {\n    return dateEquals(a, b);\n  }\n\n  return false;\n};\n\nvar parser = function parser(date, format, lang) {\n  var day = isEmpty(format) || format === \"x\" ? dayjs(date).locale(lang) : dayjs(date, format).locale(lang);\n  return day.isValid() ? day : void 0;\n};\n\nvar formatter = function formatter(date, format, lang) {\n  if (isEmpty(format)) return date;\n  if (format === \"x\") return +date;\n  return dayjs(date).locale(lang).format(format);\n};\n\nvar _sfc_main = defineComponent({\n  name: \"Picker\",\n  components: {\n    ElInput: ElInput,\n    ElTooltip: ElTooltip,\n    ElIcon: ElIcon\n  },\n  props: timePickerDefaultProps,\n  emits: [\"update:modelValue\", \"change\", \"focus\", \"blur\", \"calendar-change\", \"panel-change\", \"visible-change\"],\n  setup: function setup(props, ctx) {\n    var _useLocale = useLocale(),\n        lang = _useLocale.lang;\n\n    var nsDate = useNamespace(\"date\");\n    var nsInput = useNamespace(\"input\");\n    var nsRange = useNamespace(\"range\");\n    var elForm = inject(formContextKey, {});\n    var elFormItem = inject(formItemContextKey, {});\n    var elPopperOptions = inject(\"ElPopperOptions\", {});\n    var refPopper = ref();\n    var inputRef = ref();\n    var pickerVisible = ref(false);\n    var pickerActualVisible = ref(false);\n    var valueOnOpen = ref(null);\n    watch(pickerVisible, function (val) {\n      var _a;\n\n      if (!val) {\n        userInput.value = null;\n        nextTick(function () {\n          emitChange(props.modelValue);\n        });\n        ctx.emit(\"blur\");\n        blurInput();\n        props.validateEvent && ((_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"blur\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        }));\n      } else {\n        valueOnOpen.value = props.modelValue;\n      }\n    });\n\n    var emitChange = function emitChange(val, isClear) {\n      var _a;\n\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        ctx.emit(\"change\", val);\n        props.validateEvent && ((_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        }));\n      }\n    };\n\n    var emitInput = function emitInput(val) {\n      if (!valueEquals(props.modelValue, val)) {\n        var formatValue;\n\n        if (Array.isArray(val)) {\n          formatValue = val.map(function (_) {\n            return formatter(_, props.valueFormat, lang.value);\n          });\n        } else if (val) {\n          formatValue = formatter(val, props.valueFormat, lang.value);\n        }\n\n        ctx.emit(\"update:modelValue\", val ? formatValue : val, lang.value);\n      }\n    };\n\n    var refInput = computed(function () {\n      if (inputRef.value) {\n        var _r = isRangeInput.value ? inputRef.value : inputRef.value.$el;\n\n        return Array.from(_r.querySelectorAll(\"input\"));\n      }\n\n      return [];\n    });\n    var refStartInput = computed(function () {\n      return refInput == null ? void 0 : refInput.value[0];\n    });\n    var refEndInput = computed(function () {\n      return refInput == null ? void 0 : refInput.value[1];\n    });\n\n    var setSelectionRange = function setSelectionRange(start, end, pos) {\n      var _inputs = refInput.value;\n      if (!_inputs.length) return;\n\n      if (!pos || pos === \"min\") {\n        _inputs[0].setSelectionRange(start, end);\n\n        _inputs[0].focus();\n      } else if (pos === \"max\") {\n        _inputs[1].setSelectionRange(start, end);\n\n        _inputs[1].focus();\n      }\n    };\n\n    var onPick = function onPick() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      pickerVisible.value = visible;\n      var result;\n\n      if (Array.isArray(date)) {\n        result = date.map(function (_) {\n          return _.toDate();\n        });\n      } else {\n        result = date ? date.toDate() : date;\n      }\n\n      userInput.value = null;\n      emitInput(result);\n    };\n\n    var onBeforeShow = function onBeforeShow() {\n      pickerActualVisible.value = true;\n    };\n\n    var onShow = function onShow() {\n      ctx.emit(\"visible-change\", true);\n    };\n\n    var onHide = function onHide() {\n      pickerActualVisible.value = false;\n      ctx.emit(\"visible-change\", false);\n    };\n\n    var focus = function focus() {\n      var focusStartInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var input = refStartInput.value;\n\n      if (!focusStartInput && isRangeInput.value) {\n        input = refEndInput.value;\n      }\n\n      if (input) {\n        input.focus();\n      }\n    };\n\n    var handleFocus = function handleFocus(e) {\n      if (props.readonly || pickerDisabled.value || pickerVisible.value) return;\n      pickerVisible.value = true;\n      ctx.emit(\"focus\", e);\n    };\n\n    var handleBlur = function handleBlur() {\n      var _a;\n\n      (_a = refPopper.value) == null ? void 0 : _a.onClose();\n      blurInput();\n    };\n\n    var pickerDisabled = computed(function () {\n      return props.disabled || elForm.disabled;\n    });\n    var parsedValue = computed(function () {\n      var result;\n\n      if (valueIsEmpty.value) {\n        if (pickerOptions.value.getDefaultValue) {\n          result = pickerOptions.value.getDefaultValue();\n        }\n      } else {\n        if (Array.isArray(props.modelValue)) {\n          result = props.modelValue.map(function (_) {\n            return parser(_, props.valueFormat, lang.value);\n          });\n        } else {\n          result = parser(props.modelValue, props.valueFormat, lang.value);\n        }\n      }\n\n      if (pickerOptions.value.getRangeAvailableTime) {\n        var availableResult = pickerOptions.value.getRangeAvailableTime(result);\n\n        if (!isEqual(availableResult, result)) {\n          result = availableResult;\n          emitInput(Array.isArray(result) ? result.map(function (_) {\n            return _.toDate();\n          }) : result.toDate());\n        }\n      }\n\n      if (Array.isArray(result) && result.some(function (_) {\n        return !_;\n      })) {\n        result = [];\n      }\n\n      return result;\n    });\n    var displayValue = computed(function () {\n      if (!pickerOptions.value.panelReady) return;\n      var formattedValue = formatDayjsToString(parsedValue.value);\n\n      if (Array.isArray(userInput.value)) {\n        return [userInput.value[0] || formattedValue && formattedValue[0] || \"\", userInput.value[1] || formattedValue && formattedValue[1] || \"\"];\n      } else if (userInput.value !== null) {\n        return userInput.value;\n      }\n\n      if (!isTimePicker.value && valueIsEmpty.value) return;\n      if (!pickerVisible.value && valueIsEmpty.value) return;\n\n      if (formattedValue) {\n        return isDatesPicker.value ? formattedValue.join(\", \") : formattedValue;\n      }\n\n      return \"\";\n    });\n    var isTimeLikePicker = computed(function () {\n      return props.type.includes(\"time\");\n    });\n    var isTimePicker = computed(function () {\n      return props.type.startsWith(\"time\");\n    });\n    var isDatesPicker = computed(function () {\n      return props.type === \"dates\";\n    });\n    var triggerIcon = computed(function () {\n      return props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar);\n    });\n    var showClose = ref(false);\n\n    var onClearIconClick = function onClearIconClick(event) {\n      if (props.readonly || pickerDisabled.value) return;\n\n      if (showClose.value) {\n        event.stopPropagation();\n        emitInput(null);\n        emitChange(null, true);\n        showClose.value = false;\n        pickerVisible.value = false;\n        pickerOptions.value.handleClear && pickerOptions.value.handleClear();\n      }\n    };\n\n    var valueIsEmpty = computed(function () {\n      return !props.modelValue || Array.isArray(props.modelValue) && !props.modelValue.length;\n    });\n\n    var onMouseEnter = function onMouseEnter() {\n      if (props.readonly || pickerDisabled.value) return;\n\n      if (!valueIsEmpty.value && props.clearable) {\n        showClose.value = true;\n      }\n    };\n\n    var onMouseLeave = function onMouseLeave() {\n      showClose.value = false;\n    };\n\n    var isRangeInput = computed(function () {\n      return props.type.includes(\"range\");\n    });\n    var pickerSize = useSize();\n    var popperPaneRef = computed(function () {\n      var _a, _b;\n\n      return (_b = (_a = refPopper.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    var popperEl = computed(function () {\n      var _a, _b;\n\n      return (_b = (_a = unref(refPopper)) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    var actualInputRef = computed(function () {\n      var _a;\n\n      if (unref(isRangeInput)) {\n        return unref(inputRef);\n      }\n\n      return (_a = unref(inputRef)) == null ? void 0 : _a.$el;\n    });\n    onClickOutside(actualInputRef, function (e) {\n      var unrefedPopperEl = unref(popperEl);\n      var inputEl = unref(actualInputRef);\n      if (unrefedPopperEl && (e.target === unrefedPopperEl || e.composedPath().includes(unrefedPopperEl)) || e.target === inputEl || e.composedPath().includes(inputEl)) return;\n      pickerVisible.value = false;\n    });\n    var userInput = ref(null);\n\n    var handleChange = function handleChange() {\n      if (userInput.value) {\n        var value = parseUserInputToDayjs(displayValue.value);\n\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(Array.isArray(value) ? value.map(function (_) {\n              return _.toDate();\n            }) : value.toDate());\n            userInput.value = null;\n          }\n        }\n      }\n\n      if (userInput.value === \"\") {\n        emitInput(null);\n        emitChange(null);\n        userInput.value = null;\n      }\n    };\n\n    var blurInput = function blurInput() {\n      refInput.value.forEach(function (input) {\n        return input.blur();\n      });\n    };\n\n    var parseUserInputToDayjs = function parseUserInputToDayjs(value) {\n      if (!value) return null;\n      return pickerOptions.value.parseUserInput(value);\n    };\n\n    var formatDayjsToString = function formatDayjsToString(value) {\n      if (!value) return null;\n      return pickerOptions.value.formatToString(value);\n    };\n\n    var isValidValue = function isValidValue(value) {\n      return pickerOptions.value.isValidValue(value);\n    };\n\n    var handleKeydown = function handleKeydown(event) {\n      var code = event.code;\n\n      if (code === EVENT_CODE.esc) {\n        pickerVisible.value = false;\n        event.stopPropagation();\n        return;\n      }\n\n      if (code === EVENT_CODE.tab) {\n        if (!isRangeInput.value) {\n          handleChange();\n          pickerVisible.value = false;\n          event.stopPropagation();\n        } else {\n          setTimeout(function () {\n            if (!refInput.value.includes(document.activeElement)) {\n              pickerVisible.value = false;\n              blurInput();\n            }\n          }, 0);\n        }\n\n        return;\n      }\n\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n        if (userInput.value === null || userInput.value === \"\" || isValidValue(parseUserInputToDayjs(displayValue.value))) {\n          handleChange();\n          pickerVisible.value = false;\n        }\n\n        event.stopPropagation();\n        return;\n      }\n\n      if (userInput.value) {\n        event.stopPropagation();\n        return;\n      }\n\n      if (pickerOptions.value.handleKeydown) {\n        pickerOptions.value.handleKeydown(event);\n      }\n    };\n\n    var onUserInput = function onUserInput(e) {\n      userInput.value = e;\n    };\n\n    var handleStartInput = function handleStartInput(event) {\n      if (userInput.value) {\n        userInput.value = [event.target.value, userInput.value[1]];\n      } else {\n        userInput.value = [event.target.value, null];\n      }\n    };\n\n    var handleEndInput = function handleEndInput(event) {\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], event.target.value];\n      } else {\n        userInput.value = [null, event.target.value];\n      }\n    };\n\n    var handleStartChange = function handleStartChange() {\n      var value = parseUserInputToDayjs(userInput.value && userInput.value[0]);\n\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), displayValue.value[1]];\n        var newValue = [value, parsedValue.value && parsedValue.value[1]];\n\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n\n    var handleEndChange = function handleEndChange() {\n      var value = parseUserInputToDayjs(userInput.value && userInput.value[1]);\n\n      if (value && value.isValid()) {\n        userInput.value = [displayValue.value[0], formatDayjsToString(value)];\n        var newValue = [parsedValue.value && parsedValue.value[0], value];\n\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n\n    var pickerOptions = ref({});\n\n    var onSetPickerOption = function onSetPickerOption(e) {\n      pickerOptions.value[e[0]] = e[1];\n      pickerOptions.value.panelReady = true;\n    };\n\n    var onCalendarChange = function onCalendarChange(e) {\n      ctx.emit(\"calendar-change\", e);\n    };\n\n    var onPanelChange = function onPanelChange(value, mode, view) {\n      ctx.emit(\"panel-change\", value, mode, view);\n    };\n\n    provide(\"EP_PICKER_BASE\", {\n      props: props\n    });\n    return {\n      nsDate: nsDate,\n      nsInput: nsInput,\n      nsRange: nsRange,\n      elPopperOptions: elPopperOptions,\n      isDatesPicker: isDatesPicker,\n      handleEndChange: handleEndChange,\n      handleStartChange: handleStartChange,\n      handleStartInput: handleStartInput,\n      handleEndInput: handleEndInput,\n      onUserInput: onUserInput,\n      handleChange: handleChange,\n      handleKeydown: handleKeydown,\n      popperPaneRef: popperPaneRef,\n      onClickOutside: onClickOutside,\n      pickerSize: pickerSize,\n      isRangeInput: isRangeInput,\n      onMouseLeave: onMouseLeave,\n      onMouseEnter: onMouseEnter,\n      onClearIconClick: onClearIconClick,\n      showClose: showClose,\n      triggerIcon: triggerIcon,\n      onPick: onPick,\n      handleFocus: handleFocus,\n      handleBlur: handleBlur,\n      pickerVisible: pickerVisible,\n      pickerActualVisible: pickerActualVisible,\n      displayValue: displayValue,\n      parsedValue: parsedValue,\n      setSelectionRange: setSelectionRange,\n      refPopper: refPopper,\n      inputRef: inputRef,\n      pickerDisabled: pickerDisabled,\n      onSetPickerOption: onSetPickerOption,\n      onCalendarChange: onCalendarChange,\n      onPanelChange: onPanelChange,\n      focus: focus,\n      onShow: onShow,\n      onBeforeShow: onBeforeShow,\n      onHide: onHide\n    };\n  }\n});\n\nvar _hoisted_1 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\nvar _hoisted_2 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_el_input = resolveComponent(\"el-input\");\n\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  return openBlock(), createBlock(_component_el_tooltip, mergeProps({\n    ref: \"refPopper\",\n    visible: _ctx.pickerVisible,\n    \"onUpdate:visible\": _cache[17] || (_cache[17] = function ($event) {\n      return _ctx.pickerVisible = $event;\n    }),\n    effect: \"light\",\n    pure: \"\",\n    trigger: \"click\"\n  }, _ctx.$attrs, {\n    \"append-to-body\": \"\",\n    transition: \"\".concat(_ctx.nsDate.namespace.value, \"-zoom-in-top\"),\n    \"popper-class\": [\"\".concat(_ctx.nsDate.namespace.value, \"-picker__popper\"), _ctx.popperClass],\n    \"popper-options\": _ctx.elPopperOptions,\n    \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"hide-after\": 0,\n    persistent: \"\",\n    onBeforeShow: _ctx.onBeforeShow,\n    onShow: _ctx.onShow,\n    onHide: _ctx.onHide\n  }), {\n    \"default\": withCtx(function () {\n      return [!_ctx.isRangeInput ? (openBlock(), createBlock(_component_el_input, {\n        key: 0,\n        id: _ctx.id,\n        ref: \"inputRef\",\n        \"model-value\": _ctx.displayValue,\n        name: _ctx.name,\n        size: _ctx.pickerSize,\n        disabled: _ctx.pickerDisabled,\n        placeholder: _ctx.placeholder,\n        \"class\": normalizeClass([_ctx.nsDate.b(\"editor\"), _ctx.nsDate.bm(\"editor\", _ctx.type), _ctx.$attrs[\"class\"]]),\n        style: normalizeStyle(_ctx.$attrs.style),\n        readonly: !_ctx.editable || _ctx.readonly || _ctx.isDatesPicker || _ctx.type === \"week\",\n        onInput: _ctx.onUserInput,\n        onFocus: _ctx.handleFocus,\n        onKeydown: _ctx.handleKeydown,\n        onChange: _ctx.handleChange,\n        onMouseenter: _ctx.onMouseEnter,\n        onMouseleave: _ctx.onMouseLeave,\n        onClick: _cache[0] || (_cache[0] = withModifiers(function () {}, [\"stop\"]))\n      }, {\n        prefix: withCtx(function () {\n          return [_ctx.triggerIcon ? (openBlock(), createBlock(_component_el_icon, {\n            key: 0,\n            \"class\": normalizeClass(_ctx.nsInput.e(\"icon\")),\n            onClick: _ctx.handleFocus\n          }, {\n            \"default\": withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.triggerIcon)))];\n            }),\n            _: 1\n          }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)];\n        }),\n        suffix: withCtx(function () {\n          return [_ctx.showClose && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n            key: 0,\n            \"class\": normalizeClass(\"\".concat(_ctx.nsInput.e(\"icon\"), \" clear-icon\")),\n            onClick: _ctx.onClearIconClick\n          }, {\n            \"default\": withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))];\n            }),\n            _: 1\n          }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 1\n      }, 8, [\"id\", \"model-value\", \"name\", \"size\", \"disabled\", \"placeholder\", \"class\", \"style\", \"readonly\", \"onInput\", \"onFocus\", \"onKeydown\", \"onChange\", \"onMouseenter\", \"onMouseleave\"])) : (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        ref: \"inputRef\",\n        \"class\": normalizeClass([_ctx.nsDate.b(\"editor\"), _ctx.nsDate.bm(\"editor\", _ctx.type), _ctx.nsInput.e(\"inner\"), _ctx.nsDate.is(\"disabled\", _ctx.pickerDisabled), _ctx.nsDate.is(\"active\", _ctx.pickerVisible), _ctx.nsRange.b(\"editor\"), _ctx.pickerSize ? _ctx.nsRange.bm(\"editor\", _ctx.pickerSize) : \"\", _ctx.$attrs[\"class\"]]),\n        style: normalizeStyle(_ctx.$attrs.style),\n        onClick: _cache[7] || (_cache[7] = function () {\n          return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);\n        }),\n        onMouseenter: _cache[8] || (_cache[8] = function () {\n          return _ctx.onMouseEnter && _ctx.onMouseEnter.apply(_ctx, arguments);\n        }),\n        onMouseleave: _cache[9] || (_cache[9] = function () {\n          return _ctx.onMouseLeave && _ctx.onMouseLeave.apply(_ctx, arguments);\n        }),\n        onKeydown: _cache[10] || (_cache[10] = function () {\n          return _ctx.handleKeydown && _ctx.handleKeydown.apply(_ctx, arguments);\n        })\n      }, [_ctx.triggerIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        \"class\": normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsRange.e(\"icon\")]),\n        onClick: _ctx.handleFocus\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.triggerIcon)))];\n        }),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"input\", {\n        id: _ctx.id && _ctx.id[0],\n        autocomplete: \"off\",\n        name: _ctx.name && _ctx.name[0],\n        placeholder: _ctx.startPlaceholder,\n        value: _ctx.displayValue && _ctx.displayValue[0],\n        disabled: _ctx.pickerDisabled,\n        readonly: !_ctx.editable || _ctx.readonly,\n        \"class\": normalizeClass(_ctx.nsRange.b(\"input\")),\n        onInput: _cache[1] || (_cache[1] = function () {\n          return _ctx.handleStartInput && _ctx.handleStartInput.apply(_ctx, arguments);\n        }),\n        onChange: _cache[2] || (_cache[2] = function () {\n          return _ctx.handleStartChange && _ctx.handleStartChange.apply(_ctx, arguments);\n        }),\n        onFocus: _cache[3] || (_cache[3] = function () {\n          return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);\n        })\n      }, null, 42, _hoisted_1), renderSlot(_ctx.$slots, \"range-separator\", {}, function () {\n        return [createElementVNode(\"span\", {\n          \"class\": normalizeClass(_ctx.nsRange.b(\"separator\"))\n        }, toDisplayString(_ctx.rangeSeparator), 3)];\n      }), createElementVNode(\"input\", {\n        id: _ctx.id && _ctx.id[1],\n        autocomplete: \"off\",\n        name: _ctx.name && _ctx.name[1],\n        placeholder: _ctx.endPlaceholder,\n        value: _ctx.displayValue && _ctx.displayValue[1],\n        disabled: _ctx.pickerDisabled,\n        readonly: !_ctx.editable || _ctx.readonly,\n        \"class\": normalizeClass(_ctx.nsRange.b(\"input\")),\n        onFocus: _cache[4] || (_cache[4] = function () {\n          return _ctx.handleFocus && _ctx.handleFocus.apply(_ctx, arguments);\n        }),\n        onInput: _cache[5] || (_cache[5] = function () {\n          return _ctx.handleEndInput && _ctx.handleEndInput.apply(_ctx, arguments);\n        }),\n        onChange: _cache[6] || (_cache[6] = function () {\n          return _ctx.handleEndChange && _ctx.handleEndChange.apply(_ctx, arguments);\n        })\n      }, null, 42, _hoisted_2), _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        \"class\": normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsRange.e(\"close-icon\"), _defineProperty({}, _ctx.nsRange.e(\"close-icon--hidden\"), !_ctx.showClose)]),\n        onClick: _ctx.onClearIconClick\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))];\n        }),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 38))];\n    }),\n    content: withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"default\", {\n        visible: _ctx.pickerVisible,\n        actualVisible: _ctx.pickerActualVisible,\n        parsedValue: _ctx.parsedValue,\n        format: _ctx.format,\n        unlinkPanels: _ctx.unlinkPanels,\n        type: _ctx.type,\n        defaultValue: _ctx.defaultValue,\n        onPick: _cache[11] || (_cache[11] = function () {\n          return _ctx.onPick && _ctx.onPick.apply(_ctx, arguments);\n        }),\n        onSelectRange: _cache[12] || (_cache[12] = function () {\n          return _ctx.setSelectionRange && _ctx.setSelectionRange.apply(_ctx, arguments);\n        }),\n        onSetPickerOption: _cache[13] || (_cache[13] = function () {\n          return _ctx.onSetPickerOption && _ctx.onSetPickerOption.apply(_ctx, arguments);\n        }),\n        onCalendarChange: _cache[14] || (_cache[14] = function () {\n          return _ctx.onCalendarChange && _ctx.onCalendarChange.apply(_ctx, arguments);\n        }),\n        onPanelChange: _cache[15] || (_cache[15] = function () {\n          return _ctx.onPanelChange && _ctx.onPanelChange.apply(_ctx, arguments);\n        }),\n        onMousedown: _cache[16] || (_cache[16] = withModifiers(function () {}, [\"stop\"]))\n      })];\n    }),\n    _: 3\n  }, 16, [\"visible\", \"transition\", \"popper-class\", \"popper-options\", \"onBeforeShow\", \"onShow\", \"onHide\"]);\n}\n\nvar CommonPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/common/picker.vue\"]]);\n\nexport { CommonPicker as default };","map":{"version":3,"mappings":"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","names":["dateEquals","a","b","aIsDate","bIsDate","getTime","valueEquals","Array","aIsArray","bIsArray","length","every","item","index","parser","date","format","lang","day","isEmpty","dayjs","locale","isValid","formatter","_sfc_main","defineComponent","name","components","ElInput","ElTooltip","ElIcon","props","emits","setup","ctx","useLocale","useNamespace","elForm","formContextKey","elFormItem","formItemContextKey","elPopperOptions","refPopper","ref","inputRef","watch","val","_a","userInput","value","nextTick","emitChange","blurInput","valueOnOpen","modelValue","formatValue","valueFormat","computed","refStartInput","refInput","refEndInput","setSelectionRange","_inputs","start","end","focus","pickerVisible","visible","result","emitInput","pickerActualVisible","emit","focusStartInput","input","pickerDisabled","e","getDefaultValue","getRangeAvailableTime","_","pickerOptions","panelReady","formattedValue","formatDayjsToString","valueIsEmpty","onClearIconClick","event","showClose","onMouseEnter","onMouseLeave","isRangeInput","pickerSize","popperPaneRef","_b","unref","onClickOutside","forEach","parseUserInputToDayjs","parseUserInput","formatToString","handleKeydown","handleChange","setTimeout","includes","document","code","isValidValue","handleStartInput","handleEndInput","target","displayValue","parsedValue","newValue","onSetPickerOption","onCalendarChange","provide","nsDate","nsInput","nsRange","isDatesPicker","handleEndChange","handleStartChange","onUserInput","triggerIcon","onPick","handleFocus","handleBlur","_hoisted_1","_hoisted_2","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_el_input","_component_el_tooltip","effect","pure","trigger","transition","onBeforeShow","onShow","onHide","_withCtx","_openBlock","key","id","size","disabled","placeholder","_normalizeClass","style","readonly","onInput","onFocus","onKeydown","onChange","onMouseleave","onClick","prefix","_createBlock","_createCommentVNode","suffix","is","onMouseenter","_createElementVNode","autocomplete","_renderSlot","normalizeClass","_toDisplayString","content","actualVisible","unlinkPanels","type","defaultValue"],"sources":["../../../../../../../packages/components/time-picker/src/common/picker.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"refPopper\"\n    v-model:visible=\"pickerVisible\"\n    effect=\"light\"\n    pure\n    trigger=\"click\"\n    v-bind=\"$attrs\"\n    append-to-body\n    :transition=\"`${nsDate.namespace.value}-zoom-in-top`\"\n    :popper-class=\"[`${nsDate.namespace.value}-picker__popper`, popperClass]\"\n    :popper-options=\"elPopperOptions\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :gpu-acceleration=\"false\"\n    :stop-popper-mouse-event=\"false\"\n    :hide-after=\"0\"\n    persistent\n    @before-show=\"onBeforeShow\"\n    @show=\"onShow\"\n    @hide=\"onHide\"\n  >\n    <template #default>\n      <el-input\n        v-if=\"!isRangeInput\"\n        :id=\"id\"\n        ref=\"inputRef\"\n        :model-value=\"displayValue\"\n        :name=\"name\"\n        :size=\"pickerSize\"\n        :disabled=\"pickerDisabled\"\n        :placeholder=\"placeholder\"\n        :class=\"[nsDate.b('editor'), nsDate.bm('editor', type), $attrs.class]\"\n        :style=\"$attrs.style\"\n        :readonly=\"!editable || readonly || isDatesPicker || type === 'week'\"\n        @input=\"onUserInput\"\n        @focus=\"handleFocus\"\n        @keydown=\"handleKeydown\"\n        @change=\"handleChange\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @click.stop\n      >\n        <template #prefix>\n          <el-icon\n            v-if=\"triggerIcon\"\n            :class=\"nsInput.e('icon')\"\n            @click=\"handleFocus\"\n          >\n            <component :is=\"triggerIcon\" />\n          </el-icon>\n        </template>\n        <template #suffix>\n          <el-icon\n            v-if=\"showClose && clearIcon\"\n            :class=\"`${nsInput.e('icon')} clear-icon`\"\n            @click=\"onClearIconClick\"\n          >\n            <component :is=\"clearIcon\" />\n          </el-icon>\n        </template>\n      </el-input>\n      <div\n        v-else\n        ref=\"inputRef\"\n        :class=\"[\n          nsDate.b('editor'),\n          nsDate.bm('editor', type),\n          nsInput.e('inner'),\n          nsDate.is('disabled', pickerDisabled),\n          nsDate.is('active', pickerVisible),\n          nsRange.b('editor'),\n          pickerSize ? nsRange.bm('editor', pickerSize) : '',\n          $attrs.class,\n        ]\"\n        :style=\"$attrs.style\"\n        @click=\"handleFocus\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @keydown=\"handleKeydown\"\n      >\n        <el-icon\n          v-if=\"triggerIcon\"\n          :class=\"[nsInput.e('icon'), nsRange.e('icon')]\"\n          @click=\"handleFocus\"\n        >\n          <component :is=\"triggerIcon\" />\n        </el-icon>\n        <input\n          :id=\"id && id[0]\"\n          autocomplete=\"off\"\n          :name=\"name && name[0]\"\n          :placeholder=\"startPlaceholder\"\n          :value=\"displayValue && displayValue[0]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          :class=\"nsRange.b('input')\"\n          @input=\"handleStartInput\"\n          @change=\"handleStartChange\"\n          @focus=\"handleFocus\"\n        />\n        <slot name=\"range-separator\">\n          <span :class=\"nsRange.b('separator')\">{{ rangeSeparator }}</span>\n        </slot>\n        <input\n          :id=\"id && id[1]\"\n          autocomplete=\"off\"\n          :name=\"name && name[1]\"\n          :placeholder=\"endPlaceholder\"\n          :value=\"displayValue && displayValue[1]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          :class=\"nsRange.b('input')\"\n          @focus=\"handleFocus\"\n          @input=\"handleEndInput\"\n          @change=\"handleEndChange\"\n        />\n        <el-icon\n          v-if=\"clearIcon\"\n          :class=\"[\n            nsInput.e('icon'),\n            nsRange.e('close-icon'),\n            {\n              [nsRange.e('close-icon--hidden')]: !showClose,\n            },\n          ]\"\n          @click=\"onClearIconClick\"\n        >\n          <component :is=\"clearIcon\" />\n        </el-icon>\n      </div>\n    </template>\n    <template #content>\n      <slot\n        :visible=\"pickerVisible\"\n        :actual-visible=\"pickerActualVisible\"\n        :parsed-value=\"parsedValue\"\n        :format=\"format\"\n        :unlink-panels=\"unlinkPanels\"\n        :type=\"type\"\n        :default-value=\"defaultValue\"\n        @pick=\"onPick\"\n        @select-range=\"setSelectionRange\"\n        @set-picker-option=\"onSetPickerOption\"\n        @calendar-change=\"onCalendarChange\"\n        @panel-change=\"onPanelChange\"\n        @mousedown.stop\n      />\n    </template>\n  </el-tooltip>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  unref,\n  watch,\n} from 'vue'\nimport dayjs from 'dayjs'\nimport { isEqual } from 'lodash-unified'\nimport { onClickOutside } from '@vueuse/core'\nimport { useLocale, useNamespace, useSize } from '@element-plus/hooks'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport ElInput from '@element-plus/components/input'\nimport ElIcon from '@element-plus/components/icon'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { debugWarn, isEmpty } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { Calendar, Clock } from '@element-plus/icons-vue'\nimport { timePickerDefaultProps } from './props'\n\nimport type { Dayjs } from 'dayjs'\nimport type { ComponentPublicInstance } from 'vue'\nimport type { FormContext, FormItemContext } from '@element-plus/tokens'\nimport type { Options } from '@popperjs/core'\n\ninterface PickerOptions {\n  isValidValue: (date: Dayjs) => boolean\n  handleKeydown: (event: KeyboardEvent) => void\n  parseUserInput: (value: Dayjs) => dayjs.Dayjs\n  formatToString: (value: Dayjs) => string | string[]\n  getRangeAvailableTime: (date: Dayjs) => dayjs.Dayjs\n  getDefaultValue: () => Dayjs\n  panelReady: boolean\n  handleClear: () => void\n}\n\n// Date object and string\nconst dateEquals = function (a: Date | any, b: Date | any) {\n  const aIsDate = a instanceof Date\n  const bIsDate = b instanceof Date\n  if (aIsDate && bIsDate) {\n    return a.getTime() === b.getTime()\n  }\n  if (!aIsDate && !bIsDate) {\n    return a === b\n  }\n  return false\n}\n\nconst valueEquals = function (a: Array<Date> | any, b: Array<Date> | any) {\n  const aIsArray = Array.isArray(a)\n  const bIsArray = Array.isArray(b)\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false\n    }\n    return (a as Array<Date>).every((item, index) => dateEquals(item, b[index]))\n  }\n  if (!aIsArray && !bIsArray) {\n    return dateEquals(a, b)\n  }\n  return false\n}\n\nconst parser = function (\n  date: string | number | Date,\n  format: string,\n  lang: string\n): Dayjs {\n  const day =\n    isEmpty(format) || format === 'x'\n      ? dayjs(date).locale(lang)\n      : dayjs(date, format).locale(lang)\n  return day.isValid() ? day : undefined\n}\n\nconst formatter = function (\n  date: string | number | Date,\n  format: string,\n  lang: string\n) {\n  if (isEmpty(format)) return date\n  if (format === 'x') return +date\n  return dayjs(date).locale(lang).format(format)\n}\n\nexport default defineComponent({\n  name: 'Picker',\n  components: {\n    ElInput,\n    ElTooltip,\n    ElIcon,\n  },\n  props: timePickerDefaultProps,\n  emits: [\n    'update:modelValue',\n    'change',\n    'focus',\n    'blur',\n    'calendar-change',\n    'panel-change',\n    'visible-change',\n  ],\n  setup(props, ctx) {\n    const { lang } = useLocale()\n\n    const nsDate = useNamespace('date')\n    const nsInput = useNamespace('input')\n    const nsRange = useNamespace('range')\n\n    const elForm = inject(formContextKey, {} as FormContext)\n    const elFormItem = inject(formItemContextKey, {} as FormItemContext)\n    const elPopperOptions = inject('ElPopperOptions', {} as Options)\n\n    const refPopper = ref<InstanceType<typeof ElTooltip>>()\n    const inputRef = ref<HTMLElement | ComponentPublicInstance>()\n    const pickerVisible = ref(false)\n    const pickerActualVisible = ref(false)\n    const valueOnOpen = ref(null)\n\n    watch(pickerVisible, (val) => {\n      if (!val) {\n        userInput.value = null\n        nextTick(() => {\n          emitChange(props.modelValue)\n        })\n        ctx.emit('blur')\n        blurInput()\n        props.validateEvent &&\n          elFormItem.validate?.('blur').catch((err) => debugWarn(err))\n      } else {\n        valueOnOpen.value = props.modelValue\n      }\n    })\n    const emitChange = (val, isClear?: boolean) => {\n      // determine user real change only\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        ctx.emit('change', val)\n        props.validateEvent &&\n          elFormItem.validate?.('change').catch((err) => debugWarn(err))\n      }\n    }\n    const emitInput = (val) => {\n      if (!valueEquals(props.modelValue, val)) {\n        let formatValue\n        if (Array.isArray(val)) {\n          formatValue = val.map((_) =>\n            formatter(_, props.valueFormat, lang.value)\n          )\n        } else if (val) {\n          formatValue = formatter(val, props.valueFormat, lang.value)\n        }\n        ctx.emit('update:modelValue', val ? formatValue : val, lang.value)\n      }\n    }\n    const refInput = computed<HTMLInputElement[]>(() => {\n      if (inputRef.value) {\n        const _r = isRangeInput.value\n          ? inputRef.value\n          : (inputRef.value as any as ComponentPublicInstance).$el\n        return Array.from<HTMLInputElement>(_r.querySelectorAll('input'))\n      }\n      return []\n    })\n    const refStartInput = computed(() => {\n      return refInput?.value[0]\n    })\n    const refEndInput = computed(() => {\n      return refInput?.value[1]\n    })\n    const setSelectionRange = (start, end, pos) => {\n      const _inputs = refInput.value\n      if (!_inputs.length) return\n      if (!pos || pos === 'min') {\n        _inputs[0].setSelectionRange(start, end)\n        _inputs[0].focus()\n      } else if (pos === 'max') {\n        _inputs[1].setSelectionRange(start, end)\n        _inputs[1].focus()\n      }\n    }\n    const onPick = (date: any = '', visible = false) => {\n      pickerVisible.value = visible\n      let result\n      if (Array.isArray(date)) {\n        result = date.map((_) => _.toDate())\n      } else {\n        // clear btn emit null\n        result = date ? date.toDate() : date\n      }\n      userInput.value = null\n      emitInput(result)\n    }\n\n    const onBeforeShow = () => {\n      pickerActualVisible.value = true\n    }\n\n    const onShow = () => {\n      ctx.emit('visible-change', true)\n    }\n\n    const onHide = () => {\n      pickerActualVisible.value = false\n      ctx.emit('visible-change', false)\n    }\n\n    const focus = (focusStartInput = true) => {\n      let input = refStartInput.value\n      if (!focusStartInput && isRangeInput.value) {\n        input = refEndInput.value\n      }\n      if (input) {\n        input.focus()\n      }\n    }\n\n    const handleFocus = (e) => {\n      if (props.readonly || pickerDisabled.value || pickerVisible.value) return\n      pickerVisible.value = true\n      ctx.emit('focus', e)\n    }\n\n    const handleBlur = () => {\n      refPopper.value?.onClose()\n      blurInput()\n    }\n\n    const pickerDisabled = computed(() => {\n      return props.disabled || elForm.disabled\n    })\n\n    const parsedValue = computed(() => {\n      let result\n      if (valueIsEmpty.value) {\n        if (pickerOptions.value.getDefaultValue) {\n          result = pickerOptions.value.getDefaultValue()\n        }\n      } else {\n        if (Array.isArray(props.modelValue)) {\n          result = props.modelValue.map((_) =>\n            parser(_, props.valueFormat, lang.value)\n          )\n        } else {\n          result = parser(props.modelValue, props.valueFormat, lang.value)\n        }\n      }\n\n      if (pickerOptions.value.getRangeAvailableTime) {\n        const availableResult =\n          pickerOptions.value.getRangeAvailableTime(result)\n        if (!isEqual(availableResult, result)) {\n          result = availableResult\n          emitInput(\n            Array.isArray(result)\n              ? result.map((_) => _.toDate())\n              : result.toDate()\n          )\n        }\n      }\n      if (Array.isArray(result) && result.some((_) => !_)) {\n        result = []\n      }\n      return result\n    })\n\n    const displayValue = computed(() => {\n      if (!pickerOptions.value.panelReady) return\n      const formattedValue = formatDayjsToString(parsedValue.value)\n      if (Array.isArray(userInput.value)) {\n        return [\n          userInput.value[0] || (formattedValue && formattedValue[0]) || '',\n          userInput.value[1] || (formattedValue && formattedValue[1]) || '',\n        ]\n      } else if (userInput.value !== null) {\n        return userInput.value\n      }\n      if (!isTimePicker.value && valueIsEmpty.value) return\n      if (!pickerVisible.value && valueIsEmpty.value) return\n      if (formattedValue) {\n        return isDatesPicker.value\n          ? (formattedValue as Array<string>).join(', ')\n          : formattedValue\n      }\n      return ''\n    })\n\n    const isTimeLikePicker = computed(() => props.type.includes('time'))\n\n    const isTimePicker = computed(() => props.type.startsWith('time'))\n\n    const isDatesPicker = computed(() => props.type === 'dates')\n\n    const triggerIcon = computed(\n      () => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar)\n    )\n\n    const showClose = ref(false)\n\n    const onClearIconClick = (event) => {\n      if (props.readonly || pickerDisabled.value) return\n      if (showClose.value) {\n        event.stopPropagation()\n        emitInput(null)\n        emitChange(null, true)\n        showClose.value = false\n        pickerVisible.value = false\n        pickerOptions.value.handleClear && pickerOptions.value.handleClear()\n      }\n    }\n    const valueIsEmpty = computed(() => {\n      return (\n        !props.modelValue ||\n        (Array.isArray(props.modelValue) && !props.modelValue.length)\n      )\n    })\n    const onMouseEnter = () => {\n      if (props.readonly || pickerDisabled.value) return\n      if (!valueIsEmpty.value && props.clearable) {\n        showClose.value = true\n      }\n    }\n    const onMouseLeave = () => {\n      showClose.value = false\n    }\n    const isRangeInput = computed(() => {\n      return props.type.includes('range')\n    })\n\n    const pickerSize = useSize()\n\n    const popperPaneRef = computed(() => {\n      return refPopper.value?.popperRef?.contentRef\n    })\n\n    const popperEl = computed(() => unref(refPopper)?.popperRef?.contentRef)\n    const actualInputRef = computed(() => {\n      if (unref(isRangeInput)) {\n        return unref(inputRef)\n      }\n\n      return (unref(inputRef) as ComponentPublicInstance)?.$el\n    })\n\n    onClickOutside(actualInputRef, (e: PointerEvent) => {\n      const unrefedPopperEl = unref(popperEl)\n      const inputEl = unref(actualInputRef)\n      if (\n        (unrefedPopperEl &&\n          (e.target === unrefedPopperEl ||\n            e.composedPath().includes(unrefedPopperEl))) ||\n        e.target === inputEl ||\n        e.composedPath().includes(inputEl)\n      )\n        return\n      pickerVisible.value = false\n    })\n\n    const userInput = ref(null)\n\n    const handleChange = () => {\n      if (userInput.value) {\n        const value = parseUserInputToDayjs(displayValue.value)\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(\n              Array.isArray(value)\n                ? value.map((_) => _.toDate())\n                : value.toDate()\n            )\n            userInput.value = null\n          }\n        }\n      }\n      if (userInput.value === '') {\n        emitInput(null)\n        emitChange(null)\n        userInput.value = null\n      }\n    }\n\n    const blurInput = () => {\n      refInput.value.forEach((input) => input.blur())\n    }\n\n    const parseUserInputToDayjs = (value) => {\n      if (!value) return null\n      return pickerOptions.value.parseUserInput(value)\n    }\n\n    const formatDayjsToString = (value) => {\n      if (!value) return null\n      return pickerOptions.value.formatToString(value)\n    }\n\n    const isValidValue = (value) => {\n      return pickerOptions.value.isValidValue(value)\n    }\n\n    const handleKeydown = (event) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.esc) {\n        pickerVisible.value = false\n        event.stopPropagation()\n        return\n      }\n\n      if (code === EVENT_CODE.tab) {\n        if (!isRangeInput.value) {\n          handleChange()\n          pickerVisible.value = false\n          event.stopPropagation()\n        } else {\n          // user may change focus between two input\n          setTimeout(() => {\n            if (!refInput.value.includes(document.activeElement)) {\n              pickerVisible.value = false\n              blurInput()\n            }\n          }, 0)\n        }\n        return\n      }\n\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n        if (\n          userInput.value === null ||\n          userInput.value === '' ||\n          isValidValue(parseUserInputToDayjs(displayValue.value))\n        ) {\n          handleChange()\n          pickerVisible.value = false\n        }\n        event.stopPropagation()\n        return\n      }\n\n      // if user is typing, do not let picker handle key input\n      if (userInput.value) {\n        event.stopPropagation()\n        return\n      }\n\n      if (pickerOptions.value.handleKeydown) {\n        pickerOptions.value.handleKeydown(event)\n      }\n    }\n    const onUserInput = (e) => {\n      userInput.value = e\n    }\n\n    const handleStartInput = (event) => {\n      if (userInput.value) {\n        userInput.value = [event.target.value, userInput.value[1]]\n      } else {\n        userInput.value = [event.target.value, null]\n      }\n    }\n\n    const handleEndInput = (event) => {\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], event.target.value]\n      } else {\n        userInput.value = [null, event.target.value]\n      }\n    }\n\n    const handleStartChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[0])\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), displayValue.value[1]]\n        const newValue = [value, parsedValue.value && parsedValue.value[1]]\n        if (isValidValue(newValue)) {\n          emitInput(newValue)\n          userInput.value = null\n        }\n      }\n    }\n\n    const handleEndChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[1])\n      if (value && value.isValid()) {\n        userInput.value = [displayValue.value[0], formatDayjsToString(value)]\n        const newValue = [parsedValue.value && parsedValue.value[0], value]\n        if (isValidValue(newValue)) {\n          emitInput(newValue)\n          userInput.value = null\n        }\n      }\n    }\n\n    const pickerOptions = ref<Partial<PickerOptions>>({})\n    const onSetPickerOption = <T extends keyof PickerOptions>(\n      e: [T, PickerOptions[T]]\n    ) => {\n      pickerOptions.value[e[0]] = e[1]\n      pickerOptions.value.panelReady = true\n    }\n\n    const onCalendarChange = (e) => {\n      ctx.emit('calendar-change', e)\n    }\n\n    const onPanelChange = (value, mode, view) => {\n      ctx.emit('panel-change', value, mode, view)\n    }\n\n    provide('EP_PICKER_BASE', {\n      props,\n    })\n\n    return {\n      nsDate,\n      nsInput,\n      nsRange,\n      // injected popper options\n      elPopperOptions,\n\n      isDatesPicker,\n      handleEndChange,\n      handleStartChange,\n      handleStartInput,\n      handleEndInput,\n      onUserInput,\n      handleChange,\n      handleKeydown,\n      popperPaneRef,\n      onClickOutside,\n      pickerSize,\n      isRangeInput,\n      onMouseLeave,\n      onMouseEnter,\n      onClearIconClick,\n      showClose,\n      triggerIcon,\n      onPick,\n      handleFocus,\n      handleBlur,\n      pickerVisible,\n      pickerActualVisible,\n      displayValue,\n      parsedValue,\n      setSelectionRange,\n      refPopper,\n      inputRef,\n      pickerDisabled,\n      onSetPickerOption,\n      onCalendarChange,\n      onPanelChange,\n      focus,\n      onShow,\n      onBeforeShow,\n      onHide,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}