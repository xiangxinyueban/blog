{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport { defineComponent, ref, computed, nextTick, onMounted, watch, resolveComponent, resolveDirective, openBlock, createElementBlock, normalizeClass, Fragment, renderList, createBlock, withCtx, createTextVNode, toDisplayString, createCommentVNode, withDirectives, createVNode, createElementVNode } from 'vue';\nimport { debounce } from 'lodash-unified';\nimport '../../../../directives/index.mjs';\nimport { ElScrollbar } from '../../../scrollbar/index.mjs';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ArrowUp, ArrowDown } from '@element-plus/icons-vue';\nimport '../../../../hooks/index.mjs';\nimport { getTimeLists } from './useTimePicker.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport RepeatClick from '../../../../directives/repeat-click/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  directives: {\n    repeatClick: RepeatClick\n  },\n  components: {\n    ElScrollbar: ElScrollbar,\n    ElIcon: ElIcon,\n    ArrowUp: ArrowUp,\n    ArrowDown: ArrowDown\n  },\n  props: {\n    role: {\n      type: String,\n      required: true\n    },\n    spinnerDate: {\n      type: Object,\n      required: true\n    },\n    showSeconds: {\n      type: Boolean,\n      \"default\": true\n    },\n    arrowControl: Boolean,\n    amPmMode: {\n      type: String,\n      \"default\": \"\"\n    },\n    disabledHours: {\n      type: Function\n    },\n    disabledMinutes: {\n      type: Function\n    },\n    disabledSeconds: {\n      type: Function\n    }\n  },\n  emits: [\"change\", \"select-range\", \"set-option\"],\n  setup: function setup(props, ctx) {\n    var ns = useNamespace(\"time\");\n    var isScrolling = false;\n    var debouncedResetScroll = debounce(function (type) {\n      isScrolling = false;\n      adjustCurrentSpinner(type);\n    }, 200);\n    var currentScrollbar = ref(null);\n    var listHoursRef = ref(null);\n    var listMinutesRef = ref(null);\n    var listSecondsRef = ref(null);\n    var listRefsMap = {\n      hours: listHoursRef,\n      minutes: listMinutesRef,\n      seconds: listSecondsRef\n    };\n    var spinnerItems = computed(function () {\n      var arr = [\"hours\", \"minutes\", \"seconds\"];\n      return props.showSeconds ? arr : arr.slice(0, 2);\n    });\n    var hours = computed(function () {\n      return props.spinnerDate.hour();\n    });\n    var minutes = computed(function () {\n      return props.spinnerDate.minute();\n    });\n    var seconds = computed(function () {\n      return props.spinnerDate.second();\n    });\n    var timePartsMap = computed(function () {\n      return {\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n      };\n    });\n    var hoursList = computed(function () {\n      return getHoursList(props.role);\n    });\n    var minutesList = computed(function () {\n      return getMinutesList(hours.value, props.role);\n    });\n    var secondsList = computed(function () {\n      return getSecondsList(hours.value, minutes.value, props.role);\n    });\n    var listMap = computed(function () {\n      return {\n        hours: hoursList,\n        minutes: minutesList,\n        seconds: secondsList\n      };\n    });\n    var arrowHourList = computed(function () {\n      var hour = hours.value;\n      return [hour > 0 ? hour - 1 : void 0, hour, hour < 23 ? hour + 1 : void 0];\n    });\n    var arrowMinuteList = computed(function () {\n      var minute = minutes.value;\n      return [minute > 0 ? minute - 1 : void 0, minute, minute < 59 ? minute + 1 : void 0];\n    });\n    var arrowSecondList = computed(function () {\n      var second = seconds.value;\n      return [second > 0 ? second - 1 : void 0, second, second < 59 ? second + 1 : void 0];\n    });\n    var arrowListMap = computed(function () {\n      return {\n        hours: arrowHourList,\n        minutes: arrowMinuteList,\n        seconds: arrowSecondList\n      };\n    });\n\n    var getAmPmFlag = function getAmPmFlag(hour) {\n      var shouldShowAmPm = !!props.amPmMode;\n      if (!shouldShowAmPm) return \"\";\n      var isCapital = props.amPmMode === \"A\";\n      var content = hour < 12 ? \" am\" : \" pm\";\n      if (isCapital) content = content.toUpperCase();\n      return content;\n    };\n\n    var emitSelectRange = function emitSelectRange(type) {\n      if (type === \"hours\") {\n        ctx.emit(\"select-range\", 0, 2);\n      } else if (type === \"minutes\") {\n        ctx.emit(\"select-range\", 3, 5);\n      } else if (type === \"seconds\") {\n        ctx.emit(\"select-range\", 6, 8);\n      }\n\n      currentScrollbar.value = type;\n    };\n\n    var adjustCurrentSpinner = function adjustCurrentSpinner(type) {\n      adjustSpinner(type, timePartsMap.value[type].value);\n    };\n\n    var adjustSpinners = function adjustSpinners() {\n      adjustCurrentSpinner(\"hours\");\n      adjustCurrentSpinner(\"minutes\");\n      adjustCurrentSpinner(\"seconds\");\n    };\n\n    var getScrollbarElement = function getScrollbarElement(el) {\n      return el.querySelector(\".\".concat(ns.namespace.value, \"-scrollbar__wrap\"));\n    };\n\n    var adjustSpinner = function adjustSpinner(type, value) {\n      if (props.arrowControl) return;\n      var el = listRefsMap[type];\n\n      if (el && el.$el) {\n        getScrollbarElement(el.$el).scrollTop = Math.max(0, value * typeItemHeight(type));\n      }\n    };\n\n    var typeItemHeight = function typeItemHeight(type) {\n      var el = listRefsMap[type];\n      return el.$el.querySelector(\"li\").offsetHeight;\n    };\n\n    var onIncreaseClick = function onIncreaseClick() {\n      scrollDown(1);\n    };\n\n    var onDecreaseClick = function onDecreaseClick() {\n      scrollDown(-1);\n    };\n\n    var scrollDown = function scrollDown(step) {\n      if (!currentScrollbar.value) {\n        emitSelectRange(\"hours\");\n      }\n\n      var label = currentScrollbar.value;\n      var now = timePartsMap.value[label].value;\n      var total = currentScrollbar.value === \"hours\" ? 24 : 60;\n      now = (now + step + total) % total;\n      modifyDateField(label, now);\n      adjustSpinner(label, now);\n      nextTick(function () {\n        return emitSelectRange(currentScrollbar.value);\n      });\n    };\n\n    var modifyDateField = function modifyDateField(type, value) {\n      var list = listMap.value[type].value;\n      var isDisabled = list[value];\n      if (isDisabled) return;\n\n      switch (type) {\n        case \"hours\":\n          ctx.emit(\"change\", props.spinnerDate.hour(value).minute(minutes.value).second(seconds.value));\n          break;\n\n        case \"minutes\":\n          ctx.emit(\"change\", props.spinnerDate.hour(hours.value).minute(value).second(seconds.value));\n          break;\n\n        case \"seconds\":\n          ctx.emit(\"change\", props.spinnerDate.hour(hours.value).minute(minutes.value).second(value));\n          break;\n      }\n    };\n\n    var handleClick = function handleClick(type, _ref) {\n      var value = _ref.value,\n          disabled = _ref.disabled;\n\n      if (!disabled) {\n        modifyDateField(type, value);\n        emitSelectRange(type);\n        adjustSpinner(type, value);\n      }\n    };\n\n    var handleScroll = function handleScroll(type) {\n      isScrolling = true;\n      debouncedResetScroll(type);\n      var value = Math.min(Math.round((getScrollbarElement(listRefsMap[type].$el).scrollTop - (scrollBarHeight(type) * 0.5 - 10) / typeItemHeight(type) + 3) / typeItemHeight(type)), type === \"hours\" ? 23 : 59);\n      modifyDateField(type, value);\n    };\n\n    var scrollBarHeight = function scrollBarHeight(type) {\n      return listRefsMap[type].$el.offsetHeight;\n    };\n\n    var bindScrollEvent = function bindScrollEvent() {\n      var bindFunction = function bindFunction(type) {\n        if (listRefsMap[type] && listRefsMap[type].$el) {\n          getScrollbarElement(listRefsMap[type].$el).onscroll = function () {\n            handleScroll(type);\n          };\n        }\n      };\n\n      bindFunction(\"hours\");\n      bindFunction(\"minutes\");\n      bindFunction(\"seconds\");\n    };\n\n    onMounted(function () {\n      nextTick(function () {\n        !props.arrowControl && bindScrollEvent();\n        adjustSpinners();\n        if (props.role === \"start\") emitSelectRange(\"hours\");\n      });\n    });\n\n    var setRef = function setRef(scrollbar, type) {\n      listRefsMap[type] = scrollbar;\n    };\n\n    ctx.emit(\"set-option\", [\"\".concat(props.role, \"_scrollDown\"), scrollDown]);\n    ctx.emit(\"set-option\", [\"\".concat(props.role, \"_emitSelectRange\"), emitSelectRange]);\n\n    var _getTimeLists = getTimeLists(props.disabledHours, props.disabledMinutes, props.disabledSeconds),\n        getHoursList = _getTimeLists.getHoursList,\n        getMinutesList = _getTimeLists.getMinutesList,\n        getSecondsList = _getTimeLists.getSecondsList;\n\n    watch(function () {\n      return props.spinnerDate;\n    }, function () {\n      if (isScrolling) return;\n      adjustSpinners();\n    });\n    return {\n      ns: ns,\n      setRef: setRef,\n      spinnerItems: spinnerItems,\n      currentScrollbar: currentScrollbar,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds,\n      hoursList: hoursList,\n      minutesList: minutesList,\n      arrowHourList: arrowHourList,\n      arrowMinuteList: arrowMinuteList,\n      arrowSecondList: arrowSecondList,\n      getAmPmFlag: getAmPmFlag,\n      emitSelectRange: emitSelectRange,\n      adjustCurrentSpinner: adjustCurrentSpinner,\n      typeItemHeight: typeItemHeight,\n      listHoursRef: listHoursRef,\n      listMinutesRef: listMinutesRef,\n      listSecondsRef: listSecondsRef,\n      onIncreaseClick: onIncreaseClick,\n      onDecreaseClick: onDecreaseClick,\n      handleClick: handleClick,\n      secondsList: secondsList,\n      timePartsMap: timePartsMap,\n      arrowListMap: arrowListMap,\n      listMap: listMap\n    };\n  }\n});\n\nvar _hoisted_1 = [\"onClick\"];\nvar _hoisted_2 = [\"onMouseenter\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  var _component_arrow_up = resolveComponent(\"arrow-up\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_arrow_down = resolveComponent(\"arrow-down\");\n\n  var _directive_repeat_click = resolveDirective(\"repeat-click\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    \"class\": normalizeClass([_ctx.ns.b(\"spinner\"), {\n      \"has-seconds\": _ctx.showSeconds\n    }])\n  }, [!_ctx.arrowControl ? (openBlock(true), createElementBlock(Fragment, {\n    key: 0\n  }, renderList(_ctx.spinnerItems, function (item) {\n    return openBlock(), createBlock(_component_el_scrollbar, {\n      key: item,\n      ref_for: true,\n      ref: function ref(scollbar) {\n        return _ctx.setRef(scollbar, item);\n      },\n      \"class\": normalizeClass(_ctx.ns.be(\"spinner\", \"wrapper\")),\n      \"wrap-style\": \"max-height: inherit;\",\n      \"view-class\": _ctx.ns.be(\"spinner\", \"list\"),\n      noresize: \"\",\n      tag: \"ul\",\n      onMouseenter: function onMouseenter($event) {\n        return _ctx.emitSelectRange(item);\n      },\n      onMousemove: function onMousemove($event) {\n        return _ctx.adjustCurrentSpinner(item);\n      }\n    }, {\n      \"default\": withCtx(function () {\n        return [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.listMap[item].value, function (disabled, key) {\n          return openBlock(), createElementBlock(\"li\", {\n            key: key,\n            \"class\": normalizeClass([_ctx.ns.be(\"spinner\", \"item\"), _ctx.ns.is(\"active\", key === _ctx.timePartsMap[item].value), _ctx.ns.is(\"disabled\", disabled)]),\n            onClick: function onClick($event) {\n              return _ctx.handleClick(item, {\n                value: key,\n                disabled: disabled\n              });\n            }\n          }, [item === \"hours\" ? (openBlock(), createElementBlock(Fragment, {\n            key: 0\n          }, [createTextVNode(toDisplayString((\"0\" + (_ctx.amPmMode ? key % 12 || 12 : key)).slice(-2)) + toDisplayString(_ctx.getAmPmFlag(key)), 1)], 2112)) : (openBlock(), createElementBlock(Fragment, {\n            key: 1\n          }, [createTextVNode(toDisplayString((\"0\" + key).slice(-2)), 1)], 2112))], 10, _hoisted_1);\n        }), 128))];\n      }),\n      _: 2\n    }, 1032, [\"class\", \"view-class\", \"onMouseenter\", \"onMousemove\"]);\n  }), 128)) : createCommentVNode(\"v-if\", true), _ctx.arrowControl ? (openBlock(true), createElementBlock(Fragment, {\n    key: 1\n  }, renderList(_ctx.spinnerItems, function (item) {\n    return openBlock(), createElementBlock(\"div\", {\n      key: item,\n      \"class\": normalizeClass([_ctx.ns.be(\"spinner\", \"wrapper\"), _ctx.ns.is(\"arrow\")]),\n      onMouseenter: function onMouseenter($event) {\n        return _ctx.emitSelectRange(item);\n      }\n    }, [withDirectives((openBlock(), createBlock(_component_el_icon, {\n      \"class\": normalizeClass([\"arrow-up\", _ctx.ns.be(\"spinner\", \"arrow\")])\n    }, {\n      \"default\": withCtx(function () {\n        return [createVNode(_component_arrow_up)];\n      }),\n      _: 1\n    }, 8, [\"class\"])), [[_directive_repeat_click, _ctx.onDecreaseClick]]), withDirectives((openBlock(), createBlock(_component_el_icon, {\n      \"class\": normalizeClass([\"arrow-down\", _ctx.ns.be(\"spinner\", \"arrow\")])\n    }, {\n      \"default\": withCtx(function () {\n        return [createVNode(_component_arrow_down)];\n      }),\n      _: 1\n    }, 8, [\"class\"])), [[_directive_repeat_click, _ctx.onIncreaseClick]]), createElementVNode(\"ul\", {\n      \"class\": normalizeClass(_ctx.ns.be(\"spinner\", \"list\"))\n    }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.arrowListMap[item].value, function (time, key) {\n      return openBlock(), createElementBlock(\"li\", {\n        key: key,\n        \"class\": normalizeClass([_ctx.ns.be(\"spinner\", \"item\"), _ctx.ns.is(\"active\", time === _ctx.timePartsMap[item].value), _ctx.ns.is(\"disabled\", _ctx.listMap[item].value[time])])\n      }, [typeof time === \"number\" ? (openBlock(), createElementBlock(Fragment, {\n        key: 0\n      }, [item === \"hours\" ? (openBlock(), createElementBlock(Fragment, {\n        key: 0\n      }, [createTextVNode(toDisplayString((\"0\" + (_ctx.amPmMode ? time % 12 || 12 : time)).slice(-2)) + toDisplayString(_ctx.getAmPmFlag(time)), 1)], 2112)) : (openBlock(), createElementBlock(Fragment, {\n        key: 1\n      }, [createTextVNode(toDisplayString((\"0\" + time).slice(-2)), 1)], 2112))], 2112)) : createCommentVNode(\"v-if\", true)], 2);\n    }), 128))], 2)], 42, _hoisted_2);\n  }), 128)) : createCommentVNode(\"v-if\", true)], 2);\n}\n\nvar TimeSpinner = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/basic-time-spinner.vue\"]]);\n\nexport { TimeSpinner as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","directives","repeatClick","components","ElScrollbar","ElIcon","ArrowUp","ArrowDown","props","role","type","required","spinnerDate","showSeconds","arrowControl","amPmMode","disabledHours","disabledMinutes","disabledSeconds","emits","setup","ctx","useNamespace","isScrolling","debounce","adjustCurrentSpinner","ref","listRefsMap","hours","minutes","seconds","computed","arr","hour","minute","second","getMinutesList","value","getSecondsList","getAmPmFlag","shouldShowAmPm","content","toUpperCase","emitSelectRange","currentScrollbar","adjustSpinner","timePartsMap","adjustSpinners","getScrollbarElement","el","querySelector","ns","namespace","$el","scrollTop","Math","max","typeItemHeight","offsetHeight","onIncreaseClick","scrollDown","onDecreaseClick","step","label","total","now","modifyDateField","nextTick","listMap","isDisabled","list","emit","handleClick","disabled","handleScroll","debouncedResetScroll","scrollBarHeight","bindScrollEvent","bindFunction","onscroll","onMounted","setRef","scrollbar","getTimeLists","getHoursList","watch","spinnerItems","hoursList","minutesList","arrowHourList","arrowMinuteList","arrowSecondList","listHoursRef","listMinutesRef","listSecondsRef","secondsList","arrowListMap","_createElementBlock","_normalizeClass","_ctx","b","key","item","_createBlock","ref_for","scollbar","be","noresize","tag","onMouseenter","$event","onMousemove","_Fragment","_renderList","is","onClick","openBlock","slice","_toDisplayString","_openBlock","_createVNode","_createElementVNode","time"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/basic-time-spinner.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b('spinner'), { 'has-seconds': showSeconds }]\">\n    <template v-if=\"!arrowControl\">\n      <el-scrollbar\n        v-for=\"item in spinnerItems\"\n        :key=\"item\"\n        :ref=\"(scollbar) => setRef(scollbar, item)\"\n        :class=\"ns.be('spinner', 'wrapper')\"\n        wrap-style=\"max-height: inherit;\"\n        :view-class=\"ns.be('spinner', 'list')\"\n        noresize\n        tag=\"ul\"\n        @mouseenter=\"emitSelectRange(item)\"\n        @mousemove=\"adjustCurrentSpinner(item)\"\n      >\n        <li\n          v-for=\"(disabled, key) in listMap[item].value\"\n          :key=\"key\"\n          :class=\"[\n            ns.be('spinner', 'item'),\n            ns.is('active', key === timePartsMap[item].value),\n            ns.is('disabled', disabled),\n          ]\"\n          @click=\"handleClick(item, { value: key, disabled })\"\n        >\n          <template v-if=\"item === 'hours'\">\n            {{ ('0' + (amPmMode ? key % 12 || 12 : key)).slice(-2)\n            }}{{ getAmPmFlag(key) }}\n          </template>\n          <template v-else>\n            {{ ('0' + key).slice(-2) }}\n          </template>\n        </li>\n      </el-scrollbar>\n    </template>\n    <template v-if=\"arrowControl\">\n      <div\n        v-for=\"item in spinnerItems\"\n        :key=\"item\"\n        :class=\"[ns.be('spinner', 'wrapper'), ns.is('arrow')]\"\n        @mouseenter=\"emitSelectRange(item)\"\n      >\n        <el-icon\n          v-repeat-click=\"onDecreaseClick\"\n          :class=\"['arrow-up', ns.be('spinner', 'arrow')]\"\n        >\n          <arrow-up />\n        </el-icon>\n        <el-icon\n          v-repeat-click=\"onIncreaseClick\"\n          :class=\"['arrow-down', ns.be('spinner', 'arrow')]\"\n        >\n          <arrow-down />\n        </el-icon>\n        <ul :class=\"ns.be('spinner', 'list')\">\n          <li\n            v-for=\"(time, key) in arrowListMap[item].value\"\n            :key=\"key\"\n            :class=\"[\n              ns.be('spinner', 'item'),\n              ns.is('active', time === timePartsMap[item].value),\n              ns.is('disabled', listMap[item].value[time]),\n            ]\"\n          >\n            <template v-if=\"typeof time === 'number'\">\n              <template v-if=\"item === 'hours'\">\n                {{ ('0' + (amPmMode ? time % 12 || 12 : time)).slice(-2)\n                }}{{ getAmPmFlag(time) }}\n              </template>\n              <template v-else>\n                {{ ('0' + time).slice(-2) }}\n              </template>\n            </template>\n          </li>\n        </ul>\n      </div>\n    </template>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent, nextTick, onMounted, ref, watch } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { RepeatClick } from '@element-plus/directives'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElIcon from '@element-plus/components/icon'\nimport { ArrowDown, ArrowUp } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { getTimeLists } from './useTimePicker'\n\nimport type { PropType, Ref } from 'vue'\nimport type { Dayjs } from 'dayjs'\nimport type { Nullable } from '@element-plus/utils'\n\nexport default defineComponent({\n  directives: {\n    repeatClick: RepeatClick,\n  },\n\n  components: {\n    ElScrollbar,\n    ElIcon,\n    ArrowUp,\n    ArrowDown,\n  },\n\n  props: {\n    role: {\n      type: String,\n      required: true,\n    },\n    spinnerDate: {\n      type: Object as PropType<Dayjs>,\n      required: true,\n    },\n    showSeconds: {\n      type: Boolean,\n      default: true,\n    },\n    arrowControl: Boolean,\n    amPmMode: {\n      type: String,\n      default: '', // 'a': am/pm; 'A': AM/PM\n    },\n    disabledHours: {\n      type: Function,\n    },\n    disabledMinutes: {\n      type: Function,\n    },\n    disabledSeconds: {\n      type: Function,\n    },\n  },\n\n  emits: ['change', 'select-range', 'set-option'],\n\n  setup(props, ctx) {\n    const ns = useNamespace('time')\n    // data\n    let isScrolling = false\n    const debouncedResetScroll = debounce((type) => {\n      isScrolling = false\n      adjustCurrentSpinner(type)\n    }, 200)\n    const currentScrollbar = ref(null)\n    const listHoursRef: Ref<Nullable<HTMLElement>> = ref(null)\n    const listMinutesRef: Ref<Nullable<HTMLElement>> = ref(null)\n    const listSecondsRef: Ref<Nullable<HTMLElement>> = ref(null)\n    const listRefsMap = {\n      hours: listHoursRef,\n      minutes: listMinutesRef,\n      seconds: listSecondsRef,\n    }\n\n    // computed\n    const spinnerItems = computed(() => {\n      const arr = ['hours', 'minutes', 'seconds']\n      return props.showSeconds ? arr : arr.slice(0, 2)\n    })\n    const hours = computed(() => {\n      return props.spinnerDate.hour()\n    })\n    const minutes = computed(() => {\n      return props.spinnerDate.minute()\n    })\n    const seconds = computed(() => {\n      return props.spinnerDate.second()\n    })\n    const timePartsMap = computed(() => ({\n      hours,\n      minutes,\n      seconds,\n    }))\n    const hoursList = computed(() => {\n      return getHoursList(props.role)\n    })\n    const minutesList = computed(() => {\n      return getMinutesList(hours.value, props.role)\n    })\n    const secondsList = computed(() => {\n      return getSecondsList(hours.value, minutes.value, props.role)\n    })\n    const listMap = computed(() => ({\n      hours: hoursList,\n      minutes: minutesList,\n      seconds: secondsList,\n    }))\n    const arrowHourList = computed(() => {\n      const hour = hours.value\n      return [\n        hour > 0 ? hour - 1 : undefined,\n        hour,\n        hour < 23 ? hour + 1 : undefined,\n      ]\n    })\n    const arrowMinuteList = computed(() => {\n      const minute = minutes.value\n      return [\n        minute > 0 ? minute - 1 : undefined,\n        minute,\n        minute < 59 ? minute + 1 : undefined,\n      ]\n    })\n    const arrowSecondList = computed(() => {\n      const second = seconds.value\n      return [\n        second > 0 ? second - 1 : undefined,\n        second,\n        second < 59 ? second + 1 : undefined,\n      ]\n    })\n    const arrowListMap = computed(() => ({\n      hours: arrowHourList,\n      minutes: arrowMinuteList,\n      seconds: arrowSecondList,\n    }))\n    const getAmPmFlag = (hour) => {\n      const shouldShowAmPm = !!props.amPmMode\n      if (!shouldShowAmPm) return ''\n      const isCapital = props.amPmMode === 'A'\n      // todo locale\n      let content = hour < 12 ? ' am' : ' pm'\n      if (isCapital) content = content.toUpperCase()\n      return content\n    }\n\n    const emitSelectRange = (type) => {\n      if (type === 'hours') {\n        ctx.emit('select-range', 0, 2)\n      } else if (type === 'minutes') {\n        ctx.emit('select-range', 3, 5)\n      } else if (type === 'seconds') {\n        ctx.emit('select-range', 6, 8)\n      }\n      currentScrollbar.value = type\n    }\n\n    const adjustCurrentSpinner = (type) => {\n      adjustSpinner(type, timePartsMap.value[type].value)\n    }\n\n    // NOTE: used by datetime / date-range panel\n    //       renamed from adjustScrollTop\n    //       should try to refactory it\n    const adjustSpinners = () => {\n      adjustCurrentSpinner('hours')\n      adjustCurrentSpinner('minutes')\n      adjustCurrentSpinner('seconds')\n    }\n\n    const getScrollbarElement = (el: HTMLElement) =>\n      el.querySelector(`.${ns.namespace.value}-scrollbar__wrap`) as HTMLElement\n\n    const adjustSpinner = (type, value) => {\n      if (props.arrowControl) return\n      const el = listRefsMap[type]\n      if (el && el.$el) {\n        getScrollbarElement(el.$el).scrollTop = Math.max(\n          0,\n          value * typeItemHeight(type)\n        )\n      }\n    }\n\n    const typeItemHeight = (type) => {\n      const el = listRefsMap[type]\n      return el.$el.querySelector('li').offsetHeight\n    }\n\n    const onIncreaseClick = () => {\n      scrollDown(1)\n    }\n\n    const onDecreaseClick = () => {\n      scrollDown(-1)\n    }\n\n    const scrollDown = (step) => {\n      if (!currentScrollbar.value) {\n        emitSelectRange('hours')\n      }\n\n      const label = currentScrollbar.value\n      let now = timePartsMap.value[label].value\n      const total = currentScrollbar.value === 'hours' ? 24 : 60\n      now = (now + step + total) % total\n\n      modifyDateField(label, now)\n      adjustSpinner(label, now)\n      nextTick(() => emitSelectRange(currentScrollbar.value))\n    }\n\n    const modifyDateField = (type, value) => {\n      const list = listMap.value[type].value\n      const isDisabled = list[value]\n      if (isDisabled) return\n      switch (type) {\n        case 'hours':\n          ctx.emit(\n            'change',\n            props.spinnerDate\n              .hour(value)\n              .minute(minutes.value)\n              .second(seconds.value)\n          )\n          break\n        case 'minutes':\n          ctx.emit(\n            'change',\n            props.spinnerDate\n              .hour(hours.value)\n              .minute(value)\n              .second(seconds.value)\n          )\n          break\n        case 'seconds':\n          ctx.emit(\n            'change',\n            props.spinnerDate\n              .hour(hours.value)\n              .minute(minutes.value)\n              .second(value)\n          )\n          break\n      }\n    }\n\n    const handleClick = (type, { value, disabled }) => {\n      if (!disabled) {\n        modifyDateField(type, value)\n        emitSelectRange(type)\n        adjustSpinner(type, value)\n      }\n    }\n\n    const handleScroll = (type) => {\n      isScrolling = true\n      debouncedResetScroll(type)\n      const value = Math.min(\n        Math.round(\n          (getScrollbarElement(listRefsMap[type].$el).scrollTop -\n            (scrollBarHeight(type) * 0.5 - 10) / typeItemHeight(type) +\n            3) /\n            typeItemHeight(type)\n        ),\n        type === 'hours' ? 23 : 59\n      )\n      modifyDateField(type, value)\n    }\n\n    const scrollBarHeight = (type) => {\n      return listRefsMap[type].$el.offsetHeight\n    }\n\n    const bindScrollEvent = () => {\n      const bindFunction = (type) => {\n        if (listRefsMap[type] && listRefsMap[type].$el) {\n          getScrollbarElement(listRefsMap[type].$el).onscroll = () => {\n            // TODO: scroll is emitted when set scrollTop programatically\n            // should find better solutions in the future!\n            handleScroll(type)\n          }\n        }\n      }\n      bindFunction('hours')\n      bindFunction('minutes')\n      bindFunction('seconds')\n    }\n\n    onMounted(() => {\n      nextTick(() => {\n        !props.arrowControl && bindScrollEvent()\n        adjustSpinners()\n        // set selection on the first hour part\n        if (props.role === 'start') emitSelectRange('hours')\n      })\n    })\n\n    const setRef = (scrollbar, type) => {\n      listRefsMap[type] = scrollbar\n    }\n\n    ctx.emit('set-option', [`${props.role}_scrollDown`, scrollDown])\n    ctx.emit('set-option', [`${props.role}_emitSelectRange`, emitSelectRange])\n\n    const { getHoursList, getMinutesList, getSecondsList } = getTimeLists(\n      props.disabledHours,\n      props.disabledMinutes,\n      props.disabledSeconds\n    )\n\n    watch(\n      () => props.spinnerDate,\n      () => {\n        if (isScrolling) return\n        adjustSpinners()\n      }\n    )\n\n    return {\n      ns,\n\n      setRef,\n      spinnerItems,\n      currentScrollbar,\n      hours,\n      minutes,\n      seconds,\n      hoursList,\n      minutesList,\n      arrowHourList,\n      arrowMinuteList,\n      arrowSecondList,\n      getAmPmFlag,\n      emitSelectRange,\n      adjustCurrentSpinner,\n      typeItemHeight,\n      listHoursRef,\n      listMinutesRef,\n      listSecondsRef,\n      onIncreaseClick,\n      onDecreaseClick,\n      handleClick,\n      secondsList,\n      timePartsMap,\n      arrowListMap,\n      listMap,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}