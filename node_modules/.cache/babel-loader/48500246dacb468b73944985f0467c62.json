{"ast":null,"code":"import _toConsumableArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nexport { castArray as ensureArray } from 'lodash-unified';\n\nvar unique = function unique(arr) {\n  return _toConsumableArray(new Set(arr));\n};\n\nvar castArray = function castArray(arr) {\n  if (!arr && arr !== 0) return [];\n  return Array.isArray(arr) ? arr : [arr];\n};\n\nexport { castArray, unique };","map":{"version":3,"mappings":";;;;;;;;AAAY,IAACA,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD;AAAA,4BAAa,IAAIC,GAAJ,CAAQD,GAAR,CAAb;AAAA,CAAV;;AACA,IAACE,SAAS,GAAG,SAAZA,SAAY,CAACF,GAAD,EAAS;AAChC,MAAI,CAACA,GAAD,IAAQA,GAAG,KAAK,CAApB,EACE,OAAO,EAAP;AACF,SAAOG,KAAK,CAACC,OAAN,CAAcJ,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,CAAlC;AACF,CAJY","names":["unique","arr","Set","castArray","Array","isArray"],"sources":["../../../../packages/utils/arrays.ts"],"sourcesContent":["export const unique = <T>(arr: T[]) => [...new Set(arr)]\n\n// TODO: rename to `ensureArray`\n/** like `_.castArray`, except falsy value returns empty array. */\nexport const castArray = (arr: any): any[] => {\n  if (!arr && arr !== 0) return []\n  return Array.isArray(arr) ? arr : [arr]\n}\n\n// TODO: remove import alias\n// avoid naming conflicts\nexport { castArray as ensureArray } from 'lodash-unified'\n"]},"metadata":{},"sourceType":"module"}