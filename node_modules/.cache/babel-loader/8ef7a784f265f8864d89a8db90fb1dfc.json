{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, renderSlot, createCommentVNode } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { dividerProps } from './divider.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = {\n  name: \"ElDivider\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: dividerProps,\n  setup: function setup(__props) {\n    var props = __props;\n    var ns = useNamespace(\"divider\");\n    var dividerStyle = computed(function () {\n      return {\n        \"--el-border-style\": props.borderStyle\n      };\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass([unref(ns).b(), unref(ns).m(_ctx.direction)]),\n        style: normalizeStyle(unref(dividerStyle))\n      }, [_ctx.$slots[\"default\"] && _ctx.direction !== \"vertical\" ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass([unref(ns).e(\"text\"), unref(ns).is(_ctx.contentPosition)])\n      }, [renderSlot(_ctx.$slots, \"default\")], 2)) : createCommentVNode(\"v-if\", true)], 6);\n    };\n  }\n}));\n\nvar Divider = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/divider/src/divider.vue\"]]);\n\nexport { Divider as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AADA;AAGA,KAJA","names":[],"sources":["../../../../../../packages/components/divider/src/divider.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.m(direction)]\" :style=\"dividerStyle\">\n    <div\n      v-if=\"$slots.default && direction !== 'vertical'\"\n      :class=\"[ns.e('text'), ns.is(contentPosition)]\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { dividerProps } from './divider'\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElDivider',\n})\nconst props = defineProps(dividerProps)\nconst ns = useNamespace('divider')\nconst dividerStyle = computed(() => {\n  return {\n    '--el-border-style': props.borderStyle,\n  } as CSSProperties\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}