{"ast":null,"code":"import _toConsumableArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport { defineComponent, provide, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, createTextVNode, toDisplayString, createCommentVNode, Fragment, renderList, createBlock } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport DescriptionsRow from './descriptions-row.mjs';\nimport { elDescriptionsKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElDescriptions\",\n  components: _defineProperty({}, DescriptionsRow.name, DescriptionsRow),\n  props: {\n    border: {\n      type: Boolean,\n      \"default\": false\n    },\n    column: {\n      type: Number,\n      \"default\": 3\n    },\n    direction: {\n      type: String,\n      \"default\": \"horizontal\"\n    },\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    title: {\n      type: String,\n      \"default\": \"\"\n    },\n    extra: {\n      type: String,\n      \"default\": \"\"\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    provide(elDescriptionsKey, props);\n    var descriptionsSize = useSize();\n    var ns = useNamespace(\"descriptions\");\n    var descriptionKls = computed(function () {\n      return [ns.b(), ns.is(ns.m(descriptionsSize.value), !!descriptionsSize.value)];\n    });\n\n    var flattedChildren = function flattedChildren(children) {\n      var temp = Array.isArray(children) ? children : [children];\n      var res = [];\n      temp.forEach(function (child) {\n        if (Array.isArray(child.children)) {\n          res.push.apply(res, _toConsumableArray(flattedChildren(child.children)));\n        } else {\n          res.push(child);\n        }\n      });\n      return res;\n    };\n\n    var filledNode = function filledNode(node, span, count) {\n      var isLast = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!node.props) {\n        node.props = {};\n      }\n\n      if (span > count) {\n        node.props.span = count;\n      }\n\n      if (isLast) {\n        node.props.span = span;\n      }\n\n      return node;\n    };\n\n    var getRows = function getRows() {\n      var _a;\n\n      var children = flattedChildren((_a = slots[\"default\"]) == null ? void 0 : _a.call(slots)).filter(function (node) {\n        var _a2;\n\n        return ((_a2 = node == null ? void 0 : node.type) == null ? void 0 : _a2.name) === \"ElDescriptionsItem\";\n      });\n      var rows = [];\n      var temp = [];\n      var count = props.column;\n      var totalSpan = 0;\n      children.forEach(function (node, index) {\n        var _a2;\n\n        var span = ((_a2 = node.props) == null ? void 0 : _a2.span) || 1;\n\n        if (index < children.length - 1) {\n          totalSpan += span > count ? count : span;\n        }\n\n        if (index === children.length - 1) {\n          var lastSpan = props.column - totalSpan % props.column;\n          temp.push(filledNode(node, lastSpan, count, true));\n          rows.push(temp);\n          return;\n        }\n\n        if (span < count) {\n          count -= span;\n          temp.push(node);\n        } else {\n          temp.push(filledNode(node, span, count));\n          rows.push(temp);\n          count = props.column;\n          temp = [];\n        }\n      });\n      return rows;\n    };\n\n    return {\n      descriptionKls: descriptionKls,\n      getRows: getRows,\n      ns: ns\n    };\n  }\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_descriptions_row = resolveComponent(\"el-descriptions-row\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    \"class\": normalizeClass(_ctx.descriptionKls)\n  }, [_ctx.title || _ctx.extra || _ctx.$slots.title || _ctx.$slots.extra ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    \"class\": normalizeClass(_ctx.ns.e(\"header\"))\n  }, [createElementVNode(\"div\", {\n    \"class\": normalizeClass(_ctx.ns.e(\"title\"))\n  }, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n    return [createTextVNode(toDisplayString(_ctx.title), 1)];\n  })], 2), createElementVNode(\"div\", {\n    \"class\": normalizeClass(_ctx.ns.e(\"extra\"))\n  }, [renderSlot(_ctx.$slots, \"extra\", {}, function () {\n    return [createTextVNode(toDisplayString(_ctx.extra), 1)];\n  })], 2)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n    \"class\": normalizeClass(_ctx.ns.e(\"body\"))\n  }, [createElementVNode(\"table\", {\n    \"class\": normalizeClass([_ctx.ns.e(\"table\"), _ctx.ns.is(\"bordered\", _ctx.border)])\n  }, [createElementVNode(\"tbody\", null, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.getRows(), function (row, index) {\n    return openBlock(), createBlock(_component_el_descriptions_row, {\n      key: index,\n      row: row\n    }, null, 8, [\"row\"]);\n  }), 128))])], 2)], 2)], 2);\n}\n\nvar Descriptions = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/descriptions/src/index.vue\"]]);\n\nexport { Descriptions as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","DescriptionsRow","props","border","type","column","direction","size","validator","title","extra","setup","slots","provide","elDescriptionsKey","descriptionsSize","useSize","useNamespace","computed","ns","b","is","m","value","flattedChildren","children","temp","Array","res","child","push","filledNode","node","span","count","isLast","getRows","_a2","totalSpan","rows","descriptionKls","_ctx","_cache","$props","$setup","$data","$options","_openBlock","key","_createElementVNode","_renderSlot","_createTextVNode","_createCommentVNode","_normalizeClass"],"sources":["../../../../../../packages/components/descriptions/src/index.vue"],"sourcesContent":["<template>\n  <div :class=\"descriptionKls\">\n    <div\n      v-if=\"title || extra || $slots.title || $slots.extra\"\n      :class=\"ns.e('header')\"\n    >\n      <div :class=\"ns.e('title')\">\n        <slot name=\"title\">{{ title }}</slot>\n      </div>\n      <div :class=\"ns.e('extra')\">\n        <slot name=\"extra\">{{ extra }}</slot>\n      </div>\n    </div>\n\n    <div :class=\"ns.e('body')\">\n      <table :class=\"[ns.e('table'), ns.is('bordered', border)]\">\n        <tbody>\n          <template v-for=\"(row, index) in getRows()\" :key=\"index\">\n            <el-descriptions-row :row=\"row\" />\n          </template>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, provide } from 'vue'\nimport { isValidComponentSize } from '@element-plus/utils'\nimport { useNamespace, useSize } from '@element-plus/hooks'\nimport DescriptionsRow from './descriptions-row.vue'\nimport { elDescriptionsKey } from './token'\n\nimport type { PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\n\nexport default defineComponent({\n  name: 'ElDescriptions',\n  components: {\n    [DescriptionsRow.name]: DescriptionsRow,\n  },\n  props: {\n    border: {\n      type: Boolean,\n      default: false,\n    },\n    column: {\n      type: Number,\n      default: 3,\n    },\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    title: {\n      type: String,\n      default: '',\n    },\n    extra: {\n      type: String,\n      default: '',\n    },\n  },\n  setup(props, { slots }) {\n    provide(elDescriptionsKey, props)\n\n    const descriptionsSize = useSize()\n    const ns = useNamespace('descriptions')\n\n    const descriptionKls = computed(() => [\n      ns.b(),\n      ns.is(ns.m(descriptionsSize.value), !!descriptionsSize.value),\n    ])\n\n    const flattedChildren = (children) => {\n      const temp = Array.isArray(children) ? children : [children]\n      const res = []\n      temp.forEach((child) => {\n        if (Array.isArray(child.children)) {\n          res.push(...flattedChildren(child.children))\n        } else {\n          res.push(child)\n        }\n      })\n      return res\n    }\n\n    const filledNode = (node, span, count, isLast = false) => {\n      if (!node.props) {\n        node.props = {}\n      }\n      if (span > count) {\n        node.props.span = count\n      }\n      if (isLast) {\n        // set the last span\n        node.props.span = span\n      }\n      return node\n    }\n\n    const getRows = () => {\n      const children = flattedChildren(slots.default?.()).filter(\n        (node) => node?.type?.name === 'ElDescriptionsItem'\n      )\n      const rows = []\n      let temp = []\n      let count = props.column\n      let totalSpan = 0 // all spans number of item\n\n      children.forEach((node, index) => {\n        const span = node.props?.span || 1\n\n        if (index < children.length - 1) {\n          totalSpan += span > count ? count : span\n        }\n\n        if (index === children.length - 1) {\n          // calculate the last item span\n          const lastSpan = props.column - (totalSpan % props.column)\n          temp.push(filledNode(node, lastSpan, count, true))\n          rows.push(temp)\n          return\n        }\n\n        if (span < count) {\n          count -= span\n          temp.push(node)\n        } else {\n          temp.push(filledNode(node, span, count))\n          rows.push(temp)\n          count = props.column\n          temp = []\n        }\n      })\n\n      return rows\n    }\n\n    return {\n      descriptionKls,\n      getRows,\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}