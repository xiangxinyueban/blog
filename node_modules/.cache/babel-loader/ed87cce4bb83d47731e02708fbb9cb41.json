{"ast":null,"code":"import _toArray from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport { defineComponent, inject, ref, computed, nextTick, watch, onMounted, onBeforeUnmount, resolveComponent, resolveDirective, openBlock, createBlock, withCtx, withDirectives, createElementBlock, normalizeClass, normalizeStyle, createVNode, withModifiers, Fragment, renderList, toDisplayString, createElementVNode, withKeys, vModelText, createCommentVNode, vShow, renderSlot } from 'vue';\nimport { isPromise } from '@vue/shared';\nimport { debounce } from 'lodash-unified';\nimport { isClient } from '@vueuse/core';\nimport _CascaderPanel from '../../cascader-panel/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport '../../popper/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { CircleClose, Check, ArrowDown } from '@element-plus/icons-vue';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { CommonProps } from '../../cascader-panel/src/config.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { tagProps } from '../../tag/src/tag.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useDeprecateAppendToBody } from '../../popper/src/deprecation.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { formContextKey, formItemContextKey } from '../../../tokens/form.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isKorean } from '../../../utils/i18n.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { focusNode, getSibling } from '../../../utils/dom/aria.mjs';\nimport { addResizeListener, removeResizeListener } from '../../../utils/dom/resize-event.mjs';\nvar DEFAULT_INPUT_HEIGHT = 40;\nvar INPUT_HEIGHT_MAP = {\n  large: 36,\n  \"default\": 32,\n  small: 28\n};\nvar popperOptions = {\n  modifiers: [{\n    name: \"arrowPosition\",\n    enabled: true,\n    phase: \"main\",\n    fn: function fn(_ref) {\n      var state = _ref.state;\n      var modifiersData = state.modifiersData,\n          placement = state.placement;\n      if ([\"right\", \"left\", \"bottom\", \"top\"].includes(placement)) return;\n      modifiersData.arrow.x = 35;\n    },\n    requires: [\"arrow\"]\n  }]\n};\nvar COMPONENT_NAME = \"ElCascader\";\n\nvar _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElCascaderPanel: _CascaderPanel,\n    ElInput: ElInput,\n    ElTooltip: ElTooltip,\n    ElScrollbar: ElScrollbar,\n    ElTag: ElTag,\n    ElIcon: ElIcon,\n    CircleClose: CircleClose,\n    Check: Check,\n    ArrowDown: ArrowDown\n  },\n  directives: {\n    Clickoutside: ClickOutside\n  },\n  props: _objectSpread(_objectSpread({}, CommonProps), {}, {\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    placeholder: {\n      type: String\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    filterMethod: {\n      type: Function,\n      \"default\": function _default(node, keyword) {\n        return node.text.includes(keyword);\n      }\n    },\n    separator: {\n      type: String,\n      \"default\": \" / \"\n    },\n    showAllLevels: {\n      type: Boolean,\n      \"default\": true\n    },\n    collapseTags: Boolean,\n    collapseTagsTooltip: {\n      type: Boolean,\n      \"default\": false\n    },\n    debounce: {\n      type: Number,\n      \"default\": 300\n    },\n    beforeFilter: {\n      type: Function,\n      \"default\": function _default() {\n        return true;\n      }\n    },\n    popperClass: {\n      type: String,\n      \"default\": \"\"\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      \"default\": void 0\n    },\n    teleported: useTooltipContentProps.teleported,\n    tagType: _objectSpread(_objectSpread({}, tagProps.type), {}, {\n      \"default\": \"info\"\n    })\n  }),\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"focus\", \"blur\", \"visible-change\", \"expand-change\", \"remove-tag\"],\n  setup: function setup(props, _ref2) {\n    var emit = _ref2.emit;\n    var inputInitialHeight = 0;\n    var pressDeleteCount = 0;\n\n    var _useDeprecateAppendTo = useDeprecateAppendToBody(COMPONENT_NAME, \"popperAppendToBody\"),\n        compatTeleported = _useDeprecateAppendTo.compatTeleported;\n\n    var nsCascader = useNamespace(\"cascader\");\n    var nsInput = useNamespace(\"input\");\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var elForm = inject(formContextKey, {});\n    var elFormItem = inject(formItemContextKey, {});\n    var tooltipRef = ref(null);\n    var input = ref(null);\n    var tagWrapper = ref(null);\n    var panel = ref(null);\n    var suggestionPanel = ref(null);\n    var popperVisible = ref(false);\n    var inputHover = ref(false);\n    var filtering = ref(false);\n    var inputValue = ref(\"\");\n    var searchInputValue = ref(\"\");\n    var presentTags = ref([]);\n    var allPresentTags = ref([]);\n    var suggestions = ref([]);\n    var isOnComposition = ref(false);\n    var isDisabled = computed(function () {\n      return props.disabled || elForm.disabled;\n    });\n    var inputPlaceholder = computed(function () {\n      return props.placeholder || t(\"el.cascader.placeholder\");\n    });\n    var realSize = useSize();\n    var tagSize = computed(function () {\n      return [\"small\"].includes(realSize.value) ? \"small\" : \"default\";\n    });\n    var multiple = computed(function () {\n      return !!props.props.multiple;\n    });\n    var readonly = computed(function () {\n      return !props.filterable || multiple.value;\n    });\n    var searchKeyword = computed(function () {\n      return multiple.value ? searchInputValue.value : inputValue.value;\n    });\n    var checkedNodes = computed(function () {\n      var _a;\n\n      return ((_a = panel.value) == null ? void 0 : _a.checkedNodes) || [];\n    });\n    var clearBtnVisible = computed(function () {\n      if (!props.clearable || isDisabled.value || filtering.value || !inputHover.value) return false;\n      return !!checkedNodes.value.length;\n    });\n    var presentText = computed(function () {\n      var showAllLevels = props.showAllLevels,\n          separator = props.separator;\n      var nodes = checkedNodes.value;\n      return nodes.length ? multiple.value ? \" \" : nodes[0].calcText(showAllLevels, separator) : \"\";\n    });\n    var checkedValue = computed({\n      get: function get() {\n        return props.modelValue;\n      },\n      set: function set(val) {\n        var _a;\n\n        emit(UPDATE_MODEL_EVENT, val);\n        emit(CHANGE_EVENT, val);\n        (_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\")[\"catch\"](function (err) {\n          return debugWarn(err);\n        });\n      }\n    });\n    var popperPaneRef = computed(function () {\n      var _a, _b;\n\n      return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n\n    var togglePopperVisible = function togglePopperVisible(visible) {\n      var _a, _b, _c;\n\n      if (isDisabled.value) return;\n      visible = visible != null ? visible : !popperVisible.value;\n\n      if (visible !== popperVisible.value) {\n        popperVisible.value = visible;\n        (_b = (_a = input.value) == null ? void 0 : _a.input) == null ? void 0 : _b.setAttribute(\"aria-expanded\", \"\".concat(visible));\n\n        if (visible) {\n          updatePopperPosition();\n          nextTick((_c = panel.value) == null ? void 0 : _c.scrollToExpandingNode);\n        } else if (props.filterable) {\n          var value = presentText.value;\n          inputValue.value = value;\n          searchInputValue.value = value;\n        }\n\n        emit(\"visible-change\", visible);\n      }\n    };\n\n    var updatePopperPosition = function updatePopperPosition() {\n      nextTick(function () {\n        var _a;\n\n        (_a = tooltipRef.value) == null ? void 0 : _a.updatePopper();\n      });\n    };\n\n    var hideSuggestionPanel = function hideSuggestionPanel() {\n      filtering.value = false;\n    };\n\n    var genTag = function genTag(node) {\n      var showAllLevels = props.showAllLevels,\n          separator = props.separator;\n      return {\n        node: node,\n        key: node.uid,\n        text: node.calcText(showAllLevels, separator),\n        hitState: false,\n        closable: !isDisabled.value && !node.isDisabled,\n        isCollapseTag: false\n      };\n    };\n\n    var deleteTag = function deleteTag(tag) {\n      var _a;\n\n      var node = tag.node;\n      node.doCheck(false);\n      (_a = panel.value) == null ? void 0 : _a.calculateCheckedValue();\n      emit(\"remove-tag\", node.valueByOption);\n    };\n\n    var calculatePresentTags = function calculatePresentTags() {\n      if (!multiple.value) return;\n      var nodes = checkedNodes.value;\n      var tags = [];\n      var allTags = [];\n      nodes.forEach(function (node) {\n        return allTags.push(genTag(node));\n      });\n      allPresentTags.value = allTags;\n\n      if (nodes.length) {\n        var _nodes = _toArray(nodes),\n            first = _nodes[0],\n            rest = _nodes.slice(1);\n\n        var restCount = rest.length;\n        tags.push(genTag(first));\n\n        if (restCount) {\n          if (props.collapseTags) {\n            tags.push({\n              key: -1,\n              text: \"+ \".concat(restCount),\n              closable: false,\n              isCollapseTag: true\n            });\n          } else {\n            rest.forEach(function (node) {\n              return tags.push(genTag(node));\n            });\n          }\n        }\n      }\n\n      presentTags.value = tags;\n    };\n\n    var calculateSuggestions = function calculateSuggestions() {\n      var _a, _b;\n\n      var filterMethod = props.filterMethod,\n          showAllLevels = props.showAllLevels,\n          separator = props.separator;\n      var res = (_b = (_a = panel.value) == null ? void 0 : _a.getFlattedNodes(!props.props.checkStrictly)) == null ? void 0 : _b.filter(function (node) {\n        if (node.isDisabled) return false;\n        node.calcText(showAllLevels, separator);\n        return filterMethod(node, searchKeyword.value);\n      });\n\n      if (multiple.value) {\n        presentTags.value.forEach(function (tag) {\n          tag.hitState = false;\n        });\n        allPresentTags.value.forEach(function (tag) {\n          tag.hitState = false;\n        });\n      }\n\n      filtering.value = true;\n      suggestions.value = res;\n      updatePopperPosition();\n    };\n\n    var focusFirstNode = function focusFirstNode() {\n      var _a;\n\n      var firstNode;\n\n      if (filtering.value && suggestionPanel.value) {\n        firstNode = suggestionPanel.value.$el.querySelector(\".\".concat(nsCascader.e(\"suggestion-item\")));\n      } else {\n        firstNode = (_a = panel.value) == null ? void 0 : _a.$el.querySelector(\".\".concat(nsCascader.b(\"node\"), \"[tabindex=\\\"-1\\\"]\"));\n      }\n\n      if (firstNode) {\n        firstNode.focus();\n        !filtering.value && firstNode.click();\n      }\n    };\n\n    var updateStyle = function updateStyle() {\n      var _a, _b;\n\n      var inputInner = (_a = input.value) == null ? void 0 : _a.input;\n      var tagWrapperEl = tagWrapper.value;\n      var suggestionPanelEl = (_b = suggestionPanel.value) == null ? void 0 : _b.$el;\n      if (!isClient || !inputInner) return;\n\n      if (suggestionPanelEl) {\n        var suggestionList = suggestionPanelEl.querySelector(\".\".concat(nsCascader.e(\"suggestion-list\")));\n        suggestionList.style.minWidth = \"\".concat(inputInner.offsetWidth, \"px\");\n      }\n\n      if (tagWrapperEl) {\n        var offsetHeight = tagWrapperEl.offsetHeight;\n        var height = presentTags.value.length > 0 ? \"\".concat(Math.max(offsetHeight + 6, inputInitialHeight), \"px\") : \"\".concat(inputInitialHeight, \"px\");\n        inputInner.style.height = height;\n        updatePopperPosition();\n      }\n    };\n\n    var getCheckedNodes = function getCheckedNodes(leafOnly) {\n      var _a;\n\n      return (_a = panel.value) == null ? void 0 : _a.getCheckedNodes(leafOnly);\n    };\n\n    var handleExpandChange = function handleExpandChange(value) {\n      updatePopperPosition();\n      emit(\"expand-change\", value);\n    };\n\n    var handleComposition = function handleComposition(event) {\n      var _a;\n\n      var text = (_a = event.target) == null ? void 0 : _a.value;\n\n      if (event.type === \"compositionend\") {\n        isOnComposition.value = false;\n        nextTick(function () {\n          return handleInput(text);\n        });\n      } else {\n        var lastCharacter = text[text.length - 1] || \"\";\n        isOnComposition.value = !isKorean(lastCharacter);\n      }\n    };\n\n    var handleKeyDown = function handleKeyDown(e) {\n      if (isOnComposition.value) return;\n\n      switch (e.code) {\n        case EVENT_CODE.enter:\n          togglePopperVisible();\n          break;\n\n        case EVENT_CODE.down:\n          togglePopperVisible(true);\n          nextTick(focusFirstNode);\n          e.preventDefault();\n          break;\n\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false);\n          break;\n      }\n    };\n\n    var handleClear = function handleClear() {\n      var _a;\n\n      (_a = panel.value) == null ? void 0 : _a.clearCheckedNodes();\n      togglePopperVisible(false);\n    };\n\n    var handleSuggestionClick = function handleSuggestionClick(node) {\n      var _a, _b;\n\n      var checked = node.checked;\n\n      if (multiple.value) {\n        (_a = panel.value) == null ? void 0 : _a.handleCheckChange(node, !checked, false);\n      } else {\n        !checked && ((_b = panel.value) == null ? void 0 : _b.handleCheckChange(node, true, false));\n        togglePopperVisible(false);\n      }\n    };\n\n    var handleSuggestionKeyDown = function handleSuggestionKeyDown(e) {\n      var target = e.target;\n      var code = e.code;\n\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down:\n          {\n            var distance = code === EVENT_CODE.up ? -1 : 1;\n            focusNode(getSibling(target, distance, \".\".concat(nsCascader.e(\"suggestion-item\"), \"[tabindex=\\\"-1\\\"]\")));\n            break;\n          }\n\n        case EVENT_CODE.enter:\n          target.click();\n          break;\n\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false);\n          break;\n      }\n    };\n\n    var handleDelete = function handleDelete() {\n      var tags = presentTags.value;\n      var lastTag = tags[tags.length - 1];\n      pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1;\n      if (!lastTag || !pressDeleteCount) return;\n\n      if (lastTag.hitState) {\n        deleteTag(lastTag);\n      } else {\n        lastTag.hitState = true;\n      }\n    };\n\n    var handleFilter = debounce(function () {\n      var value = searchKeyword.value;\n      if (!value) return;\n      var passed = props.beforeFilter(value);\n\n      if (isPromise(passed)) {\n        passed.then(calculateSuggestions)[\"catch\"](function () {});\n      } else if (passed !== false) {\n        calculateSuggestions();\n      } else {\n        hideSuggestionPanel();\n      }\n    }, props.debounce);\n\n    var handleInput = function handleInput(val, e) {\n      !popperVisible.value && togglePopperVisible(true);\n      if (e == null ? void 0 : e.isComposing) return;\n      val ? handleFilter() : hideSuggestionPanel();\n    };\n\n    watch(filtering, updatePopperPosition);\n    watch([checkedNodes, isDisabled], calculatePresentTags);\n    watch(presentTags, function () {\n      nextTick(function () {\n        return updateStyle();\n      });\n    });\n    watch(presentText, function (val) {\n      return inputValue.value = val;\n    }, {\n      immediate: true\n    });\n    onMounted(function () {\n      var _a;\n\n      var inputEl = (_a = input.value) == null ? void 0 : _a.$el;\n      inputInitialHeight = (inputEl == null ? void 0 : inputEl.offsetHeight) || INPUT_HEIGHT_MAP[realSize.value] || DEFAULT_INPUT_HEIGHT;\n      addResizeListener(inputEl, updateStyle);\n    });\n    onBeforeUnmount(function () {\n      var _a;\n\n      removeResizeListener((_a = input.value) == null ? void 0 : _a.$el, updateStyle);\n    });\n    return {\n      popperOptions: popperOptions,\n      tooltipRef: tooltipRef,\n      popperPaneRef: popperPaneRef,\n      input: input,\n      tagWrapper: tagWrapper,\n      panel: panel,\n      suggestionPanel: suggestionPanel,\n      popperVisible: popperVisible,\n      inputHover: inputHover,\n      inputPlaceholder: inputPlaceholder,\n      filtering: filtering,\n      presentText: presentText,\n      checkedValue: checkedValue,\n      inputValue: inputValue,\n      searchInputValue: searchInputValue,\n      presentTags: presentTags,\n      allPresentTags: allPresentTags,\n      suggestions: suggestions,\n      isDisabled: isDisabled,\n      isOnComposition: isOnComposition,\n      realSize: realSize,\n      tagSize: tagSize,\n      multiple: multiple,\n      readonly: readonly,\n      clearBtnVisible: clearBtnVisible,\n      compatTeleported: compatTeleported,\n      nsCascader: nsCascader,\n      nsInput: nsInput,\n      t: t,\n      togglePopperVisible: togglePopperVisible,\n      hideSuggestionPanel: hideSuggestionPanel,\n      deleteTag: deleteTag,\n      focusFirstNode: focusFirstNode,\n      getCheckedNodes: getCheckedNodes,\n      handleExpandChange: handleExpandChange,\n      handleKeyDown: handleKeyDown,\n      handleComposition: handleComposition,\n      handleClear: handleClear,\n      handleSuggestionClick: handleSuggestionClick,\n      handleSuggestionKeyDown: handleSuggestionKeyDown,\n      handleDelete: handleDelete,\n      handleInput: handleInput\n    };\n  }\n});\n\nvar _hoisted_1 = {\n  key: 0\n};\nvar _hoisted_2 = {\n  \"class\": \"el-cascader__collapse-tags\"\n};\nvar _hoisted_3 = [\"placeholder\"];\nvar _hoisted_4 = [\"onClick\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_circle_close = resolveComponent(\"circle-close\");\n\n  var _component_el_icon = resolveComponent(\"el-icon\");\n\n  var _component_arrow_down = resolveComponent(\"arrow-down\");\n\n  var _component_el_input = resolveComponent(\"el-input\");\n\n  var _component_el_tag = resolveComponent(\"el-tag\");\n\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  var _component_el_cascader_panel = resolveComponent(\"el-cascader-panel\");\n\n  var _component_check = resolveComponent(\"check\");\n\n  var _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  var _directive_clickoutside = resolveDirective(\"clickoutside\");\n\n  return openBlock(), createBlock(_component_el_tooltip, {\n    ref: \"tooltipRef\",\n    visible: _ctx.popperVisible,\n    \"onUpdate:visible\": _cache[17] || (_cache[17] = function ($event) {\n      return _ctx.popperVisible = $event;\n    }),\n    teleported: _ctx.compatTeleported,\n    \"popper-class\": [_ctx.nsCascader.e(\"dropdown\"), _ctx.popperClass],\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": [\"bottom-start\", \"bottom\", \"top-start\", \"top\", \"right\", \"left\"],\n    \"stop-popper-mouse-event\": false,\n    \"gpu-acceleration\": false,\n    placement: \"bottom-start\",\n    transition: \"\".concat(_ctx.nsCascader.namespace.value, \"-zoom-in-top\"),\n    effect: \"light\",\n    pure: \"\",\n    persistent: \"\",\n    onHide: _ctx.hideSuggestionPanel\n  }, {\n    \"default\": withCtx(function () {\n      return [withDirectives((openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass([_ctx.nsCascader.b(), _ctx.nsCascader.m(_ctx.realSize), _ctx.nsCascader.is(\"disabled\", _ctx.isDisabled), _ctx.$attrs[\"class\"]]),\n        style: normalizeStyle(_ctx.$attrs.style),\n        onClick: _cache[11] || (_cache[11] = function () {\n          return _ctx.togglePopperVisible(_ctx.readonly ? void 0 : true);\n        }),\n        onKeydown: _cache[12] || (_cache[12] = function () {\n          return _ctx.handleKeyDown && _ctx.handleKeyDown.apply(_ctx, arguments);\n        }),\n        onMouseenter: _cache[13] || (_cache[13] = function ($event) {\n          return _ctx.inputHover = true;\n        }),\n        onMouseleave: _cache[14] || (_cache[14] = function ($event) {\n          return _ctx.inputHover = false;\n        })\n      }, [createVNode(_component_el_input, {\n        ref: \"input\",\n        modelValue: _ctx.inputValue,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return _ctx.inputValue = $event;\n        }),\n        placeholder: _ctx.inputPlaceholder,\n        readonly: _ctx.readonly,\n        disabled: _ctx.isDisabled,\n        \"validate-event\": false,\n        size: _ctx.realSize,\n        \"class\": normalizeClass(_ctx.nsCascader.is(\"focus\", _ctx.popperVisible)),\n        onCompositionstart: _ctx.handleComposition,\n        onCompositionupdate: _ctx.handleComposition,\n        onCompositionend: _ctx.handleComposition,\n        onFocus: _cache[2] || (_cache[2] = function (e) {\n          return _ctx.$emit(\"focus\", e);\n        }),\n        onBlur: _cache[3] || (_cache[3] = function (e) {\n          return _ctx.$emit(\"blur\", e);\n        }),\n        onInput: _ctx.handleInput\n      }, {\n        suffix: withCtx(function () {\n          return [_ctx.clearBtnVisible ? (openBlock(), createBlock(_component_el_icon, {\n            key: \"clear\",\n            \"class\": normalizeClass([_ctx.nsInput.e(\"icon\"), \"icon-circle-close\"]),\n            onClick: withModifiers(_ctx.handleClear, [\"stop\"])\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_circle_close)];\n            }),\n            _: 1\n          }, 8, [\"class\", \"onClick\"])) : (openBlock(), createBlock(_component_el_icon, {\n            key: \"arrow-down\",\n            \"class\": normalizeClass([_ctx.nsInput.e(\"icon\"), \"icon-arrow-down\", _ctx.nsCascader.is(\"reverse\", _ctx.popperVisible)]),\n            onClick: _cache[0] || (_cache[0] = withModifiers(function ($event) {\n              return _ctx.togglePopperVisible();\n            }, [\"stop\"]))\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_arrow_down)];\n            }),\n            _: 1\n          }, 8, [\"class\"]))];\n        }),\n        _: 1\n      }, 8, [\"modelValue\", \"placeholder\", \"readonly\", \"disabled\", \"size\", \"class\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onInput\"]), _ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        ref: \"tagWrapper\",\n        \"class\": normalizeClass(_ctx.nsCascader.e(\"tags\"))\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.presentTags, function (tag) {\n        return openBlock(), createBlock(_component_el_tag, {\n          key: tag.key,\n          type: _ctx.tagType,\n          size: _ctx.tagSize,\n          hit: tag.hitState,\n          closable: tag.closable,\n          \"disable-transitions\": \"\",\n          onClose: function onClose($event) {\n            return _ctx.deleteTag(tag);\n          }\n        }, {\n          \"default\": withCtx(function () {\n            return [tag.isCollapseTag === false ? (openBlock(), createElementBlock(\"span\", _hoisted_1, toDisplayString(tag.text), 1)) : (openBlock(), createBlock(_component_el_tooltip, {\n              key: 1,\n              teleported: false,\n              disabled: _ctx.popperVisible || !_ctx.collapseTagsTooltip,\n              \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n              placement: \"bottom\",\n              effect: \"light\"\n            }, {\n              \"default\": withCtx(function () {\n                return [createElementVNode(\"span\", null, toDisplayString(tag.text), 1)];\n              }),\n              content: withCtx(function () {\n                return [createElementVNode(\"div\", _hoisted_2, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.allPresentTags, function (tag2, idx) {\n                  return openBlock(), createElementBlock(\"div\", {\n                    key: idx,\n                    \"class\": \"el-cascader__collapse-tag\"\n                  }, [(openBlock(), createBlock(_component_el_tag, {\n                    key: tag2.key,\n                    \"class\": \"in-tooltip\",\n                    type: _ctx.tagType,\n                    size: _ctx.tagSize,\n                    hit: tag2.hitState,\n                    closable: tag2.closable,\n                    \"disable-transitions\": \"\",\n                    onClose: function onClose($event) {\n                      return _ctx.deleteTag(tag2);\n                    }\n                  }, {\n                    \"default\": withCtx(function () {\n                      return [createElementVNode(\"span\", null, toDisplayString(tag2.text), 1)];\n                    }),\n                    _: 2\n                  }, 1032, [\"type\", \"size\", \"hit\", \"closable\", \"onClose\"]))]);\n                }), 128))])];\n              }),\n              _: 2\n            }, 1032, [\"disabled\"]))];\n          }),\n          _: 2\n        }, 1032, [\"type\", \"size\", \"hit\", \"closable\", \"onClose\"]);\n      }), 128)), _ctx.filterable && !_ctx.isDisabled ? withDirectives((openBlock(), createElementBlock(\"input\", {\n        key: 0,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n          return _ctx.searchInputValue = $event;\n        }),\n        type: \"text\",\n        \"class\": normalizeClass(_ctx.nsCascader.e(\"search-input\")),\n        placeholder: _ctx.presentText ? \"\" : _ctx.inputPlaceholder,\n        onInput: _cache[5] || (_cache[5] = function (e) {\n          return _ctx.handleInput(_ctx.searchInputValue, e);\n        }),\n        onClick: _cache[6] || (_cache[6] = withModifiers(function ($event) {\n          return _ctx.togglePopperVisible(true);\n        }, [\"stop\"])),\n        onKeydown: _cache[7] || (_cache[7] = withKeys(function () {\n          return _ctx.handleDelete && _ctx.handleDelete.apply(_ctx, arguments);\n        }, [\"delete\"])),\n        onCompositionstart: _cache[8] || (_cache[8] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        }),\n        onCompositionupdate: _cache[9] || (_cache[9] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        }),\n        onCompositionend: _cache[10] || (_cache[10] = function () {\n          return _ctx.handleComposition && _ctx.handleComposition.apply(_ctx, arguments);\n        })\n      }, null, 42, _hoisted_3)), [[vModelText, _ctx.searchInputValue]]) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)], 38)), [[_directive_clickoutside, function () {\n        return _ctx.togglePopperVisible(false);\n      }, _ctx.popperPaneRef]])];\n    }),\n    content: withCtx(function () {\n      return [withDirectives(createVNode(_component_el_cascader_panel, {\n        ref: \"panel\",\n        modelValue: _ctx.checkedValue,\n        \"onUpdate:modelValue\": _cache[15] || (_cache[15] = function ($event) {\n          return _ctx.checkedValue = $event;\n        }),\n        options: _ctx.options,\n        props: _ctx.props,\n        border: false,\n        \"render-label\": _ctx.$slots[\"default\"],\n        onExpandChange: _ctx.handleExpandChange,\n        onClose: _cache[16] || (_cache[16] = function ($event) {\n          return _ctx.$nextTick(function () {\n            return _ctx.togglePopperVisible(false);\n          });\n        })\n      }, null, 8, [\"modelValue\", \"options\", \"props\", \"render-label\", \"onExpandChange\"]), [[vShow, !_ctx.filtering]]), _ctx.filterable ? withDirectives((openBlock(), createBlock(_component_el_scrollbar, {\n        key: 0,\n        ref: \"suggestionPanel\",\n        tag: \"ul\",\n        \"class\": normalizeClass(_ctx.nsCascader.e(\"suggestion-panel\")),\n        \"view-class\": _ctx.nsCascader.e(\"suggestion-list\"),\n        onKeydown: _ctx.handleSuggestionKeyDown\n      }, {\n        \"default\": withCtx(function () {\n          return [_ctx.suggestions.length ? (openBlock(true), createElementBlock(Fragment, {\n            key: 0\n          }, renderList(_ctx.suggestions, function (item) {\n            return openBlock(), createElementBlock(\"li\", {\n              key: item.uid,\n              \"class\": normalizeClass([_ctx.nsCascader.e(\"suggestion-item\"), _ctx.nsCascader.is(\"checked\", item.checked)]),\n              tabindex: -1,\n              onClick: function onClick($event) {\n                return _ctx.handleSuggestionClick(item);\n              }\n            }, [createElementVNode(\"span\", null, toDisplayString(item.text), 1), item.checked ? (openBlock(), createBlock(_component_el_icon, {\n              key: 0\n            }, {\n              \"default\": withCtx(function () {\n                return [createVNode(_component_check)];\n              }),\n              _: 1\n            })) : createCommentVNode(\"v-if\", true)], 10, _hoisted_4);\n          }), 128)) : renderSlot(_ctx.$slots, \"empty\", {\n            key: 1\n          }, function () {\n            return [createElementVNode(\"li\", {\n              \"class\": normalizeClass(_ctx.nsCascader.e(\"empty-text\"))\n            }, toDisplayString(_ctx.t(\"el.cascader.noMatch\")), 3)];\n          })];\n        }),\n        _: 3\n      }, 8, [\"class\", \"view-class\", \"onKeydown\"])), [[vShow, _ctx.filtering]]) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-options\", \"transition\", \"onHide\"]);\n}\n\nvar Cascader = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/cascader/src/index.vue\"]]);\n\nexport { Cascader as default };","map":{"version":3,"mappings":"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","names":["DEFAULT_INPUT_HEIGHT","INPUT_HEIGHT_MAP","large","small","popperOptions","modifiers","name","enabled","phase","fn","state","modifiersData","placement","includes","arrow","x","requires","COMPONENT_NAME","_sfc_main","defineComponent","components","ElCascaderPanel","ElInput","ElTooltip","ElScrollbar","ElTag","ElIcon","CircleClose","Check","ArrowDown","directives","Clickoutside","props","CommonProps","size","type","validator","placeholder","disabled","clearable","filterable","filterMethod","node","keyword","separator","showAllLevels","collapseTags","collapseTagsTooltip","debounce","beforeFilter","popperClass","popperAppendToBody","teleported","useTooltipContentProps","tagType","tagProps","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","emit","inputInitialHeight","pressDeleteCount","useDeprecateAppendToBody","compatTeleported","useNamespace","useLocale","t","elForm","formContextKey","elFormItem","formItemContextKey","ref","isDisabled","computed","inputPlaceholder","realSize","useSize","multiple","readonly","value","searchInputValue","inputValue","checkedNodes","panel","_a","length","nodes","get","set","val","popperPaneRef","_b","togglePopperVisible","_c","visible","popperVisible","updatePopperPosition","nextTick","tooltipRef","hideSuggestionPanel","filtering","genTag","key","text","calcText","hitState","closable","isCollapseTag","deleteTag","calculatePresentTags","tags","allPresentTags","allTags","first","rest","restCount","push","presentTags","calculateSuggestions","res","tag","suggestions","focusFirstNode","suggestionPanel","firstNode","$el","querySelector","nsCascader","updateStyle","input","tagWrapper","suggestionList","tagWrapperEl","inputInner","height","getCheckedNodes","isOnComposition","handleKeyDown","e","preventDefault","handleSuggestionClick","handleSuggestionKeyDown","EVENT_CODE","focusNode","target","lastTag","searchKeyword","isPromise","passed","handleInput","watch","immediate","onMounted","addResizeListener","onBeforeUnmount","removeResizeListener","inputHover","presentText","checkedValue","tagSize","clearBtnVisible","nsInput","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_circle_close","_component_el_scrollbar","_directive_clickoutside","_openBlock","transition","effect","pure","onHide","_normalizeClass","b","m","is","style","onClick","onKeydown","onMouseenter","onMouseleave","_createVNode","modelValue","onCompositionupdate","onCompositionend","onFocus","onBlur","suffix","_withCtx","_","_createElementBlock","hit","_createElementVNode","onClose","onInput","onCompositionstart","_createCommentVNode","content","_withDirectives","onExpandChange"],"sources":["../../../../../../packages/components/cascader/src/index.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    v-model:visible=\"popperVisible\"\n    :teleported=\"compatTeleported\"\n    :popper-class=\"[nsCascader.e('dropdown'), popperClass]\"\n    :popper-options=\"popperOptions\"\n    :fallback-placements=\"[\n      'bottom-start',\n      'bottom',\n      'top-start',\n      'top',\n      'right',\n      'left',\n    ]\"\n    :stop-popper-mouse-event=\"false\"\n    :gpu-acceleration=\"false\"\n    placement=\"bottom-start\"\n    :transition=\"`${nsCascader.namespace.value}-zoom-in-top`\"\n    effect=\"light\"\n    pure\n    persistent\n    @hide=\"hideSuggestionPanel\"\n  >\n    <template #default>\n      <div\n        v-clickoutside:[popperPaneRef]=\"() => togglePopperVisible(false)\"\n        :class=\"[\n          nsCascader.b(),\n          nsCascader.m(realSize),\n          nsCascader.is('disabled', isDisabled),\n          $attrs.class,\n        ]\"\n        :style=\"$attrs.style\"\n        @click=\"() => togglePopperVisible(readonly ? undefined : true)\"\n        @keydown=\"handleKeyDown\"\n        @mouseenter=\"inputHover = true\"\n        @mouseleave=\"inputHover = false\"\n      >\n        <el-input\n          ref=\"input\"\n          v-model=\"inputValue\"\n          :placeholder=\"inputPlaceholder\"\n          :readonly=\"readonly\"\n          :disabled=\"isDisabled\"\n          :validate-event=\"false\"\n          :size=\"realSize\"\n          :class=\"nsCascader.is('focus', popperVisible)\"\n          @compositionstart=\"handleComposition\"\n          @compositionupdate=\"handleComposition\"\n          @compositionend=\"handleComposition\"\n          @focus=\"(e) => $emit('focus', e)\"\n          @blur=\"(e) => $emit('blur', e)\"\n          @input=\"handleInput\"\n        >\n          <template #suffix>\n            <el-icon\n              v-if=\"clearBtnVisible\"\n              key=\"clear\"\n              :class=\"[nsInput.e('icon'), 'icon-circle-close']\"\n              @click.stop=\"handleClear\"\n            >\n              <circle-close />\n            </el-icon>\n            <el-icon\n              v-else\n              key=\"arrow-down\"\n              :class=\"[\n                nsInput.e('icon'),\n                'icon-arrow-down',\n                nsCascader.is('reverse', popperVisible),\n              ]\"\n              @click.stop=\"togglePopperVisible()\"\n            >\n              <arrow-down />\n            </el-icon>\n          </template>\n        </el-input>\n\n        <div v-if=\"multiple\" ref=\"tagWrapper\" :class=\"nsCascader.e('tags')\">\n          <el-tag\n            v-for=\"tag in presentTags\"\n            :key=\"tag.key\"\n            :type=\"tagType\"\n            :size=\"tagSize\"\n            :hit=\"tag.hitState\"\n            :closable=\"tag.closable\"\n            disable-transitions\n            @close=\"deleteTag(tag)\"\n          >\n            <template v-if=\"tag.isCollapseTag === false\">\n              <span>{{ tag.text }}</span>\n            </template>\n            <template v-else>\n              <el-tooltip\n                :teleported=\"false\"\n                :disabled=\"popperVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                placement=\"bottom\"\n                effect=\"light\"\n              >\n                <template #default>\n                  <span>{{ tag.text }}</span>\n                </template>\n                <template #content>\n                  <div class=\"el-cascader__collapse-tags\">\n                    <div\n                      v-for=\"(tag2, idx) in allPresentTags\"\n                      :key=\"idx\"\n                      class=\"el-cascader__collapse-tag\"\n                    >\n                      <el-tag\n                        :key=\"tag2.key\"\n                        class=\"in-tooltip\"\n                        :type=\"tagType\"\n                        :size=\"tagSize\"\n                        :hit=\"tag2.hitState\"\n                        :closable=\"tag2.closable\"\n                        disable-transitions\n                        @close=\"deleteTag(tag2)\"\n                      >\n                        <span>{{ tag2.text }}</span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </template>\n          </el-tag>\n          <input\n            v-if=\"filterable && !isDisabled\"\n            v-model=\"searchInputValue\"\n            type=\"text\"\n            :class=\"nsCascader.e('search-input')\"\n            :placeholder=\"presentText ? '' : inputPlaceholder\"\n            @input=\"(e) => handleInput(searchInputValue, e)\"\n            @click.stop=\"togglePopperVisible(true)\"\n            @keydown.delete=\"handleDelete\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <template #content>\n      <el-cascader-panel\n        v-show=\"!filtering\"\n        ref=\"panel\"\n        v-model=\"checkedValue\"\n        :options=\"options\"\n        :props=\"props\"\n        :border=\"false\"\n        :render-label=\"$slots.default\"\n        @expand-change=\"handleExpandChange\"\n        @close=\"$nextTick(() => togglePopperVisible(false))\"\n      />\n      <el-scrollbar\n        v-if=\"filterable\"\n        v-show=\"filtering\"\n        ref=\"suggestionPanel\"\n        tag=\"ul\"\n        :class=\"nsCascader.e('suggestion-panel')\"\n        :view-class=\"nsCascader.e('suggestion-list')\"\n        @keydown=\"handleSuggestionKeyDown\"\n      >\n        <template v-if=\"suggestions.length\">\n          <li\n            v-for=\"item in suggestions\"\n            :key=\"item.uid\"\n            :class=\"[\n              nsCascader.e('suggestion-item'),\n              nsCascader.is('checked', item.checked),\n            ]\"\n            :tabindex=\"-1\"\n            @click=\"handleSuggestionClick(item)\"\n          >\n            <span>{{ item.text }}</span>\n            <el-icon v-if=\"item.checked\"><check /></el-icon>\n          </li>\n        </template>\n        <slot v-else name=\"empty\">\n          <li :class=\"nsCascader.e('empty-text')\">\n            {{ t('el.cascader.noMatch') }}\n          </li>\n        </slot>\n      </el-scrollbar>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { debounce } from 'lodash-unified'\n\nimport { isClient } from '@vueuse/core'\nimport ElCascaderPanel, {\n  CommonProps,\n} from '@element-plus/components/cascader-panel'\nimport ElInput from '@element-plus/components/input'\nimport ElTooltip, {\n  useTooltipContentProps,\n} from '@element-plus/components/tooltip'\nimport { useDeprecateAppendToBody } from '@element-plus/components/popper'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag, { tagProps } from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\n\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport { ClickOutside as Clickoutside } from '@element-plus/directives'\nimport { useLocale, useNamespace, useSize } from '@element-plus/hooks'\n\nimport {\n  addResizeListener,\n  debugWarn,\n  focusNode,\n  getSibling,\n  isKorean,\n  isValidComponentSize,\n  removeResizeListener,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { ArrowDown, Check, CircleClose } from '@element-plus/icons-vue'\n\nimport type { Options } from '@element-plus/components/popper'\nimport type { ComputedRef, PropType, Ref } from 'vue'\nimport type { FormContext, FormItemContext } from '@element-plus/tokens'\nimport type {\n  CascaderNode,\n  CascaderValue,\n  Tag,\n} from '@element-plus/components/cascader-panel'\nimport type { ComponentSize } from '@element-plus/constants'\n\ntype cascaderPanelType = InstanceType<typeof ElCascaderPanel>\ntype tooltipType = InstanceType<typeof ElTooltip>\ntype inputType = InstanceType<typeof ElInput>\ntype suggestionPanelType = InstanceType<typeof ElScrollbar>\n\nconst DEFAULT_INPUT_HEIGHT = 40\n\nconst INPUT_HEIGHT_MAP = {\n  large: 36,\n  default: 32,\n  small: 28,\n}\n\nconst popperOptions: Partial<Options> = {\n  modifiers: [\n    {\n      name: 'arrowPosition',\n      enabled: true,\n      phase: 'main',\n      fn: ({ state }) => {\n        const { modifiersData, placement } = state as any\n        if (['right', 'left', 'bottom', 'top'].includes(placement)) return\n        modifiersData.arrow.x = 35\n      },\n      requires: ['arrow'],\n    },\n  ],\n}\nconst COMPONENT_NAME = 'ElCascader'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  components: {\n    ElCascaderPanel,\n    ElInput,\n    ElTooltip,\n    ElScrollbar,\n    ElTag,\n    ElIcon,\n    CircleClose,\n    Check,\n    ArrowDown,\n  },\n\n  directives: {\n    Clickoutside,\n  },\n\n  props: {\n    ...CommonProps,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    placeholder: {\n      type: String,\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    filterMethod: {\n      type: Function as PropType<\n        (node: CascaderNode, keyword: string) => boolean\n      >,\n      default: (node: CascaderNode, keyword: string) =>\n        node.text.includes(keyword),\n    },\n    separator: {\n      type: String,\n      default: ' / ',\n    },\n    showAllLevels: {\n      type: Boolean,\n      default: true,\n    },\n    collapseTags: Boolean,\n    collapseTagsTooltip: {\n      type: Boolean,\n      default: false,\n    },\n    debounce: {\n      type: Number,\n      default: 300,\n    },\n    beforeFilter: {\n      type: Function as PropType<(value: string) => boolean | Promise<any>>,\n      default: () => true,\n    },\n    popperClass: {\n      type: String,\n      default: '',\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      default: undefined,\n    },\n    teleported: useTooltipContentProps.teleported,\n    // eslint-disable-next-line vue/require-prop-types\n    tagType: { ...tagProps.type, default: 'info' },\n  },\n\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'focus',\n    'blur',\n    'visible-change',\n    'expand-change',\n    'remove-tag',\n  ],\n\n  setup(props, { emit }) {\n    let inputInitialHeight = 0\n    let pressDeleteCount = 0\n\n    const { compatTeleported } = useDeprecateAppendToBody(\n      COMPONENT_NAME,\n      'popperAppendToBody'\n    )\n    const nsCascader = useNamespace('cascader')\n    const nsInput = useNamespace('input')\n\n    const { t } = useLocale()\n    const elForm = inject(formContextKey, {} as FormContext)\n    const elFormItem = inject(formItemContextKey, {} as FormItemContext)\n\n    const tooltipRef: Ref<tooltipType | null> = ref(null)\n    const input: Ref<inputType | null> = ref(null)\n    const tagWrapper = ref(null)\n    const panel: Ref<cascaderPanelType | null> = ref(null)\n    const suggestionPanel: Ref<suggestionPanelType | null> = ref(null)\n    const popperVisible = ref(false)\n    const inputHover = ref(false)\n    const filtering = ref(false)\n    const inputValue = ref('')\n    const searchInputValue = ref('')\n    const presentTags: Ref<Tag[]> = ref([])\n    const allPresentTags: Ref<Tag[]> = ref([])\n    const suggestions: Ref<CascaderNode[]> = ref([])\n    const isOnComposition = ref(false)\n\n    const isDisabled = computed(() => props.disabled || elForm.disabled)\n    const inputPlaceholder = computed(\n      () => props.placeholder || t('el.cascader.placeholder')\n    )\n    const realSize = useSize()\n    const tagSize = computed(() =>\n      ['small'].includes(realSize.value) ? 'small' : 'default'\n    )\n    const multiple = computed(() => !!props.props.multiple)\n    const readonly = computed(() => !props.filterable || multiple.value)\n    const searchKeyword = computed(() =>\n      multiple.value ? searchInputValue.value : inputValue.value\n    )\n    const checkedNodes: ComputedRef<CascaderNode[]> = computed(\n      () => panel.value?.checkedNodes || []\n    )\n    const clearBtnVisible = computed(() => {\n      if (\n        !props.clearable ||\n        isDisabled.value ||\n        filtering.value ||\n        !inputHover.value\n      )\n        return false\n\n      return !!checkedNodes.value.length\n    })\n    const presentText = computed(() => {\n      const { showAllLevels, separator } = props\n      const nodes = checkedNodes.value\n      return nodes.length\n        ? multiple.value\n          ? ' '\n          : nodes[0].calcText(showAllLevels, separator)\n        : ''\n    })\n\n    const checkedValue = computed<CascaderValue>({\n      get() {\n        return props.modelValue\n      },\n      set(val) {\n        emit(UPDATE_MODEL_EVENT, val)\n        emit(CHANGE_EVENT, val)\n        elFormItem.validate?.('change').catch((err) => debugWarn(err))\n      },\n    })\n\n    const popperPaneRef = computed(() => {\n      return tooltipRef.value?.popperRef?.contentRef\n    })\n\n    const togglePopperVisible = (visible?: boolean) => {\n      if (isDisabled.value) return\n\n      visible = visible ?? !popperVisible.value\n\n      if (visible !== popperVisible.value) {\n        popperVisible.value = visible\n        input.value?.input?.setAttribute('aria-expanded', `${visible}`)\n\n        if (visible) {\n          updatePopperPosition()\n          nextTick(panel.value?.scrollToExpandingNode)\n        } else if (props.filterable) {\n          const { value } = presentText\n          inputValue.value = value\n          searchInputValue.value = value\n        }\n\n        emit('visible-change', visible)\n      }\n    }\n\n    const updatePopperPosition = () => {\n      nextTick(() => {\n        tooltipRef.value?.updatePopper()\n      })\n    }\n\n    const hideSuggestionPanel = () => {\n      filtering.value = false\n    }\n\n    const genTag = (node: CascaderNode): Tag => {\n      const { showAllLevels, separator } = props\n      return {\n        node,\n        key: node.uid,\n        text: node.calcText(showAllLevels, separator),\n        hitState: false,\n        closable: !isDisabled.value && !node.isDisabled,\n        isCollapseTag: false,\n      }\n    }\n\n    const deleteTag = (tag: Tag) => {\n      const node = tag.node as CascaderNode\n      node.doCheck(false)\n      panel.value?.calculateCheckedValue()\n      emit('remove-tag', node.valueByOption)\n    }\n\n    const calculatePresentTags = () => {\n      if (!multiple.value) return\n\n      const nodes = checkedNodes.value\n      const tags: Tag[] = []\n\n      const allTags: Tag[] = []\n      nodes.forEach((node) => allTags.push(genTag(node)))\n      allPresentTags.value = allTags\n\n      if (nodes.length) {\n        const [first, ...rest] = nodes\n        const restCount = rest.length\n\n        tags.push(genTag(first))\n\n        if (restCount) {\n          if (props.collapseTags) {\n            tags.push({\n              key: -1,\n              text: `+ ${restCount}`,\n              closable: false,\n              isCollapseTag: true,\n            })\n          } else {\n            rest.forEach((node) => tags.push(genTag(node)))\n          }\n        }\n      }\n\n      presentTags.value = tags\n    }\n\n    const calculateSuggestions = () => {\n      const { filterMethod, showAllLevels, separator } = props\n      const res = panel.value\n        ?.getFlattedNodes(!props.props.checkStrictly)\n        ?.filter((node) => {\n          if (node.isDisabled) return false\n          node.calcText(showAllLevels, separator)\n          return filterMethod(node, searchKeyword.value)\n        })\n\n      if (multiple.value) {\n        presentTags.value.forEach((tag) => {\n          tag.hitState = false\n        })\n        allPresentTags.value.forEach((tag) => {\n          tag.hitState = false\n        })\n      }\n\n      filtering.value = true\n      suggestions.value = res!\n      updatePopperPosition()\n    }\n\n    const focusFirstNode = () => {\n      let firstNode!: HTMLElement\n\n      if (filtering.value && suggestionPanel.value) {\n        firstNode = suggestionPanel.value.$el.querySelector(\n          `.${nsCascader.e('suggestion-item')}`\n        )\n      } else {\n        firstNode = panel.value?.$el.querySelector(\n          `.${nsCascader.b('node')}[tabindex=\"-1\"]`\n        )\n      }\n\n      if (firstNode) {\n        firstNode.focus()\n        !filtering.value && firstNode.click()\n      }\n    }\n\n    const updateStyle = () => {\n      const inputInner = input.value?.input\n      const tagWrapperEl = tagWrapper.value\n      const suggestionPanelEl = suggestionPanel.value?.$el\n\n      if (!isClient || !inputInner) return\n\n      if (suggestionPanelEl) {\n        const suggestionList = suggestionPanelEl.querySelector(\n          `.${nsCascader.e('suggestion-list')}`\n        )\n        suggestionList.style.minWidth = `${inputInner.offsetWidth}px`\n      }\n\n      if (tagWrapperEl) {\n        const { offsetHeight } = tagWrapperEl\n        const height =\n          presentTags.value.length > 0\n            ? `${Math.max(offsetHeight + 6, inputInitialHeight)}px`\n            : `${inputInitialHeight}px`\n        inputInner.style.height = height\n        updatePopperPosition()\n      }\n    }\n\n    const getCheckedNodes = (leafOnly: boolean) => {\n      return panel.value?.getCheckedNodes(leafOnly)\n    }\n\n    const handleExpandChange = (value: CascaderValue) => {\n      updatePopperPosition()\n      emit('expand-change', value)\n    }\n\n    const handleComposition = (event: CompositionEvent) => {\n      const text = (event.target as HTMLInputElement)?.value\n      if (event.type === 'compositionend') {\n        isOnComposition.value = false\n        nextTick(() => handleInput(text))\n      } else {\n        const lastCharacter = text[text.length - 1] || ''\n        isOnComposition.value = !isKorean(lastCharacter)\n      }\n    }\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isOnComposition.value) return\n\n      switch (e.code) {\n        case EVENT_CODE.enter:\n          togglePopperVisible()\n          break\n        case EVENT_CODE.down:\n          togglePopperVisible(true)\n          nextTick(focusFirstNode)\n          e.preventDefault()\n          break\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false)\n          break\n      }\n    }\n\n    const handleClear = () => {\n      panel.value?.clearCheckedNodes()\n      togglePopperVisible(false)\n    }\n\n    const handleSuggestionClick = (node: CascaderNode) => {\n      const { checked } = node\n\n      if (multiple.value) {\n        panel.value?.handleCheckChange(node, !checked, false)\n      } else {\n        !checked && panel.value?.handleCheckChange(node, true, false)\n        togglePopperVisible(false)\n      }\n    }\n\n    const handleSuggestionKeyDown = (e: KeyboardEvent) => {\n      const target = e.target as HTMLElement\n      const { code } = e\n\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down: {\n          const distance = code === EVENT_CODE.up ? -1 : 1\n          focusNode(\n            getSibling(\n              target,\n              distance,\n              `.${nsCascader.e('suggestion-item')}[tabindex=\"-1\"]`\n            )\n          )\n          break\n        }\n        case EVENT_CODE.enter:\n          target.click()\n          break\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          togglePopperVisible(false)\n          break\n      }\n    }\n\n    const handleDelete = () => {\n      const tags = presentTags.value\n      const lastTag = tags[tags.length - 1]\n      pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1\n\n      if (!lastTag || !pressDeleteCount) return\n\n      if (lastTag.hitState) {\n        deleteTag(lastTag)\n      } else {\n        lastTag.hitState = true\n      }\n    }\n\n    const handleFilter = debounce(() => {\n      const { value } = searchKeyword\n\n      if (!value) return\n\n      const passed = props.beforeFilter(value)\n\n      if (isPromise(passed)) {\n        passed.then(calculateSuggestions).catch(() => {\n          /* prevent log error */\n        })\n      } else if (passed !== false) {\n        calculateSuggestions()\n      } else {\n        hideSuggestionPanel()\n      }\n    }, props.debounce)\n\n    const handleInput = (val: string, e?: KeyboardEvent) => {\n      !popperVisible.value && togglePopperVisible(true)\n\n      if (e?.isComposing) return\n\n      val ? handleFilter() : hideSuggestionPanel()\n    }\n\n    watch(filtering, updatePopperPosition)\n\n    watch([checkedNodes, isDisabled], calculatePresentTags)\n\n    watch(presentTags, () => {\n      nextTick(() => updateStyle())\n    })\n\n    watch(presentText, (val) => (inputValue.value = val), { immediate: true })\n\n    onMounted(() => {\n      const inputEl = input.value?.$el\n      inputInitialHeight =\n        inputEl?.offsetHeight ||\n        INPUT_HEIGHT_MAP[realSize.value] ||\n        DEFAULT_INPUT_HEIGHT\n      addResizeListener(inputEl, updateStyle)\n    })\n\n    onBeforeUnmount(() => {\n      removeResizeListener(input.value?.$el, updateStyle)\n    })\n\n    return {\n      popperOptions,\n      tooltipRef,\n      popperPaneRef,\n      input,\n      tagWrapper,\n      panel,\n      suggestionPanel,\n      popperVisible,\n      inputHover,\n      inputPlaceholder,\n      filtering,\n      presentText,\n      checkedValue,\n      inputValue,\n      searchInputValue,\n      presentTags,\n      allPresentTags,\n      suggestions,\n      isDisabled,\n      isOnComposition,\n      realSize,\n      tagSize,\n      multiple,\n      readonly,\n      clearBtnVisible,\n      // deprecation in ver 2.1.0\n      compatTeleported,\n\n      nsCascader,\n      nsInput,\n      t,\n      togglePopperVisible,\n      hideSuggestionPanel,\n      deleteTag,\n      focusFirstNode,\n      getCheckedNodes,\n      handleExpandChange,\n      handleKeyDown,\n      handleComposition,\n      handleClear,\n      handleSuggestionClick,\n      handleSuggestionKeyDown,\n      handleDelete,\n      handleInput,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}