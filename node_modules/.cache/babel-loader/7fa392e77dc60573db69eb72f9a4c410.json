{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"header\"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_2 = {\n  id: \"content\"\n};\n\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"footer\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": _normalizeClass([$data.value ? 'dark' : 'light'])\n  }, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_view)]), _hoisted_3], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;8BAEEA,oBAEM,KAFN,EAEM;AAFDC,IAAE,EAAC;AAEF,CAFN,EAAgB,IAAhB,EAAgB;AAAA;AAAhB;;;AAGKA,IAAE,EAAC;;;8BAIRD,oBAEM,KAFN,EAEM;AAFDC,IAAE,EAAC;AAEF,CAFN,EAAgB,IAAhB,EAAgB;AAAA;AAAhB;;;;;uBARFC,oBAWM,KAXN,EAWM;AAXA,aAAKC,iBAAGC,cAAK,MAAL,GAAK,OAAR;AAWL,GAXN,GACEC,YAGAL,oBAGM,KAHN,cAGM,CADHM,aAAcC,sBAAd,CACG,CAHN,GAIAC,WARF;;AAAA","names":["_createElementVNode","id","_createElementBlock","_normalizeClass","$data","_hoisted_1","_createVNode","_component_router_view","_hoisted_3"],"sourceRoot":"","sources":["C:\\PartTimeJob\\blog\\src\\App.vue"],"sourcesContent":["<template>\n<div :class=\"[value ? 'dark' : 'light']\">\n  <div id=\"header\">\n\n  </div>\n  <div id=\"content\">\n\n     <router-view/>\n  </div>\n  <div id=\"footer\">\n\n  </div>\n</div>\n\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      activeText:\"浅色模式\",\n      value:false\n    }\n  },\n  mounted(){\n    let theme = localStorage.getItem(\"theme\")\n    console.log(\"theme:\",theme, theme===\"true\");\n    if (theme===\"true\") {\n      this.$store.state.isDarkTheme = theme;\n      this.value = true\n    }\n  },\n  methods:{\n\n  },\n  watch:{\n    value(newValue, oldValue){\n      console.log(\"newValue:\", newValue, \"oldValue:\", oldValue);\n      this.$store.state.isDarkTheme = newValue;\n      localStorage.setItem(\"theme\", newValue)\n      if (this.$store.state.isDarkTheme){\n        this.activeText = \"深色模式\"\n      } else {\n        this.activeText = \"浅色模式\"\n      }\n\n    }\n  }\n};\n</script>\n\n<style lang=\"less\">\n\n@import './less/theme.less';\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n}\n\n.dark{\n  .theme(#555555,#232323,#AAAAAA)\n}\n\n.light{\n  .theme()\n}\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}