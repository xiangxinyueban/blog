{"ast":null,"code":"import _asyncToGenerator from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.parse-float.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { defineComponent, getCurrentInstance, inject, ref, watch, nextTick, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle } from 'vue';\nimport { useResizeObserver } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { tabBarProps } from './tab-bar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { tabsRootContextKey } from '../../../tokens/tabs.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { capitalize } from '@vue/shared';\nvar __default__ = {\n  name: \"ElTabBar\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: tabBarProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var COMPONENT_NAME = \"ElTabBar\";\n    var instance = getCurrentInstance();\n    var rootTabs = inject(tabsRootContextKey);\n    if (!rootTabs) throwError(COMPONENT_NAME, \"<el-tabs><el-tab-bar /></el-tabs>\");\n    var ns = useNamespace(\"tabs\");\n    var barRef = ref();\n    var barStyle = ref();\n\n    var getBarStyle = function getBarStyle() {\n      var _ref2;\n\n      var offset = 0;\n      var tabSize = 0;\n      var sizeName = [\"top\", \"bottom\"].includes(rootTabs.props.tabPosition) ? \"width\" : \"height\";\n      var sizeDir = sizeName === \"width\" ? \"x\" : \"y\";\n      props.tabs.every(function (tab) {\n        var _a, _b, _c, _d;\n\n        var $el = (_b = (_a = instance.parent) == null ? void 0 : _a.refs) == null ? void 0 : _b[\"tab-\".concat(tab.paneName)];\n        if (!$el) return false;\n\n        if (!tab.active) {\n          return true;\n        }\n\n        tabSize = $el[\"client\".concat(capitalize(sizeName))];\n        var position = sizeDir === \"x\" ? \"left\" : \"top\";\n        offset = $el.getBoundingClientRect()[position] - ((_d = (_c = $el.parentElement) == null ? void 0 : _c.getBoundingClientRect()[position]) != null ? _d : 0);\n        var tabStyles = window.getComputedStyle($el);\n\n        if (sizeName === \"width\") {\n          if (props.tabs.length > 1) {\n            tabSize -= Number.parseFloat(tabStyles.paddingLeft) + Number.parseFloat(tabStyles.paddingRight);\n          }\n\n          offset += Number.parseFloat(tabStyles.paddingLeft);\n        }\n\n        return false;\n      });\n      return _ref2 = {}, _defineProperty(_ref2, sizeName, \"\".concat(tabSize, \"px\")), _defineProperty(_ref2, \"transform\", \"translate\".concat(capitalize(sizeDir), \"(\").concat(offset, \"px)\")), _ref2;\n    };\n\n    var update = function update() {\n      return barStyle.value = getBarStyle();\n    };\n\n    watch(function () {\n      return props.tabs;\n    }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return nextTick();\n\n            case 2:\n              update();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })), {\n      immediate: true\n    });\n    useResizeObserver(barRef, function () {\n      return update();\n    });\n    expose({\n      ref: barRef,\n      update: update\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"barRef\",\n        ref: barRef,\n        \"class\": normalizeClass([unref(ns).e(\"active-bar\"), unref(ns).is(unref(rootTabs).props.tabPosition)]),\n        style: normalizeStyle(barStyle.value)\n      }, null, 6);\n    };\n  }\n}));\n\nvar TabBar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tabs/src/tab-bar.vue\"]]);\n\nexport { TabBar as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA;AAMA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AAAA;;AACA;AACA;AAEA,8EACA,OADA,GAEA,QAFA;AAGA;AAEAA;AACA;;AACA;AAAA,kBAEA;;AACA;AACA;AAEA;;AACAC;AAEA;AAEAC;AAEA;;AACA;AAEA;AAEAD;AACA;;AACAC;AACA;;AACA;AAEA,OA1BA;AA0BA,gDAEAC,QAFA,YAEAF,OAFA,iEAGAG,mBAHA,cAGAF,MAHA;AAMA,KAzCA;;AA4CA;AAAA,qBACA,MADA,GACAG,aADA;AAAA;;AAEAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAC,UADA;;AAAA;AAGAC;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKA;AAAAC;AAAA,KALA;AAOAC;AAAA;AAAA;AAAAC,UAEA;AAEAC,iBAFA;AAGAJ;AAHA,MAFA","names":["props","tabSize","offset","sizeName","capitalize","getBarStyle","watch","nextTick","update","immediate","useResizeObserver","expose","ref"],"sources":["../../../../../../packages/components/tabs/src/tab-bar.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"barRef\"\n    :class=\"[ns.e('active-bar'), ns.is(rootTabs.props.tabPosition)]\"\n    :style=\"barStyle\"\n  />\n</template>\n<script lang=\"ts\" setup>\nimport { getCurrentInstance, inject, nextTick, ref, watch } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { capitalize, throwError } from '@element-plus/utils'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport { useNamespace } from '@element-plus/hooks'\nimport { tabBarProps } from './tab-bar'\n\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElTabBar'\ndefineOptions({\n  name: 'ElTabBar',\n})\nconst props = defineProps(tabBarProps)\n\nconst instance = getCurrentInstance()!\nconst rootTabs = inject(tabsRootContextKey)\nif (!rootTabs) throwError(COMPONENT_NAME, '<el-tabs><el-tab-bar /></el-tabs>')\n\nconst ns = useNamespace('tabs')\n\nconst barRef = ref<HTMLDivElement>()\nconst barStyle = ref<CSSProperties>()\n\nconst getBarStyle = (): CSSProperties => {\n  let offset = 0\n  let tabSize = 0\n\n  const sizeName = ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n    ? 'width'\n    : 'height'\n  const sizeDir = sizeName === 'width' ? 'x' : 'y'\n\n  props.tabs.every((tab) => {\n    const $el = instance.parent?.refs?.[`tab-${tab.paneName}`] as HTMLElement\n    if (!$el) return false\n\n    if (!tab.active) {\n      return true\n    }\n\n    tabSize = $el[`client${capitalize(sizeName)}`]\n    const position = sizeDir === 'x' ? 'left' : 'top'\n    offset =\n      $el.getBoundingClientRect()[position] -\n      ($el.parentElement?.getBoundingClientRect()[position] ?? 0)\n    const tabStyles = window.getComputedStyle($el)\n\n    if (sizeName === 'width') {\n      if (props.tabs.length > 1) {\n        tabSize -=\n          Number.parseFloat(tabStyles.paddingLeft) +\n          Number.parseFloat(tabStyles.paddingRight)\n      }\n      offset += Number.parseFloat(tabStyles.paddingLeft)\n    }\n    return false\n  })\n\n  return {\n    [sizeName]: `${tabSize}px`,\n    transform: `translate${capitalize(sizeDir)}(${offset}px)`,\n  }\n}\n\nconst update = () => (barStyle.value = getBarStyle())\n\nwatch(\n  () => props.tabs,\n  async () => {\n    await nextTick()\n    update()\n  },\n  { immediate: true }\n)\nuseResizeObserver(barRef, () => update())\n\ndefineExpose({\n  /** @description tab root html element */\n  ref: barRef,\n  /** @description method to manually update tab bar style */\n  update,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}