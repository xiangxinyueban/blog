{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { computed } from 'vue';\nimport '../../../utils/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nvar useStops = function useStops(props, initData, minValue, maxValue) {\n  var stops = computed(function () {\n    if (!props.showStops || props.min > props.max) return [];\n\n    if (props.step === 0) {\n      debugWarn(\"Slider\", \"step should not be 0.\");\n      return [];\n    }\n\n    var stopCount = (props.max - props.min) / props.step;\n    var stepWidth = 100 * props.step / (props.max - props.min);\n    var result = Array.from({\n      length: stopCount - 1\n    }).map(function (_, index) {\n      return (index + 1) * stepWidth;\n    });\n\n    if (props.range) {\n      return result.filter(function (step) {\n        return step < 100 * (minValue.value - props.min) / (props.max - props.min) || step > 100 * (maxValue.value - props.min) / (props.max - props.min);\n      });\n    } else {\n      return result.filter(function (step) {\n        return step > 100 * (initData.firstValue - props.min) / (props.max - props.min);\n      });\n    }\n  });\n\n  var getStopStyle = function getStopStyle(position) {\n    return props.vertical ? {\n      bottom: \"\".concat(position, \"%\")\n    } : {\n      left: \"\".concat(position, \"%\")\n    };\n  };\n\n  return {\n    stops: stops,\n    getStopStyle: getStopStyle\n  };\n};\n\nexport { useStops };","map":{"version":3,"mappings":";;;;;;;;;AAEY,IAACA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAyC;AAC/D,MAAMC,KAAK,GAAGC,QAAQ,CAAC,YAAM;AAC3B,QAAI,CAACL,KAAK,CAACM,SAAP,IAAoBN,KAAK,CAACO,GAAN,GAAYP,KAAK,CAACQ,GAA1C,EACE,OAAO,EAAP;;AACF,QAAIR,KAAK,CAACS,IAAN,KAAe,CAAnB,EAAsB;AACpBC,eAAS,CAAC,QAAD,EAAW,uBAAX,CAAT;AACA,aAAO,EAAP;AACD;;AACD,QAAMC,SAAS,GAAG,CAACX,KAAK,CAACQ,GAAN,GAAYR,KAAK,CAACO,GAAnB,IAA0BP,KAAK,CAACS,IAAlD;AACA,QAAMG,SAAS,GAAG,MAAMZ,KAAK,CAACS,IAAZ,IAAoBT,KAAK,CAACQ,GAAN,GAAYR,KAAK,CAACO,GAAtC,CAAlB;AACA,QAAMM,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEC,YAAM,EAAEL,SAAS,GAAG;AAAtB,KAAX,EAAsCM,GAAtC,CAA0C,UAACC,CAAD,EAAIC,KAAJ;AAAA,aAAc,CAACA,KAAK,GAAG,CAAT,IAAcP,SAA5B;AAAA,KAA1C,CAAf;;AACA,QAAIZ,KAAK,CAACoB,KAAV,EAAiB;AACf,aAAOP,MAAM,CAACQ,MAAP,CAAc,UAACZ,IAAD,EAAU;AAC7B,eAAOA,IAAI,GAAG,OAAOP,QAAQ,CAACoB,KAAT,GAAiBtB,KAAK,CAACO,GAA9B,KAAsCP,KAAK,CAACQ,GAAN,GAAYR,KAAK,CAACO,GAAxD,CAAP,IAAuEE,IAAI,GAAG,OAAON,QAAQ,CAACmB,KAAT,GAAiBtB,KAAK,CAACO,GAA9B,KAAsCP,KAAK,CAACQ,GAAN,GAAYR,KAAK,CAACO,GAAxD,CAArF;AACD,OAFM,CAAP;AAGD,KAJD,MAIO;AACL,aAAOM,MAAM,CAACQ,MAAP,CAAc,UAACZ,IAAD;AAAA,eAAUA,IAAI,GAAG,OAAOR,QAAQ,CAACsB,UAAT,GAAsBvB,KAAK,CAACO,GAAnC,KAA2CP,KAAK,CAACQ,GAAN,GAAYR,KAAK,CAACO,GAA7D,CAAjB;AAAA,OAAd,CAAP;AACD;AACF,GAjBqB,CAAtB;;AAkBA,MAAMiB,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAc;AACjC,WAAOzB,KAAK,CAAC0B,QAAN,GAAiB;AAAEC,YAAM,YAAKF,QAAL;AAAR,KAAjB,GAA8C;AAAEG,UAAI,YAAKH,QAAL;AAAN,KAArD;AACD,GAFD;;AAGA,SAAO;AACLrB,SAAK,EAALA,KADK;AAELoB,gBAAY,EAAZA;AAFK,GAAP;AAIF,CA1BY","names":["useStops","props","initData","minValue","maxValue","stops","computed","showStops","min","max","step","debugWarn","stopCount","stepWidth","result","Array","from","length","map","_","index","range","filter","value","firstValue","getStopStyle","position","vertical","bottom","left"],"sources":["../../../../../../packages/components/slider/src/useStops.ts"],"sourcesContent":["import { computed } from 'vue'\nimport { debugWarn } from '@element-plus/utils'\nimport type { CSSProperties, ComputedRef } from 'vue'\nimport type { ISliderInitData, ISliderProps, Stops } from './slider.type'\n\nexport const useStops = (\n  props: ISliderProps,\n  initData: ISliderInitData,\n  minValue: ComputedRef<number>,\n  maxValue: ComputedRef<number>\n): Stops => {\n  const stops = computed(() => {\n    if (!props.showStops || props.min > props.max) return []\n    if (props.step === 0) {\n      debugWarn('Slider', 'step should not be 0.')\n      return []\n    }\n\n    const stopCount = (props.max - props.min) / props.step\n    const stepWidth = (100 * props.step) / (props.max - props.min)\n    const result = Array.from<number>({ length: stopCount - 1 }).map(\n      (_, index) => (index + 1) * stepWidth\n    )\n\n    if (props.range) {\n      return result.filter((step) => {\n        return (\n          step <\n            (100 * (minValue.value - props.min)) / (props.max - props.min) ||\n          step > (100 * (maxValue.value - props.min)) / (props.max - props.min)\n        )\n      })\n    } else {\n      return result.filter(\n        (step) =>\n          step >\n          (100 * (initData.firstValue - props.min)) / (props.max - props.min)\n      )\n    }\n  })\n\n  const getStopStyle = (position: number) => {\n    return (\n      props.vertical ? { bottom: `${position}%` } : { left: `${position}%` }\n    ) as CSSProperties\n  }\n\n  return {\n    stops,\n    getStopStyle,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}