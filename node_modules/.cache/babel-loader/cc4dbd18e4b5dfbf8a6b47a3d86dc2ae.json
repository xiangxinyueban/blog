{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { defineComponent, getCurrentInstance, inject, ref, computed, watch, reactive, markRaw, unref, withDirectives, openBlock, createElementBlock, normalizeClass, renderSlot, vShow, createCommentVNode } from 'vue';\nimport { eagerComputed } from '@vueuse/core';\nimport '../../../tokens/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { tabPaneProps } from './tab-pane.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { tabsRootContextKey } from '../../../tokens/tabs.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar _hoisted_1 = [\"id\", \"aria-hidden\", \"aria-labelledby\"];\nvar __default__ = {\n  name: \"ElTabPane\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: tabPaneProps,\n  setup: function setup(__props) {\n    var props = __props;\n    var COMPONENT_NAME = \"ElTabPane\";\n    var instance = getCurrentInstance();\n    var tabsRoot = inject(tabsRootContextKey);\n    if (!tabsRoot) throwError(COMPONENT_NAME, \"usage: <el-tabs><el-tab-pane /></el-tabs/>\");\n    var ns = useNamespace(\"tab-pane\");\n    var index = ref();\n    var isClosable = computed(function () {\n      return props.closable || tabsRoot.props.closable;\n    });\n    var active = eagerComputed(function () {\n      return tabsRoot.currentName.value === (props.name || index.value);\n    });\n    var loaded = ref(active.value);\n    var paneName = computed(function () {\n      return props.name || index.value;\n    });\n    var shouldBeRender = eagerComputed(function () {\n      return !props.lazy || loaded.value || active.value;\n    });\n    watch(active, function (val) {\n      if (val) loaded.value = true;\n    });\n    tabsRoot.updatePaneState(reactive({\n      uid: instance.uid,\n      instance: markRaw(instance),\n      props: props,\n      paneName: paneName,\n      active: active,\n      index: index,\n      isClosable: isClosable\n    }));\n    return function (_ctx, _cache) {\n      return unref(shouldBeRender) ? withDirectives((openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        id: \"pane-\".concat(unref(paneName)),\n        \"class\": normalizeClass(unref(ns).b()),\n        role: \"tabpanel\",\n        \"aria-hidden\": !unref(active),\n        \"aria-labelledby\": \"tab-\".concat(unref(paneName))\n      }, [renderSlot(_ctx.$slots, \"default\")], 10, _hoisted_1)), [[vShow, unref(active)]]) : createCommentVNode(\"v-if\", true);\n    };\n  }\n}));\n\nvar TabPane = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tabs/src/tab-pane.vue\"]]);\n\nexport { TabPane as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AA6BA;AAMA;AACA;AACA,mBACAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA,+BACA;AAAA;AAAA,KADA;AAGA;AACA;AAAA;AAAA;AACA,uCACA;AAAA;AAAA,KADA;AAIAC;AACA;AACA,KAFA;AAIAC,6BACAC;AACAC,uBADA;AAEAC,iCAFA;AAGAC,kBAHA;AAIAC,wBAJA;AAKAC,oBALA;AAMAC,kBANA;AAOAC;AAPA,MADA","names":["throwError","watch","tabsRoot","reactive","uid","instance","props","paneName","active","index","isClosable"],"sources":["../../../../../../packages/components/tabs/src/tab-pane.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"shouldBeRender\"\n    v-show=\"active\"\n    :id=\"`pane-${paneName}`\"\n    :class=\"ns.b()\"\n    role=\"tabpanel\"\n    :aria-hidden=\"!active\"\n    :aria-labelledby=\"`tab-${paneName}`\"\n  >\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  getCurrentInstance,\n  inject,\n  markRaw,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { eagerComputed } from '@vueuse/core'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport { throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { tabPaneProps } from './tab-pane'\n\nconst COMPONENT_NAME = 'ElTabPane'\ndefineOptions({\n  name: 'ElTabPane',\n})\nconst props = defineProps(tabPaneProps)\n\nconst instance = getCurrentInstance()!\nconst tabsRoot = inject(tabsRootContextKey)\nif (!tabsRoot)\n  throwError(COMPONENT_NAME, 'usage: <el-tabs><el-tab-pane /></el-tabs/>')\n\nconst ns = useNamespace('tab-pane')\n\nconst index = ref<string>()\nconst isClosable = computed(() => props.closable || tabsRoot.props.closable)\nconst active = eagerComputed(\n  () => tabsRoot.currentName.value === (props.name || index.value)\n)\nconst loaded = ref(active.value)\nconst paneName = computed(() => props.name || index.value)\nconst shouldBeRender = eagerComputed(\n  () => !props.lazy || loaded.value || active.value\n)\n\nwatch(active, (val) => {\n  if (val) loaded.value = true\n})\n\ntabsRoot.updatePaneState(\n  reactive({\n    uid: instance.uid,\n    instance: markRaw(instance),\n    props,\n    paneName,\n    active,\n    index,\n    isClosable,\n  })\n)\n</script>\n"]},"metadata":{},"sourceType":"module"}