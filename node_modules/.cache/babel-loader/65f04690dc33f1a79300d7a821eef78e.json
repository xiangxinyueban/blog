{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, ref, provide, h } from 'vue';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js';\nimport { DEFAULT_FORMATS_TIME } from './common/constant.mjs';\nimport CommonPicker from './common/picker.mjs';\nimport TimePickPanel from './time-picker-com/panel-time-pick.mjs';\nimport TimeRangePanel from './time-picker-com/panel-time-range.mjs';\nimport { timePickerDefaultProps } from './common/props.mjs';\ndayjs.extend(customParseFormat);\nvar TimePicker = defineComponent({\n  name: \"ElTimePicker\",\n  install: null,\n  props: _objectSpread(_objectSpread({}, timePickerDefaultProps), {}, {\n    isRange: {\n      type: Boolean,\n      \"default\": false\n    }\n  }),\n  emits: [\"update:modelValue\"],\n  setup: function setup(props, ctx) {\n    var commonPicker = ref(null);\n    var type = props.isRange ? \"timerange\" : \"time\";\n    var panel = props.isRange ? TimeRangePanel : TimePickPanel;\n\n    var refProps = _objectSpread(_objectSpread({}, props), {}, {\n      focus: function focus() {\n        var _a;\n\n        (_a = commonPicker.value) == null ? void 0 : _a.handleFocus();\n      },\n      blur: function blur() {\n        var _a;\n\n        (_a = commonPicker.value) == null ? void 0 : _a.handleBlur();\n      }\n    });\n\n    provide(\"ElPopperOptions\", props.popperOptions);\n    ctx.expose(refProps);\n    return function () {\n      var _a;\n\n      var format = (_a = props.format) != null ? _a : DEFAULT_FORMATS_TIME;\n      return h(CommonPicker, _objectSpread(_objectSpread({}, props), {}, {\n        format: format,\n        type: type,\n        ref: commonPicker,\n        \"onUpdate:modelValue\": function onUpdateModelValue(value) {\n          return ctx.emit(\"update:modelValue\", value);\n        }\n      }), {\n        \"default\": function _default(scopedProps) {\n          return h(panel, scopedProps);\n        }\n      });\n    };\n  }\n});\nexport { TimePicker as default };","map":{"version":3,"mappings":";;;;;;;;;AAQAA,KAAK,CAACC,MAAN,CAAaC,iBAAb;AACA,iBAAeC,eAAe,CAAC;AAC7BC,MAAI,EAAE,cADuB;AAE7BC,SAAO,EAAE,IAFoB;AAG7BC,OAAK,kCACAC,sBADA;AAEHC,WAAO,EAAE;AACPC,UAAI,EAAEC,OADC;AAEP,iBAAS;AAFF;AAFN,IAHwB;AAU7BC,OAAK,EAAE,CAAC,mBAAD,CAVsB;AAW7BC,OAX6B,iBAWvBN,KAXuB,EAWhBO,GAXgB,EAWX;AAChB,QAAMC,YAAY,GAAGC,GAAG,CAAC,IAAD,CAAxB;AACA,QAAMN,IAAI,GAAGH,KAAK,CAACE,OAAN,GAAgB,WAAhB,GAA8B,MAA3C;AACA,QAAMQ,KAAK,GAAGV,KAAK,CAACE,OAAN,GAAgBS,cAAhB,GAAiCC,aAA/C;;AACA,QAAMC,QAAQ,mCACTb,KADS;AAEZc,WAAK,EAAE,iBAAM;AACX,YAAIC,EAAJ;;AACA,SAACA,EAAE,GAAGP,YAAY,CAACQ,KAAnB,KAA6B,IAA7B,GAAoC,KAAK,CAAzC,GAA6CD,EAAE,CAACE,WAAH,EAA7C;AACD,OALW;AAMZC,UAAI,EAAE,gBAAM;AACV,YAAIH,EAAJ;;AACA,SAACA,EAAE,GAAGP,YAAY,CAACQ,KAAnB,KAA6B,IAA7B,GAAoC,KAAK,CAAzC,GAA6CD,EAAE,CAACI,UAAH,EAA7C;AACD;AATW,MAAd;;AAWAC,WAAO,CAAC,iBAAD,EAAoBpB,KAAK,CAACqB,aAA1B,CAAP;AACAd,OAAG,CAACe,MAAJ,CAAWT,QAAX;AACA,WAAO,YAAM;AACX,UAAIE,EAAJ;;AACA,UAAMQ,MAAM,GAAG,CAACR,EAAE,GAAGf,KAAK,CAACuB,MAAZ,KAAuB,IAAvB,GAA8BR,EAA9B,GAAmCS,oBAAlD;AACA,aAAOC,CAAC,CAACC,YAAD,kCACH1B,KADG;AAENuB,cAAM,EAANA,MAFM;AAGNpB,YAAI,EAAJA,IAHM;AAINM,WAAG,EAAED,YAJC;AAKN,+BAAuB,4BAACQ,KAAD;AAAA,iBAAWT,GAAG,CAACoB,IAAJ,CAAS,mBAAT,EAA8BX,KAA9B,CAAX;AAAA;AALjB,UAML;AACD,mBAAS,kBAACY,WAAD;AAAA,iBAAiBH,CAAC,CAACf,KAAD,EAAQkB,WAAR,CAAlB;AAAA;AADR,OANK,CAAR;AASD,KAZD;AAaD;AAzC4B,CAAD,CAA9B","names":["dayjs","extend","customParseFormat","defineComponent","name","install","props","timePickerDefaultProps","isRange","type","Boolean","emits","setup","ctx","commonPicker","ref","panel","TimeRangePanel","TimePickPanel","refProps","focus","_a","value","handleFocus","blur","handleBlur","provide","popperOptions","expose","format","DEFAULT_FORMATS_TIME","h","Picker","emit","scopedProps"],"sources":["../../../../../../packages/components/time-picker/src/time-picker.ts"],"sourcesContent":["import { defineComponent, h, provide, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js'\nimport { DEFAULT_FORMATS_TIME } from './common/constant'\nimport Picker from './common/picker.vue'\nimport TimePickPanel from './time-picker-com/panel-time-pick.vue'\nimport TimeRangePanel from './time-picker-com/panel-time-range.vue'\nimport { timePickerDefaultProps } from './common/props'\ndayjs.extend(customParseFormat)\n\nexport default defineComponent({\n  name: 'ElTimePicker',\n  install: null,\n  props: {\n    ...timePickerDefaultProps,\n    isRange: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['update:modelValue'],\n  setup(props, ctx) {\n    const commonPicker = ref(null)\n    const type = props.isRange ? 'timerange' : 'time'\n    const panel = props.isRange ? TimeRangePanel : TimePickPanel\n    const refProps = {\n      ...props,\n      focus: () => {\n        commonPicker.value?.handleFocus()\n      },\n      blur: () => {\n        commonPicker.value?.handleBlur()\n      },\n    }\n    provide('ElPopperOptions', props.popperOptions)\n    ctx.expose(refProps)\n    return () => {\n      const format = props.format ?? DEFAULT_FORMATS_TIME\n      return h(\n        Picker,\n        {\n          ...props, // allow format to be overwrite\n          format,\n          type,\n          ref: commonPicker,\n          'onUpdate:modelValue': (value) =>\n            ctx.emit('update:modelValue', value),\n        },\n        {\n          default: (scopedProps) => h(panel, scopedProps),\n        }\n      )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}