{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { defineComponent, inject, ref, computed, h, withCtx, renderSlot, withKeys, withModifiers } from 'vue';\nimport { get } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport '../../virtual-list/index.mjs';\nimport '../../../hooks/index.mjs';\nimport GroupItem from './group-item.mjs';\nimport OptionItem from './option-item.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nimport { isObject } from '@vue/shared';\nimport FixedSizeList from '../../virtual-list/src/components/fixed-size-list.mjs';\nimport DynamicSizeList from '../../virtual-list/src/components/dynamic-size-list.mjs';\n\nvar _sfc_main = defineComponent({\n  name: \"ElSelectDropdown\",\n  props: {\n    data: Array,\n    hoveringIndex: Number,\n    width: Number\n  },\n  setup: function setup(props) {\n    var select = inject(selectV2InjectionKey);\n    var ns = useNamespace(\"select\");\n    var cachedHeights = ref([]);\n    var listRef = ref(null);\n    var isSized = computed(function () {\n      return isUndefined(select.props.estimatedOptionHeight);\n    });\n    var listProps = computed(function () {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight\n        };\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: function itemSize(idx) {\n          return cachedHeights.value[idx];\n        }\n      };\n    });\n\n    var contains = function contains() {\n      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var target = arguments.length > 1 ? arguments[1] : undefined;\n      var valueKey = select.props.valueKey;\n\n      if (!isObject(target)) {\n        return arr.includes(target);\n      }\n\n      return arr && arr.some(function (item) {\n        return get(item, valueKey) === get(target, valueKey);\n      });\n    };\n\n    var isEqual = function isEqual(selected, target) {\n      if (!isObject(target)) {\n        return selected === target;\n      } else {\n        var valueKey = select.props.valueKey;\n        return get(selected, valueKey) === get(target, valueKey);\n      }\n    };\n\n    var isItemSelected = function isItemSelected(modelValue, target) {\n      var valueKey = select.props.valueKey;\n\n      if (select.props.multiple) {\n        return contains(modelValue, get(target, valueKey));\n      }\n\n      return isEqual(modelValue, get(target, valueKey));\n    };\n\n    var isItemDisabled = function isItemDisabled(modelValue, selected) {\n      var _select$props = select.props,\n          disabled = _select$props.disabled,\n          multiple = _select$props.multiple,\n          multipleLimit = _select$props.multipleLimit;\n      return disabled || !selected && (multiple ? multipleLimit > 0 && modelValue.length >= multipleLimit : false);\n    };\n\n    var isItemHovering = function isItemHovering(target) {\n      return props.hoveringIndex === target;\n    };\n\n    var scrollToItem = function scrollToItem(index) {\n      var list = listRef.value;\n\n      if (list) {\n        list.scrollToItem(index);\n      }\n    };\n\n    var resetScrollTop = function resetScrollTop() {\n      var list = listRef.value;\n\n      if (list) {\n        list.resetScrollTop();\n      }\n    };\n\n    return {\n      ns: ns,\n      select: select,\n      listProps: listProps,\n      listRef: listRef,\n      isSized: isSized,\n      isItemDisabled: isItemDisabled,\n      isItemHovering: isItemHovering,\n      isItemSelected: isItemSelected,\n      scrollToItem: scrollToItem,\n      resetScrollTop: resetScrollTop\n    };\n  },\n  render: function render(_ctx, _cache) {\n    var _a;\n\n    var $slots = _ctx.$slots,\n        data = _ctx.data,\n        listProps = _ctx.listProps,\n        select = _ctx.select,\n        isSized = _ctx.isSized,\n        width = _ctx.width,\n        ns = _ctx.ns,\n        isItemDisabled = _ctx.isItemDisabled,\n        isItemHovering = _ctx.isItemHovering,\n        isItemSelected = _ctx.isItemSelected;\n    var Comp = isSized ? FixedSizeList : DynamicSizeList;\n    var selectProps = select.props,\n        onSelect = select.onSelect,\n        onHover = select.onHover,\n        onKeyboardNavigate = select.onKeyboardNavigate,\n        onKeyboardSelect = select.onKeyboardSelect;\n    var height = selectProps.height,\n        modelValue = selectProps.modelValue,\n        multiple = selectProps.multiple;\n\n    if (data.length === 0) {\n      return h(\"div\", {\n        \"class\": ns.b(\"dropdown\"),\n        style: {\n          width: \"\".concat(width, \"px\")\n        }\n      }, (_a = $slots.empty) == null ? void 0 : _a.call($slots));\n    }\n\n    var ListItem = withCtx(function (scoped) {\n      var index = scoped.index,\n          data2 = scoped.data;\n      var item = data2[index];\n\n      if (data2[index].type === \"Group\") {\n        return h(GroupItem, {\n          item: item,\n          style: scoped.style,\n          height: isSized ? listProps.itemSize : listProps.estimatedSize\n        });\n      }\n\n      var selected = isItemSelected(modelValue, item);\n      var itemDisabled = isItemDisabled(modelValue, selected);\n      return h(OptionItem, _objectSpread(_objectSpread({}, scoped), {}, {\n        selected: selected,\n        disabled: item.disabled || itemDisabled,\n        created: !!item.created,\n        hovering: isItemHovering(index),\n        item: item,\n        onSelect: onSelect,\n        onHover: onHover\n      }), {\n        \"default\": withCtx(function (props) {\n          return renderSlot($slots, \"default\", props, function () {\n            return [h(\"span\", item.label)];\n          });\n        })\n      });\n    });\n    var List = h(Comp, _objectSpread({\n      ref: \"listRef\",\n      className: ns.be(\"dropdown\", \"list\"),\n      data: data,\n      height: height,\n      width: width,\n      total: data.length,\n      scrollbarAlwaysOn: selectProps.scrollbarAlwaysOn,\n      onKeydown: [_cache[1] || (_cache[1] = withKeys(withModifiers(function () {\n        return onKeyboardNavigate(\"forward\");\n      }, [\"stop\", \"prevent\"]), [\"down\"])), _cache[2] || (_cache[2] = withKeys(withModifiers(function () {\n        return onKeyboardNavigate(\"backward\");\n      }, [\"stop\", \"prevent\"]), [\"up\"])), _cache[3] || (_cache[3] = withKeys(withModifiers(onKeyboardSelect, [\"stop\", \"prevent\"]), [\"enter\"])), _cache[4] || (_cache[4] = withKeys(withModifiers(function () {\n        return select.expanded = false;\n      }, [\"stop\", \"prevent\"]), [\"esc\"])), _cache[5] || (_cache[5] = withKeys(function () {\n        return select.expanded = false;\n      }, [\"tab\"]))]\n    }, listProps), {\n      \"default\": ListItem\n    });\n    return h(\"div\", {\n      \"class\": [ns.b(\"dropdown\"), ns.is(\"multiple\", multiple)]\n    }, [List]);\n  }\n});\n\nvar ElSelectMenu = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/select-v2/src/select-dropdown.vue\"]]);\n\nexport { ElSelectMenu as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","props","data","hoveringIndex","width","setup","inject","selectV2InjectionKey","useNamespace","ref","isSized","computed","isUndefined","select","estimatedOptionHeight","value","itemSize","itemHeight","estimatedSize","idx","cachedHeights","contains","arr","target","valueKey","isObject","includes","some","item","get","isEqual","selected","isItemSelected","modelValue","multiple","isItemDisabled","disabled","multipleLimit","length","isItemHovering","scrollToItem","index","list","listRef","resetScrollTop","ns","listProps","render","_ctx","_cache","$slots","selectProps","onSelect","onHover","onKeyboardNavigate","onKeyboardSelect","style","withCtx","scoped","data2","type","height","itemDisabled","created","hovering","renderSlot","h","List","className","total","scrollbarAlwaysOn","onKeydown","withKeys","withModifiers"],"sources":["../../../../../../packages/components/select-v2/src/select-dropdown.vue"],"sourcesContent":["<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  ref,\n  renderSlot,\n  withCtx,\n  withKeys,\n  withModifiers,\n} from 'vue'\nimport { get } from 'lodash-unified'\nimport { isObject, isUndefined } from '@element-plus/utils'\nimport {\n  DynamicSizeList,\n  FixedSizeList,\n} from '@element-plus/components/virtual-list'\nimport { useNamespace } from '@element-plus/hooks'\nimport GroupItem from './group-item.vue'\nimport OptionItem from './option-item.vue'\n\nimport { selectV2InjectionKey } from './token'\n\nimport type { ItemProps } from '@element-plus/components/virtual-list'\nimport type { Option, OptionItemProps } from './select.types'\n\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n\n  props: {\n    data: Array,\n    hoveringIndex: Number,\n    width: Number,\n  },\n  setup(props) {\n    const select = inject(selectV2InjectionKey) as any\n    const ns = useNamespace('select')\n    const cachedHeights = ref<Array<number>>([])\n\n    const listRef = ref(null)\n\n    const isSized = computed(() =>\n      isUndefined(select.props.estimatedOptionHeight)\n    )\n    const listProps = computed(() => {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight,\n        }\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: (idx: number) => cachedHeights.value[idx],\n      }\n    })\n\n    const contains = (arr: Array<any> = [], target: any) => {\n      const {\n        props: { valueKey },\n      } = select\n\n      if (!isObject(target)) {\n        return arr.includes(target)\n      }\n\n      return (\n        arr &&\n        arr.some((item) => {\n          return get(item, valueKey) === get(target, valueKey)\n        })\n      )\n    }\n    const isEqual = (selected: unknown, target: unknown) => {\n      if (!isObject(target)) {\n        return selected === target\n      } else {\n        const { valueKey } = select.props\n        return get(selected, valueKey) === get(target, valueKey)\n      }\n    }\n\n    const isItemSelected = (modelValue: any[] | any, target: Option) => {\n      const { valueKey } = select.props\n      if (select.props.multiple) {\n        return contains(modelValue, get(target, valueKey))\n      }\n      return isEqual(modelValue, get(target, valueKey))\n    }\n\n    const isItemDisabled = (modelValue: any[] | any, selected: boolean) => {\n      const { disabled, multiple, multipleLimit } = select.props\n      return (\n        disabled ||\n        (!selected &&\n          (multiple\n            ? multipleLimit > 0 && modelValue.length >= multipleLimit\n            : false))\n      )\n    }\n\n    const isItemHovering = (target: number) => props.hoveringIndex === target\n\n    const scrollToItem = (index: number) => {\n      const list = listRef.value as any\n      if (list) {\n        list.scrollToItem(index)\n      }\n    }\n\n    const resetScrollTop = () => {\n      const list = listRef.value as any\n      if (list) {\n        list.resetScrollTop()\n      }\n    }\n\n    // computed\n    return {\n      ns,\n      select,\n      listProps,\n      listRef,\n      isSized,\n\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n\n      scrollToItem,\n      resetScrollTop,\n    }\n  },\n\n  render(_ctx, _cache) {\n    const {\n      $slots,\n\n      data,\n      listProps,\n      select,\n      isSized,\n      width,\n      ns,\n      // methods\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n    } = _ctx\n\n    const Comp = isSized ? FixedSizeList : DynamicSizeList\n\n    const {\n      props: selectProps,\n      onSelect,\n      onHover,\n      onKeyboardNavigate,\n      onKeyboardSelect,\n    } = select\n    const { height, modelValue, multiple } = selectProps\n\n    if (data.length === 0) {\n      return h(\n        'div',\n        {\n          class: ns.b('dropdown'),\n          style: {\n            width: `${width}px`,\n          },\n        },\n        $slots.empty?.()\n      )\n    }\n\n    const ListItem = withCtx((scoped: ItemProps<any>) => {\n      const { index, data } = scoped\n      const item = data[index]\n      // render group item which is not selectable.\n      if (data[index].type === 'Group') {\n        return h(GroupItem, {\n          item,\n          style: scoped.style,\n          height: isSized ? listProps.itemSize : listProps.estimatedSize,\n        })\n      }\n\n      const selected = isItemSelected(modelValue, item)\n      const itemDisabled = isItemDisabled(modelValue, selected)\n      // render option item which is selectable\n      return h(\n        OptionItem,\n        {\n          ...scoped,\n          selected,\n          disabled: item.disabled || itemDisabled,\n          created: !!item.created,\n          hovering: isItemHovering(index),\n          item,\n          onSelect,\n          onHover,\n        },\n        {\n          default: withCtx((props: OptionItemProps) => {\n            return renderSlot($slots, 'default', props, () => [\n              h('span', item.label),\n            ])\n          }),\n        }\n      )\n    })\n\n    const List = h(\n      Comp,\n      {\n        ref: 'listRef', // forwarded ref so that select can access the list directly\n        className: ns.be('dropdown', 'list'),\n        data,\n        height,\n        width,\n        total: data.length,\n        scrollbarAlwaysOn: selectProps.scrollbarAlwaysOn,\n        onKeydown: [\n          _cache[1] ||\n            (_cache[1] = withKeys(\n              withModifiers(\n                () => onKeyboardNavigate('forward'),\n                ['stop', 'prevent']\n              ),\n              ['down']\n            )),\n          _cache[2] ||\n            (_cache[2] = withKeys(\n              withModifiers(\n                () => onKeyboardNavigate('backward'),\n                ['stop', 'prevent']\n              ),\n              ['up']\n            )),\n          _cache[3] ||\n            (_cache[3] = withKeys(\n              withModifiers(onKeyboardSelect, ['stop', 'prevent']),\n              ['enter']\n            )),\n\n          _cache[4] ||\n            (_cache[4] = withKeys(\n              withModifiers(\n                () => (select.expanded = false),\n                ['stop', 'prevent']\n              ),\n              ['esc']\n            )),\n          _cache[5] ||\n            (_cache[5] = withKeys(() => (select.expanded = false), ['tab'])),\n          // _cache[6] || (_cache[6] = () => {\n          //   console.log(11)\n          // }),\n        ],\n        ...listProps,\n      },\n      {\n        default: ListItem,\n      }\n    )\n    return h(\n      'div',\n      {\n        class: [ns.b('dropdown'), ns.is('multiple', multiple)],\n      },\n      [List]\n    )\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}