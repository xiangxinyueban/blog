{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nexport { camelize, capitalize, hyphenate, hyphenate as kebabCase } from '@vue/shared';\n\nvar escapeStringRegexp = function escapeStringRegexp() {\n  var string = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\").replace(/-/g, \"\\\\x2d\");\n};\n\nexport { escapeStringRegexp };","map":{"version":3,"mappings":";;;;AAMY,IAACA,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAACC,MAAD,uEAAU,EAAV;AAAA,SAAiBA,MAAM,CAACC,OAAP,CAAe,qBAAf,EAAsC,MAAtC,EAA8CA,OAA9C,CAAsD,IAAtD,EAA4D,OAA5D,CAAjB;AAAA,CAAtB","names":["escapeStringRegexp","string","replace"],"sources":["../../../../packages/utils/strings.ts"],"sourcesContent":["export {\n  camelize,\n  capitalize,\n  hyphenate,\n  hyphenate as kebabCase, // alias\n} from '@vue/shared'\n\n/**\n * fork from {@link https://github.com/sindresorhus/escape-string-regexp}\n */\nexport const escapeStringRegexp = (string = '') =>\n  string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d')\n"]},"metadata":{},"sourceType":"module"}