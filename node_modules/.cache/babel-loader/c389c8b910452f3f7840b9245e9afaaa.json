{"ast":null,"code":"import _defineProperty from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, inject, computed, openBlock, createElementBlock, normalizeStyle, unref, normalizeClass } from 'vue';\nimport '../../../tokens/index.mjs';\nimport { tooltipV2ArrowProps, tooltipV2ArrowSpecialProps } from './arrow.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { tooltipV2RootKey, tooltipV2ContentKey } from '../../../tokens/tooltip-v2.mjs';\nvar __default__ = {\n  name: \"ElTooltipV2Arrow\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: _objectSpread(_objectSpread({}, tooltipV2ArrowProps), tooltipV2ArrowSpecialProps),\n  setup: function setup(__props) {\n    var props = __props;\n\n    var _inject = inject(tooltipV2RootKey),\n        ns = _inject.ns;\n\n    var _inject2 = inject(tooltipV2ContentKey),\n        arrowRef = _inject2.arrowRef;\n\n    var arrowStyle = computed(function () {\n      var _objectSpread2;\n\n      var style = props.style,\n          width = props.width,\n          height = props.height;\n      var namespace = ns.namespace.value;\n      return _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, \"--\".concat(namespace, \"-tooltip-v2-arrow-width\"), \"\".concat(width, \"px\")), _defineProperty(_objectSpread2, \"--\".concat(namespace, \"-tooltip-v2-arrow-height\"), \"\".concat(height, \"px\")), _defineProperty(_objectSpread2, \"--\".concat(namespace, \"-tooltip-v2-arrow-border-width\"), \"\".concat(width / 2, \"px\")), _defineProperty(_objectSpread2, \"--\".concat(namespace, \"-tooltip-v2-arrow-cover-width\"), width / 2 - 1), _objectSpread2), style || {});\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"span\", {\n        ref_key: \"arrowRef\",\n        ref: arrowRef,\n        style: normalizeStyle(unref(arrowStyle)),\n        \"class\": normalizeClass(unref(ns).e(\"arrow\"))\n      }, null, 6);\n    };\n  }\n}));\n\nvar TooltipV2Arrow = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/arrow.vue\"]]);\n\nexport { TooltipV2Arrow as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAoBA;AAAA;;AACA;AAAA;;AAEA;AAAA;;AACA;AAAA;AAAA;AACA;AAEA,6FACAA,SADA,wCACAC,KADA,sDAEAD,SAFA,yCAEAE,MAFA,sDAGAF,SAHA,+CAGAC,SAHA,sDAIAD,SAJA,oCAIAC,aAJA,oBAKAE,WALA;AAOA,KAXA","names":["namespace","width","height","style"],"sources":["../../../../../../packages/components/tooltip-v2/src/arrow.vue"],"sourcesContent":["<template>\n  <span ref=\"arrowRef\" :style=\"arrowStyle\" :class=\"ns.e('arrow')\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, inject } from 'vue'\nimport { tooltipV2ContentKey, tooltipV2RootKey } from '@element-plus/tokens'\nimport { tooltipV2ArrowProps, tooltipV2ArrowSpecialProps } from './arrow'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElTooltipV2Arrow',\n})\n\nconst props = defineProps({\n  ...tooltipV2ArrowProps,\n  ...tooltipV2ArrowSpecialProps,\n})\n\nconst { ns } = inject(tooltipV2RootKey)!\nconst { arrowRef } = inject(tooltipV2ContentKey)!\n\nconst arrowStyle = computed<CSSProperties>(() => {\n  const { style, width, height } = props\n  const namespace = ns.namespace.value\n\n  return {\n    [`--${namespace}-tooltip-v2-arrow-width`]: `${width}px`,\n    [`--${namespace}-tooltip-v2-arrow-height`]: `${height}px`,\n    [`--${namespace}-tooltip-v2-arrow-border-width`]: `${width / 2}px`,\n    [`--${namespace}-tooltip-v2-arrow-cover-width`]: width / 2 - 1,\n    ...(style || {}),\n  }\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}