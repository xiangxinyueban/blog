{"ast":null,"code":"import _objectSpread from \"C:/PartTimeJob/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineComponent, openBlock, createElementBlock, normalizeClass, unref, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, renderSlot } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { linkProps, linkEmits } from './link.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar _hoisted_1 = [\"href\"];\nvar __default__ = {\n  name: \"ElLink\"\n};\n\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: linkProps,\n  emits: linkEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"link\");\n\n    function handleClick(event) {\n      if (!props.disabled) emit(\"click\", event);\n    }\n\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"a\", {\n        \"class\": normalizeClass([unref(ns).b(), unref(ns).m(_ctx.type), unref(ns).is(\"disabled\", _ctx.disabled), unref(ns).is(\"underline\", _ctx.underline && !_ctx.disabled)]),\n        href: _ctx.disabled || !_ctx.href ? void 0 : _ctx.href,\n        onClick: handleClick\n      }, [_ctx.icon ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))];\n        }),\n        _: 1\n      })) : createCommentVNode(\"v-if\", true), _ctx.$slots[\"default\"] ? (openBlock(), createElementBlock(\"span\", {\n        key: 1,\n        \"class\": normalizeClass(unref(ns).e(\"inner\"))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2)) : createCommentVNode(\"v-if\", true), _ctx.$slots.icon ? renderSlot(_ctx.$slots, \"icon\", {\n        key: 2\n      }) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n    };\n  }\n}));\n\nvar Link = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/link/src/link.vue\"]]);\n\nexport { Link as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;AACA","names":[],"sources":["../../../../../../packages/components/link/src/link.vue"],"sourcesContent":["<template>\n  <a\n    :class=\"[\n      ns.b(),\n      ns.m(type),\n      ns.is('disabled', disabled),\n      ns.is('underline', underline && !disabled),\n    ]\"\n    :href=\"disabled || !href ? undefined : href\"\n    @click=\"handleClick\"\n  >\n    <el-icon v-if=\"icon\"><component :is=\"icon\" /></el-icon>\n    <span v-if=\"$slots.default\" :class=\"ns.e('inner')\">\n      <slot />\n    </span>\n\n    <slot v-if=\"$slots.icon\" name=\"icon\" />\n  </a>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { linkEmits, linkProps } from './link'\n\ndefineOptions({\n  name: 'ElLink',\n})\nconst props = defineProps(linkProps)\nconst emit = defineEmits(linkEmits)\n\nconst ns = useNamespace('link')\n\nfunction handleClick(event: MouseEvent) {\n  if (!props.disabled) emit('click', event)\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}