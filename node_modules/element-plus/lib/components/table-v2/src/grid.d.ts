import type { ExtractPropTypes } from 'vue';
export declare const tableV2GridProps: {
    readonly columns: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<{
        [key: string]: any;
        key: import("./types").KeyType;
        dataKey?: string | undefined;
        dataGetter?: import("./types").DataGetter<any> | undefined;
        align?: import("./types").Alignment | undefined;
        className?: any;
        fixed?: true | import("./types").FixedDirection | undefined;
        title?: string | undefined;
        hidden?: boolean | undefined;
        maxWidth?: number | undefined;
        minWidth?: number | undefined;
        resizable?: boolean | undefined;
        style?: import("vue").CSSProperties | undefined;
        sortable?: boolean | undefined;
        width: number;
        cellRenderer?: import("./types").CellRenderer<any> | undefined;
        headerRenderer?: import("./types").HeaderRenderer<any> | undefined;
    }[]>, unknown, true, unknown, unknown>;
    readonly data: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any[]>, unknown, true, unknown, unknown>;
    readonly fixedData: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<any[]>, unknown, unknown, unknown, unknown>;
    readonly estimatedRowHeight: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, never, false, never, never>;
    readonly width: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, unknown, true, unknown, unknown>;
    readonly height: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, unknown, true, unknown, unknown>;
    readonly headerWidth: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, unknown, true, unknown, unknown>;
    readonly headerHeight: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<number | number[]>, 50, unknown, unknown, unknown>;
    readonly bodyWidth: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, unknown, true, unknown, unknown>;
    readonly rowHeight: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, unknown, true, unknown, unknown>;
    readonly cache: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, 2, false, never, never>;
    readonly rowKey: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("./types").KeyType>, "id", unknown, unknown, unknown>;
    readonly useIsScrolling: BooleanConstructor;
    readonly class: StringConstructor;
    readonly style: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("vue").CSSProperties>, unknown, unknown, unknown, unknown>;
    readonly containerStyle: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<import("vue").CSSProperties>, unknown, unknown, unknown, unknown>;
    readonly onRowRendered: import("element-plus/es/utils").BuildPropReturn<FunctionConstructor, unknown, unknown, unknown, unknown>;
    readonly onScroll: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<(...args: any[]) => void>, unknown, unknown, unknown, unknown>;
};
export declare type TableV2GridProps = ExtractPropTypes<typeof tableV2GridProps>;
