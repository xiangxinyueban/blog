import type { CSSProperties, ExtractPropTypes } from 'vue';
import type { Alignment, CellRenderer, DataGetter, FixedDirection, HeaderRenderer } from './types';
export declare const tableV2ColumnProps: {
    readonly align: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<Alignment>, "left", unknown, unknown, unknown>;
    readonly class: StringConstructor;
    readonly dataKey: StringConstructor;
    readonly fixed: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<boolean | FixedDirection>, false, unknown, unknown, unknown>;
    readonly headerClass: StringConstructor;
    readonly hidden: BooleanConstructor;
    readonly resizable: BooleanConstructor;
    readonly style: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<CSSProperties>, unknown, unknown, unknown, unknown>;
    readonly sortable: BooleanConstructor;
    readonly title: StringConstructor;
    readonly maxWidth: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, undefined, unknown, unknown, unknown>;
    readonly minWidth: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, undefined, unknown, unknown, unknown>;
    readonly width: import("element-plus/es/utils").BuildPropReturn<NumberConstructor, unknown, true, unknown, unknown>;
    readonly cellRenderer: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<CellRenderer<any>>, unknown, unknown, unknown, unknown>;
    readonly dataGetter: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<DataGetter<any>>, unknown, unknown, unknown, unknown>;
    readonly headerRenderer: import("element-plus/es/utils").BuildPropReturn<import("element-plus/es/utils").PropWrapper<HeaderRenderer<any>>, unknown, unknown, unknown, unknown>;
};
export declare type TableV2ColumnProps = ExtractPropTypes<typeof tableV2ColumnProps>;
